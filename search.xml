<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>待办事项</title>
      <link href="//post/todo.html"/>
      <url>//post/todo.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-js" data-language="js"><code class="language-js">&#x2F;&#x2F; 1. headless-recorder&#x2F;&#x2F; 2. lightHouse https:&#x2F;&#x2F;blog.csdn.net&#x2F;tangdou369098655&#x2F;article&#x2F;details&#x2F;122531766&#x2F;&#x2F; 3. 博客封面生成&#x2F;&#x2F; 4. 装饰器模式 https:&#x2F;&#x2F;www.zoo.team&#x2F;article&#x2F;decorator&#x2F;&#x2F; 5. iconfont自定义图标 https:&#x2F;&#x2F;www.zoo.team&#x2F;article&#x2F;decorator&#x2F;&#x2F; 6. 函数式编程 https:&#x2F;&#x2F;www.zoo.team&#x2F;article&#x2F;function-production&#x2F;&#x2F; 7. 换肤 https:&#x2F;&#x2F;www.zoo.team&#x2F;article&#x2F;theme-scss</code></pre>]]></content>
      
      
      <categories>
          
          <category> Todo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Todo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter Bruno</title>
      <link href="//post/2022-05-20fluter-bruno.html"/>
      <url>//post/2022-05-20fluter-bruno.html</url>
      
        <content type="html"><![CDATA[<h1 id="Bruno"><a href="#Bruno" class="headerlink" title="Bruno"></a>Bruno</h1><p><img src="http://t-blog-images.aijs.top/img/20220520105610.webp"><br>Bruno 是由贝壳「用户体验中心 &amp; 移动端作业组」联合打造的一套企业级移动端 Flutter 组件库，于 12 月 10 日正式开源:</p><p><a href="https://bruno.ke.com/">官网</a></p><p><a href="https://pub.flutter-io.cn/packages/bruno">Pub 地址</a></p><p><a href="https://github.com/LianjiaTech/bruno">GitHub 仓库</a></p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>贝壳自 2018 年底开始对 Flutter 的探索和实践，Flutter 落地业务有效地提升了产研效率。但跨业务线协同效率较低，重复劳动力大，代码维护成本高等问题依旧凸显。Bruno 是贝壳针对上述问题在公司内发起的提效专项，致力于打造贝壳标准 Flutter 生态。经过两年的打磨和沉淀，Bruno 现已服务贝壳 B 端全线业务，涵盖 30 多种类型 100+  组件，为近 18 个 App 服务，新增页面组件覆盖率平均达到 80% 以上。</p><p>相信贝壳遇到的问题也是大型团队或者个人开发者不可避免的问题，目前针对该类问题的中后台解决方案层出不穷，但在 Flutter 生态中类似成熟解决方案匮乏。我们希望将贝壳在 Flutter 领域的实践经验回馈给社区，更加完善 Flutter 生态，因此 Bruno 正式开源。</p><h1 id="设计理念"><a href="#设计理念" class="headerlink" title="设计理念"></a>设计理念</h1><p>Bruno 基于生长、包容、联接的设计理念，赋予组件轻巧灵活、拥抱变化、包容万物的品质。</p><h1 id="Bruno-的优势"><a href="#Bruno-的优势" class="headerlink" title="Bruno 的优势"></a>Bruno 的优势</h1><ol><li>适度灵活、充分可扩展</li></ol><p>Bruno 倡导标准化下的自由、简单、灵活，基于 Flutter 基础组件的封装，使其具备适度灵活，使用组件提效尤为重要。同时组件支持充分可扩展，既可满足多产品的快速接入又能包容特殊场景。</p><p>经过两年的业务实践，我们最终产出了 102 个组件，覆盖类型有 图表、导航、数据录入、操作反馈、内容展示 等。</p><p><img src="http://t-blog-images.aijs.top/img/54b2f46cdc6ee8467b67d92d9c0d2d98.gif"><br>2. 连接设计&lt;–&gt;开发</p><p>Bruno 基于 Sketch MeaXure 二次开发，实现组件自动识别和标注。开发者可以从设计侧产出的标注稿中清晰的看到页面涵盖的组件，信息无缝传达，高效连接设计与开发。</p><p><img src="http://t-blog-images.aijs.top/img/a72e4aee43eb8e32589bef23dd95c75d.gif"><br>3. 主题定制、品牌风格自定义</p><p>Bruno 不仅支持全局色号的替换，还支持组件圆角、字体大小、内部间距等属性的定制。在定制全局样式打造自有品牌风格的同时，支持单个组件自定义满足特异化场景需求。</p><ul><li>默认基础规范</li></ul><img src="http://t-blog-images.aijs.top/img/20220520105949.webp" style="max-width:400px" /><img src="http://t-blog-images.aijs.top/img/20220520110003.webp" style="max-width:400px" /><ul><li>全局样式定制</li></ul><p><img src="http://t-blog-images.aijs.top/img/61dc33d90cd80e88c4a52cccdc713c48.gif"></p><ul><li>单组件样式定制</li></ul><p><img src="http://t-blog-images.aijs.top/img/6da0a3d9b63b47e64a127320597900eb.gif"><br>Bruno 还可支持单业务的全局配置，也就是说如果你是组件化工程结构，那么你可以定义每个业务组件的特有风格。</p><ol start="4"><li>物料承载、教程指引</li></ol><p>Bruno 官网承载产品设计物料、组件配套文档、Demo 下载、搜索等基础能力，同时配有教程指引开发也可操作 Sketch 插件设计页面，实现零设计资源介入。</p><p><img src="http://t-blog-images.aijs.top/img/ea334037633605e094d03338cc151045.gif"><br>Bruno 官网: <a href="https://bruno.ke.com/">https://bruno.ke.com</a></p><h1 id="未来展望"><a href="#未来展望" class="headerlink" title="未来展望"></a>未来展望</h1><ol><li>丰富和完善组件</li></ol><p>目前 Bruno 组件涵盖种类可以覆盖常见使用场景，满足企业建立自有品牌形象 App 需求。未来我们会根据业务发展和产品升级不断迭代组件，丰富产品内容提升视觉体验。</p><ol start="2"><li>提升落地效率</li></ol><p>我们不止关注组件的设计与研发，组件落地也是提升产研效率至关重要的环节，因此我们对 Sketch MeaXure 做了二次改造，实现组件自动化标注。同时贝壳产研团队把自动化标注能力线上化，进一步提升组件落地效率。</p><p>3、UI 自动化走查</p><p>贝壳产研团队也在探索 UI 自动化走查方向，期望解放设计侧走查人力，让设计师更多投入对产品的洞察理解，创造优质设计，提升视觉体验。</p>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> mobile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm开发wiki编辑器问题总结</title>
      <link href="//post/2022-05-19npm-pkg.html"/>
      <url>//post/2022-05-19npm-pkg.html</url>
      
        <content type="html"><![CDATA[<h2 id="tsconfig-ts"><a href="#tsconfig-ts" class="headerlink" title="tsconfig.ts"></a>tsconfig.ts</h2><pre class="line-numbers language-none"><code class="language-none">&#123;  &#x2F;&#x2F; 编译选项  &quot;compilerOptions&quot;: &#123;    &#x2F;&#x2F; 生成代码的语言版本：将我们写的 TS 代码编译成哪个版本的 JS 代码    &quot;target&quot;: &quot;es5&quot;,    &#x2F;&#x2F; 指定要包含在编译中的 library    &#x2F;&#x2F; https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;TypeScript&#x2F;blob&#x2F;90e83adb44&#x2F;lib&#x2F;lib.dom.iterable.d.ts    &quot;lib&quot;: [&quot;dom&quot;, &quot;dom.iterable&quot;, &quot;esnext&quot;],    &#x2F;&#x2F; 允许 ts 编译器编译 js 文件    &quot;allowJs&quot;: true,    &#x2F;&#x2F; 跳过类型声明文件的类型检查    &quot;skipLibCheck&quot;: true,    &#x2F;&#x2F; es 模块 互操作，屏蔽 ESModule 和 CommonJS 之间的差异    &quot;esModuleInterop&quot;: true,    &#x2F;&#x2F; 允许通过 import x from &#39;y&#39; 即使模块没有显式指定 default 导出    &quot;allowSyntheticDefaultImports&quot;: true,    &#x2F;&#x2F; 开启严格模式    &quot;strict&quot;: true,    &#x2F;&#x2F; 对文件名称强制区分大小写    &quot;forceConsistentCasingInFileNames&quot;: true,    &#x2F;&#x2F; 为 switch 语句启用错误报告    &quot;noFallthroughCasesInSwitch&quot;: true,    &#x2F;&#x2F; 生成代码的模块化标准    &quot;module&quot;: &quot;esnext&quot;,    &#x2F;&#x2F; 模块解析（查找）策略    &quot;moduleResolution&quot;: &quot;node&quot;,    &#x2F;&#x2F; 允许导入扩展名为.json的模块    &quot;resolveJsonModule&quot;: true,    &#x2F;&#x2F; 是否将没有 import&#x2F;export 的文件视为旧（全局而非模块化）脚本文件    &quot;isolatedModules&quot;: true,    &#x2F;&#x2F; 编译时不生成任何JS文件（只进行类型检查）    &quot;noEmit&quot;: true,    &#x2F;&#x2F; 指定将 JSX 编译成什么形式    &quot;jsx&quot;: &quot;react-jsx&quot;  &#125;,  &#x2F;&#x2F; 指定允许 ts 处理的目录  &quot;include&quot;: [&quot;src&quot;]&#125;&#x2F;&#x2F; https:&#x2F;&#x2F;blog.csdn.net&#x2F;m0_62118859&#x2F;article&#x2F;details&#x2F;124543485</code></pre><h2 id="Cannot-read-properties-of-null"><a href="#Cannot-read-properties-of-null" class="headerlink" title="Cannot read properties of null"></a>Cannot read properties of null</h2><pre class="line-numbers language-none"><code class="language-none">react.development.js:1621 Uncaught TypeError: Cannot read properties of null</code></pre><hr/>## ahooks  版本<ol><li><p>useControlledValue</p><pre class="line-numbers language-none"><code class="language-none">Uncaught SyntaxError: The requested module &#39;&#x2F;node_modules&#x2F;.vite&#x2F;deps&#x2F;ahooks.js?v&#x3D;a7b43f7a&#39; does not provide an export named &#39;useControlledValue&#39; (at index.tsx:2:1)</code></pre><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>Deprecated the useControlledValue naming left over from 1.0, please use useControllableValue instead<br><a href="https://github.com/alibaba/hooks/releases?page=5#:~:text=Deprecated%20the%20useControlledValue%20naming%20left%20over%20from%201.0%2C%20please%20use%20useControllableValue%20instead"><a href="https://github.com/alibaba/hooks/releases/tag/v3.0.0-alpha.4">v3.0.0-alpha.4</a></a></p></blockquote></li><li><p>useRequest</p></li></ol><pre class="line-numbers language-none"><code class="language-none">react_devtools_backend.js:4026 Warning: Failed prop type: The prop &#96;loadMore&#96; is marked as required in &#96;InfiniteScroll&#96;, but its value is &#96;undefined&#96;.</code></pre><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>Removed loadMore related attributes, it is recommended to use useInfiniteScroll to achieve unlimited loading capacity.<br><a href="https://github.com/alibaba/hooks/releases/tag/v3.0.0-alpha.4">v3.0.0-alpha.4</a></p></blockquote><p><a href="http://quanzhan.applemei.com/webStack/TmpJeE1BPT0=">除了 dependencies 和 devDependencies，其他的依赖有什么作用呢</a></p><pre class="line-numbers language-none"><code class="language-none">Pre-bundling dependencies:reactrecoilreact-domreact-router-domantd(...and 29 more)</code></pre><h3 id="本地npm-link处理不了依赖冲突"><a href="#本地npm-link处理不了依赖冲突" class="headerlink" title="本地npm link处理不了依赖冲突"></a>本地<code>npm link</code>处理不了依赖冲突</h3><ul><li>老版本可以运行</li></ul><p><img src="http://t-blog-images.aijs.top/img/20220519183558.webp"></p><ul><li>新版本报错</li><li>原因 ahooks^3.x.x没有v2版本api</li></ul><hr/>### 发布安装到项目中测试- 发布 1. npm 脚本<pre class="line-numbers language-none"><code class="language-none">&quot;scripts&quot;: &#123;    &quot;dev&quot;: &quot;vite --port 3004&quot;,    &quot;start&quot;: &quot;yarn build:css &amp;&amp; webpack serve --config config&#x2F;webpack.dev.config.js&quot;,    &quot;copy:css&quot;: &quot;cp src&#x2F;**&#x2F;*.css dist&#x2F; &amp;&amp; rsync src&#x2F;styles&#x2F;*.css dist&#x2F;styles&#x2F;&quot;,    &quot;build&quot;: &quot;tsc&quot;,    &quot;build:css&quot;: &quot;node-sass src&#x2F; -o src&#x2F; &quot;,    &quot;prepublishOnly&quot;: &quot;rm -rf dist&#x2F; &amp;&amp; yarn build &amp;&amp; yarn build:css &amp;&amp; yarn copy:css&quot;,    &quot;t&quot;: &quot;rm -rf dist&#x2F; &amp;&amp; yarn build &amp;&amp; yarn build:css &amp;&amp; yarn copy:css&quot;,    &quot;push:beta&quot;: &quot;npm publish --tag beta&quot;  &#125;,</code></pre><ol start="2"><li>执行脚本<br><code>$ yarn push:beta</code></li><li>发布结果</li></ol><pre class="line-numbers language-none"><code class="language-none">## Current Tags*   [0.0.1 ](https:&#x2F;&#x2F;tnpm.ty-inc.top&#x2F;package&#x2F;@ty-fe&#x2F;slate-wiki-pro&#x2F;v&#x2F;0.0.1)                               ...           beta (a few seconds ago)*   [0.0.1 ](https:&#x2F;&#x2F;tnpm.ty-inc.top&#x2F;package&#x2F;@ty-fe&#x2F;slate-wiki-pro&#x2F;v&#x2F;0.0.1)                               ...           latest (a few seconds ago)</code></pre><p><img src="http://t-blog-images.aijs.top/img/20220519183625.webp"><br><img src="http://t-blog-images.aijs.top/img/20220519183638.webp"></p><hr/>## 图片没有渲染，修改，打包重新发布`0.0.1-220519beta`版本测试<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">slate-wiki@0.0.1-220519betanpm notice &#x3D;&#x3D;&#x3D; Tarball Details &#x3D;&#x3D;&#x3D; npm notice name:          @ty-fe&#x2F;slate-wiki                     npm notice version:       0.0.1-220519beta                        npm notice filename:      @ty-fe&#x2F;slate-wiki-0.0.1-220519beta.tgznpm notice package size:  228.0 kB                                npm notice unpacked size: 1.2 MB                                  npm notice shasum:        a2991de4933a9e5039ceb7082c5e0a80c2db828cnpm notice integrity:     sha512-iHQKpR2LM+F6Z[...]XDN40tHfwMxNg&#x3D;&#x3D;npm notice total files:   417                                     npm notice + @ty-fe&#x2F;slate-wiki@0.0.1-220519beta✨  Done in 16.36s.slate-wiki-pro@0.0.1-220519betanpm notice &#x3D;&#x3D;&#x3D; Tarball Details &#x3D;&#x3D;&#x3D; npm notice name:          @ty-fe&#x2F;slate-wiki-pro                     npm notice version:       0.0.1-220519beta                            npm notice filename:      @ty-fe&#x2F;slate-wiki-pro-0.0.1-220519beta.tgznpm notice package size:  83.5 kB                                     npm notice unpacked size: 413.7 kB                                    npm notice shasum:        85cbe6fbffafc75db16e02427d1eac9b6a906ec3    npm notice integrity:     sha512-3viVco6ssb2N3[...]xxisHN9+qYnCA&#x3D;&#x3D;    npm notice total files:   205                                         npm notice + @ty-fe&#x2F;slate-wiki-pro@0.0.1-220519beta✨  Done in 14.68s.</code></pre><hr/><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li>传染性<br>slate-wiki-pro,依赖于slate-wiki。slate-wiki改动，项目依赖slate-wiki-pro，需要发slate-wiki和slate-wiki-pro，项目要安装slate-wiki-pro</li></ol><p><code>是否可以让项目直接依赖slate-wiki、slate-wiki-pro改动哪个发布哪个，互不影响？</code></p><ol start="2"><li>项目很卡</li></ol><p><code>将slate、slate-wiki、slate-wiki-pro使用umd资源，避免重复编译是否可以？</code></p><ol start="3"><li>依赖贼多</li></ol><pre class="line-numbers language-none"><code class="language-none">[######--------------------------------------------------] 49992&#x2F;102014</code></pre><ol start="4"><li>启动没有想象中那么快了</li></ol><p>vite预编译时间过长  130262ms &#x2F; 1000 &#x2F; 60 大概两分钟，加载编译大概几分钟，慢的吓人</p><pre class="line-numbers language-none"><code class="language-none">vite v2.7.1 dev server running at:&gt; Local: http:&#x2F;&#x2F;localhost:3005&#x2F;&gt; Network: use &#96;--host&#96; to exposeready in 130262ms.  #首次编译vite v2.7.1 dev server running at:&gt; Local: http:&#x2F;&#x2F;localhost:3005&#x2F;&gt; Network: use &#96;--host&#96; to exposeready in 43312ms. #非首次编译</code></pre><hr/><h2 id="代码放仓库"><a href="#代码放仓库" class="headerlink" title="代码放仓库"></a>代码放仓库</h2><ul><li>slate-wiki</li></ul><p><img src="http://t-blog-images.aijs.top/img/20220519183700.webp"></p><p>Command line instructions<br>You can also upload existing files from your computer using the instructions below.</p><p>Git global setup</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;陈海龙&quot;git config --global user.email &quot;haotian.chen@ty.com&quot;</code></pre><p>Create a new repository</p><pre class="line-numbers language-none"><code class="language-none">git clone ssh:&#x2F;&#x2F;git@registry.code.ty-inc.top:10023&#x2F;fe-efficacy&#x2F;slate-wiki.gitcd slate-wikitouch README.mdgit add README.mdgit commit -m &quot;add README&quot;</code></pre><p>Push an existing folder</p><pre class="line-numbers language-none"><code class="language-none">cd existing_foldergit initgit remote add origin ssh:&#x2F;&#x2F;git@registry.code.ty-inc.top:10023&#x2F;fe-efficacy&#x2F;slate-wiki.gitgit add .git commit -m &quot;Initial commit&quot;</code></pre><p>Push an existing Git repository</p><pre class="line-numbers language-none"><code class="language-none">cd existing_repogit remote rename origin old-origingit remote add origin ssh:&#x2F;&#x2F;git@registry.code.ty-inc.top:10023&#x2F;fe-efficacy&#x2F;slate-wiki.git</code></pre><ul><li>slate-wiki-pro<br>略<hr/></li></ul><p>深入了解打包，本站请搜<a href="https://v.aijs.top/post/2022-05-19npm"><code>npm 版本的依赖</code></a></p>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm 版本的依赖</title>
      <link href="//post/2022-05-19npm.html"/>
      <url>//post/2022-05-19npm.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>提起 npm，大家第一个想到的应该就是 npm install 了，但是 npm install 之后生成的 node_modules 大家有观察过吗？package-lock.json 文件的作用大家知道吗？除了 dependencies 和 devDependencies，其他的依赖有什么作用呢？接下来，本文将针对 npm 中的你可能忽略的细节和大家分享一些经验 。</p><h1 id="npm-安装机制"><a href="#npm-安装机制" class="headerlink" title="npm 安装机制"></a>npm 安装机制</h1><p>A 和 B 同时依赖 C，C 这个包会被安装在哪里呢？C 的版本相同和版本不同时安装会有什么差异呢？package.json 中包的前后顺序对于安装时有什么影响吗？这些问题平时大家可能没有注意过，今天我们就来一起研究一下吧。</p><h2 id="A-和-B-同时依赖-C，这个包会被安装在哪里呢？"><a href="#A-和-B-同时依赖-C，这个包会被安装在哪里呢？" class="headerlink" title="A 和 B 同时依赖 C，这个包会被安装在哪里呢？"></a>A 和 B 同时依赖 C，这个包会被安装在哪里呢？</h2><p>假如有 A 和 B 两个包，两个包都依赖 C 这个包，npm 2 会依次递归安装 A 和 B 两个包及其子依赖包到 node_modules 中。执行完毕后，我们会看到 <code>./node_modules</code> 这层目录只含有这两个子目录：</p><pre class="line-numbers language-none"><code class="language-none">node_modules&#x2F; ├─┬ A │ ├── C ├─┬ B │ └── C </code></pre><p>如果使用 npm 3 来进行安装的话，<code>./node_modules</code> 下的目录将会包含三个子目录：</p><pre class="line-numbers language-none"><code class="language-none">node_modules&#x2F; ├─┬ A ├─┬ B ├─┬ C </code></pre><p>为什么会出现这样的区别呢？这就要从 npm 的工作方式说起了：</p><h2 id="npm-2-和-npm-3-模块安装机制的差异"><a href="#npm-2-和-npm-3-模块安装机制的差异" class="headerlink" title="npm 2 和 npm 3 模块安装机制的差异"></a>npm 2 和 npm 3 模块安装机制的差异</h2><p>虽然目前最新的 npm 版本是 npm 6，但 npm 2 到 npm 3 的版本变更中实现了目录打平，与其他版本相比差别较大。因此，让我们具体看下这两个版本的差异。</p><p>npm 2 在安装依赖包时，采用简单的递归安装方法。执行 npm install 后，npm 根据 dependencies 和 devDependencies 属性中指定的包来确定第一层依赖，npm 2 会根据第一层依赖的子依赖，递归安装各个包到子依赖的 node_modules 中，直到子依赖不再依赖其他模块。执行完毕后，我们会看到 .&#x2F;node_modules 这层目录中包含有我们 package.json 文件中所有的依赖包，而这些依赖包的子依赖包都安装在了自己的 node_modules 中 ，形成类似于下面的依赖树：</p><p><img src="http://t-blog-images.aijs.top/img/20220519181427.webp"></p><p>这样的目录有较为明显的好处：</p><p>1）层级结构非常明显，可以清楚的在第一层的 node_modules 中看到我们安装的所有包的子目录；</p><p>2）在已知自己所需包的名字以及版本号时，可以复制粘贴相应的文件到 node_modules 中，然后手动更改 package.json 中的配置；</p><p>3）如果想要删除某个包，只需要简单的删除 package.json 文件中相应的某一行，然后删除 node_modules 中该包的目录；</p><p>但是这样的层级结构也有较为明显的缺陷，当我的 A，B，C 三个包中有相同的依赖 D 时，执行 <code>npm install</code> 后，D 会被重复下载三次，而随着我们的项目越来越复杂，<code>node_modules</code> 中的依赖树也会越来越复杂，像 D 这样的包也会越来越多，造成了大量的冗余；在 windows 系统中，甚至会因为目录的层级太深导致文件的路径过长，触发文件路径不能超过 280 个字符的错误；</p><p>为了解决以上问题，npm 3 的 node_modules 目录改成了更为扁平状的层级结构，尽量把依赖以及依赖的依赖平铺在 node_modules 文件夹下共享使用。</p><h2 id="npm-3-对于同一依赖的不同版本会怎么处理呢？"><a href="#npm-3-对于同一依赖的不同版本会怎么处理呢？" class="headerlink" title="npm 3 对于同一依赖的不同版本会怎么处理呢？"></a>npm 3 对于同一依赖的不同版本会怎么处理呢？</h2><p>npm 3 会遍历所有的节点，逐个将模块放在 node_modules 的第一层，当发现有重复模块时，则丢弃， 如果遇到某些依赖版本不兼容的问题，则继续采用 npm 2 的处理方式，前面的放在 node_modules 目录中，后面的放在依赖树中。举个例子： A，B，依赖 D(v 0.0.1)，C 依赖 D(v 0.0.2):</p><p><img src="http://t-blog-images.aijs.top/img/20220519181500.webp"></p><p>但是 npm 3 会带来一个新的问题：由于在执行 npm install 的时候，按照 package.json 里依赖的顺序依次解析，上图如果 C 的顺序在 A，B 的前边，node_modules 树则会改变，会出现下边的情况：</p><p><img src="http://t-blog-images.aijs.top/img/20220519181517.webp"></p><p>由此可见，npm 3 并未完全解决冗余的问题，甚至还会带来新的问题。</p><h2 id="为什么会出现-package-lock-json-呢？"><a href="#为什么会出现-package-lock-json-呢？" class="headerlink" title="为什么会出现 package-lock.json 呢？"></a>为什么会出现 package-lock.json 呢？</h2><p>为什么会有 package-lock.json 文件呢？这个我们就要先从 package.json 文件说起了。</p><h2 id="package-json-的不足之处"><a href="#package-json-的不足之处" class="headerlink" title="package.json 的不足之处"></a>package.json 的不足之处</h2><p>npm install 执行后，会生成一个 node_modules 树，在理想情况下， 希望对于同一个 package.json 总是生成完全相同 node_modules 树。在某些情况下，确实如此。但在多数情况下，npm 无法做到这一点。有以下两个原因：</p><p>1）某些依赖项自上次安装以来，可能已发布了新版本 。比如：A 包在团队中第一个人安装的时候是 1.0.5 版本，package.json 中的配置项为 <code>A: &#39;^1.0.5&#39;</code> ；团队中第二个人把代码拉下来的时候，A 包的版本已经升级成了 1.0.8，根据 package.json 中的 semver-range version 规范，此时第二个人 npm install 后 A 的版本为 1.0.8； 可能会造成因为依赖版本不同而导致的 bug；</p><p>2）针对 1）中的问题，可能有的小伙伴会想，把 A 的版本号固定为 <code>A: &#39;1.0.5&#39;</code> 不就可以了吗？但是这样的做法其实并没有解决问题， 比如 A 的某个依赖在第一个人下载的时候是 2.1.3 版本，但是第二个人下载的时候已经升级到了 2.2.5 版本，此时生成的 node_modules 树依旧不完全相同 ，固定版本只是固定来自身的版本，依赖的版本无法固定。</p><h2 id="针对-package-json-不足的解决方法"><a href="#针对-package-json-不足的解决方法" class="headerlink" title="针对 package.json 不足的解决方法"></a>针对 package.json 不足的解决方法</h2><p>为了解决上述问题以及 npm 3 的问题，在 npm 5.0 版本后，npm install 后都会自动生成一个 package-lock.json 文件 ，当包中有 package-lock.json 文件时，npm install 执行时，如果 package.json 和 package-lock.json 中的版本兼容，会根据 package-lock.json 中的版本下载；如果不兼容，将会根据 package.json 的版本，更新 package-lock.json 中的版本，已保证 package-lock.json 中的版本兼容 package.json。</p><h2 id="package-lock-json-文件的结构"><a href="#package-lock-json-文件的结构" class="headerlink" title="package-lock.json 文件的结构"></a>package-lock.json 文件的结构</h2><p>package-lock.json 文件中的 name、version 与 package.json 中的 name、version 一样，描述了当前包的名字和版本，dependencies 是一个对象，该对象和 node_modules 中的包结构一一对应，对象的 key 为包的名称，值为包的一些描述信息， 根据 <a href="https://docs.npmjs.com/configuring-npm/package-lock-json.html#requires">package-lock-json官方文档</a>，主要的结构如下：</p><ul><li><p>version ：包版本，即这个包当前安装在 node_modules 中的版本</p></li><li><p>resolved ：包具体的安装来源</p></li><li><p>integrity ：包 hash 值，验证已安装的软件包是否被改动过、是否已失效</p></li><li><p>requires ：对应子依赖的依赖，与子依赖的 package.json 中 dependencies 的依赖项相同</p></li><li><p>dependencies ：结构和外层的 <code>dependencies</code> 结构相同，存储安装在子依赖 <code>node_modules</code> 中的依赖包</p></li></ul><p>需要注意的是，并不是所有的子依赖都有 <code>dependencies</code> 属性，只有子依赖的依赖和当前已安装在根目录的 <code>node_modules</code> 中的依赖冲突之后，才会有这个属性。</p><h2 id="package-lock-json-文件的作用"><a href="#package-lock-json-文件的作用" class="headerlink" title="package-lock.json 文件的作用"></a>package-lock.json 文件的作用</h2><p>在团队开发中，确保每个团队成员安装的依赖版本是一致的，确定一棵唯一的 node_modules 树；</p><p>node_modules 目录本身是不会被提交到代码库的，但是 package-lock.json 可以提交到代码库，如果开发人员想要回溯到某一天的目录状态，只需要把 package.json 和 package-lock.json 这两个文件回退到那一天即可 。</p><p>由于 package-lock.json 和 node_modules 中的依赖嵌套完全一致，可以更加清楚的了解树的结构及其变化。</p><p>在安装时，npm 会比较 node_modules 已有的包，和 package-lock.json 进行比较，如果重复的话，就跳过安装 ，从而优化了安装的过程。</p><h1 id="依赖的区别与使用场景"><a href="#依赖的区别与使用场景" class="headerlink" title="依赖的区别与使用场景"></a>依赖的区别与使用场景</h1><h2 id="npm-目前支持以下几类依赖包管理包括"><a href="#npm-目前支持以下几类依赖包管理包括" class="headerlink" title="npm 目前支持以下几类依赖包管理包括"></a>npm 目前支持以下几类依赖包管理包括</h2><ol><li><p>dependencies</p></li><li><p>devDependencies</p></li><li><p>optionalDependencies 可选择的依赖包</p></li><li><p>peerDependencies 同等依赖</p></li><li><p>bundledDependencies 捆绑依赖包</p></li></ol><p>下面我们来看一下这几种依赖的区别以及各自的应用场景：</p><h2 id="dependencies"><a href="#dependencies" class="headerlink" title="dependencies"></a>dependencies</h2><p>dependencies 是无论在开发环境还是在生产环境都必须使用的依赖，是我们最常用的依赖包管理对象，例如 React，Loadsh，Axios 等，通过 npm install XXX 下载的包都会默认安装在 dependencies 对象中，也可以使用 <code>npm install XXX --save</code> 下载 dependencies 中的包；</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;devDependencies&quot;:&#123;  &quot;eslint&quot;: &quot;^5.0.0&quot;,  &quot;debug&quot;: &quot;^3.1.0&quot;,&#125;</code></pre><h2 id="devDependencies"><a href="#devDependencies" class="headerlink" title="devDependencies"></a>devDependencies</h2><p>devDependencies 是指可以在开发环境使用的依赖，例如 eslint，debug 等，通过 <code>npm install packageName --save-dev</code> 下载的包都会在 devDependencies 对象中；</p><p>dependencies 和 devDependencies 最大的区别是在打包运行时，执行 <code>npm install</code> 时默认会把所有依赖全部安装，但是如果使用 <code>npm install --production</code> 时就只会安装 dependencies 中的依赖，如果是 node 服务项目，就可以采用这样的方式用于服务运行时安装和打包，减少包大小。</p><h2 id="optionalDependencies"><a href="#optionalDependencies" class="headerlink" title="optionalDependencies"></a>optionalDependencies</h2><p>optionalDependencies 指的是可以选择的依赖，当你希望某些依赖即使下载失败或者没有找到时，项目依然可以正常运行或者 npm 继续运行的时，就可以把这些依赖放在 optionalDependencies 对象中，但是 optionalDependencies 会覆盖 dependencies 中的同名依赖包，所以不要把一个包同时写进两个对象中。</p><p>optionalDependencies 就像是我们的代码的一种保护机制一样，如果包存在的话就走存在的逻辑，不存在的就走不存在的逻辑。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">try &#123;   var axios &#x3D; require(&#39;axios&#39;)   var fooVersion &#x3D; require(&#39;axios&#x2F;package.json&#39;).version &#125; catch (er) &#123;   foo &#x3D; null &#125; &#x2F;&#x2F; .. then later in your program .. if (foo) &#123;   foo.doFooThings() &#125; </code></pre><h2 id="peerDependencies"><a href="#peerDependencies" class="headerlink" title="peerDependencies"></a>peerDependencies</h2><p>peerDependencies 用于指定你当前的插件兼容的宿主必须要安装的包的版本，这个是什么意思呢？举个例子🌰：我们常用的 react 组件库 <code>ant-design@3.x</code> 的 <code>package.json</code> 中的配置如下：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;peerDependencies&quot;: &#123;   &quot;react&quot;: &quot;&gt;&#x3D;16.9.0&quot;,   &quot;react-dom&quot;: &quot;&gt;&#x3D;16.9.0&quot;  &#125;, </code></pre><p>假设我们创建了一个名为 project 的项目，在此项目中我们要使用 <code>ant-design@3.x</code> 这个插件，此时我们的项目就必须先安装 React &gt;&#x3D; 16.9.0 和 React-dom &gt;&#x3D; 16.9.0 的版本。</p><p>在 npm 2 中，当我们下载 <code>ant-design@3.x</code> 时，peerDependencies 中指定的依赖会随着 <code>ant-design@3.x</code> 一起被强制安装，所以我们不需要在宿主项目的 <code>package.json</code> 文件中指定 peerDependencies 中的依赖，但是在 npm 3 中，不会再强制安装 peerDependencies 中所指定的包，而是通过警告的方式来提示我们，此时就需要手动在 package.json 文件中手动添加依赖；</p><h2 id="bundledDependencies"><a href="#bundledDependencies" class="headerlink" title="bundledDependencies"></a>bundledDependencies</h2><p>这个依赖项也可以记为 bundleDependencies，与其他几种依赖项不同，他不是一个键值对的对象，而是一个数组，数组里是包名的字符串，例如：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;   &quot;name&quot;: &quot;project&quot;,   &quot;version&quot;: &quot;1.0.0&quot;,   &quot;bundleDependencies&quot;: [     &quot;axios&quot;,      &quot;lodash&quot;   ] &#125; </code></pre><p>当使用 npm pack 的方式来打包时，上述的例子会生成一个 project-1.0.0.tgz 的文件，在使用了 bundledDependencies 后，打包时会把 Axios 和 Lodash 这两个依赖一起放入包中，之后有人使用 <code>npm install project-1.0.0.tgz</code> 下载包时，Axios 和 Lodash 这两个依赖也会被安装。需要注意的是安装之后 Axios 和 Lodash 这两个包的信息在 dependencies 中，并且不包括版本信息。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;bundleDependencies&quot;: [     &quot;axios&quot;,     &quot;lodash&quot;   ], &quot;dependencies&quot;: &#123;   &quot;axios&quot;: &quot;*&quot;,   &quot;lodash&quot;: &quot;*&quot; &#125;, </code></pre><p>如果我们使用常规的 npm publish 来发布的话，这个属性是不会生效的，所以日常情况中使用的较少。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文介绍的是 npm 2，npm 3，package-lock.json 以及几种依赖的区别和使用场景，希望能够让大家对 npm 的了解更加多一点，有什么不清楚的地方或者不足之处欢迎大家在评论区留言。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li><a href="https://www.zoo.team/article/npm-details">原文</a></li><li><a href="https://docs.npmjs.com/files/package.json#peerdependencies">package.json官方文档</a></li><li><a href="https://docs.npmjs.com/configuring-npm/package-lock-json.html#requires">package-lock-json官方文档</a></li><li><a href="https://juejin.im/post/6844903582337237006#heading-0">npm文档总结</a></li><li><a href="https://www.npmjs.cn/cli/pack/">npm-pack</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式</title>
      <link href="//post/2022-05-13design_mode.html"/>
      <url>//post/2022-05-13design_mode.html</url>
      
        <content type="html"><![CDATA[<h2 id="先聊用到过哪些，背后的设计模式是什么"><a href="#先聊用到过哪些，背后的设计模式是什么" class="headerlink" title="先聊用到过哪些，背后的设计模式是什么"></a>先聊用到过哪些，背后的设计模式是什么</h2><ol><li>实例化一个 axios 实例，全局都来使用它 <em>单例模式</em></li><li>兄弟组件通信,事件监听 <em>观察者模式</em></li><li>构造函数继承、类的继承 <em>构造函数模式</em></li><li>实例化不同的实例 <em>工厂模式</em></li><li>优化中的<code>事件代理</code><em>代理模式</em></li><li>esm、commonjs<em>模块模式</em></li></ol><p><em>熟悉而又陌生</em>：熟悉的是一直在用，陌生的是学名竟然是这些。我都有点怀疑了，这是真的吗？是真的吗？～～～</p><p><img    src="https://img1.baidu.com/it/u=1902986975,2375222058&fm=253&fmt=auto&app=138&f=JPEG?w=535&h=500"    width=100 style="border-radius: 10px"    /></p>   <div style="font-size: 20px; color: orange;margin-top: 30px">来～来～来～，我们继续。。。</div><h2 id="啥呀"><a href="#啥呀" class="headerlink" title="啥呀"></a>啥呀</h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>“设计模式(英语 design pattern)是对面向对象设计中<code>反复出现的问题的解决方案</code>。这个术语是在1990年代由Erich Gamma等人从建筑设计领域<code>引入到</code>计算机科学中来的。”</p></blockquote><h2 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h2><h2 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h2><ul><li>作用：访问控制</li><li>距离：事件代理、Proxy、Object.defineProperty</li></ul><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><ul><li>定义：唯一实例，全局可访问</li><li>场景：请求实例、全局缓存、线程池、window 对象、登录浮框</li><li>实现：已经创建过的直接返回，不重复创建</li></ul><h2 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h2><ul><li>作用：创建同一类对象</li><li>分类：<em>简单工厂_、_方法工厂</em></li></ul><h3 id="1-简单工厂"><a href="#1-简单工厂" class="headerlink" title="1. 简单工厂"></a>1. 简单工厂</h3><ul><li>例如：项目中根据用户权限渲染不同的页面，在不同权限等级用户的构造函数中，保存用户可以看到的页面</li><li>优点：一个正确的参数，就可以获取到所需要的对象，无需知道其创建的具体细节</li><li>缺点：函数会成为一个超级函数，难以维护，简单工厂适用于创建少量对象，对象的逻辑不能复杂</li></ul><h3 id="2-工厂方法"><a href="#2-工厂方法" class="headerlink" title="2. 工厂方法"></a>2. 工厂方法</h3><ul><li>本质：将创建对象的工作，推迟到子类中，这样核心类就变成抽象类</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">let UserFactory &#x3D; function (type) &#123;  if (this instanceof UserFactory) &#123;    return new this[type]();  &#125; else &#123;    return new UserFactory(type);  &#125;&#125;;&#x2F;&#x2F; 工厂方法，函数的原型中设置所有对象的构造函数UserFactory.prototype &#x3D; &#123;  SuperAdmin: function () &#123;    this.name &#x3D; &quot;超级管理员&quot;;    this.viewPage &#x3D; [&quot;首页&quot;, &quot;订单管理&quot;, &quot;用户管理&quot;, &quot;应用管理&quot;, &quot;权限管理&quot;];  &#125;,  Admin: function () &#123;    this.name &#x3D; &quot;管理员&quot;;    this.viewPage &#x3D; [&quot;首页&quot;, &quot;订单管理&quot;, &quot;用户管理&quot;];  &#125;,  NormalUser: function () &#123;    this.name &#x3D; &quot;普通用户&quot;;    this.viewPage &#x3D; [&quot;首页&quot;, &quot;订单管理&quot;];  &#125;,&#125;;&#x2F;&#x2F; 调用let superAdmin &#x3D; new UserFactory(&quot;SuperAdmin&quot;);let admin &#x3D; new UserFactory(&quot;Admin&quot;);let normalUser &#x3D; new UserFactory(&quot;NormalUser&quot;);</code></pre><h3 id="3-抽象工厂"><a href="#3-抽象工厂" class="headerlink" title="3. 抽象工厂"></a>3. 抽象工厂</h3><ul><li></li></ul><h2 id="构造函数模式"><a href="#构造函数模式" class="headerlink" title="构造函数模式"></a>构造函数模式</h2><h2 id="👀-观察者模式"><a href="#👀-观察者模式" class="headerlink" title="👀 观察者模式"></a>👀 观察者模式</h2><ul><li>定义： 对象间的一种一对多的依赖关系</li><li>作用：一个对象状态发生变化时，所有依赖他的对象，都将得到通知</li><li>优点：解耦</li><li>组成：发布者、订阅者</li><li>场景：事件监听、eventBus</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">document.body.addEventListener(&quot;click&quot;, function () &#123;&#125;, false);</code></pre><h2 id="混合模式"><a href="#混合模式" class="headerlink" title="混合模式"></a>混合模式</h2><h2 id="模块模式"><a href="#模块模式" class="headerlink" title="模块模式"></a>模块模式</h2><ul><li>作用：避免全局污染，按需暴露</li><li>实现：多采用闭包</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">var Person &#x3D; (function () &#123;  var name &#x3D; &quot;xxx&quot;;  function sayName(params) &#123;    console.log(name);  &#125;  return &#123;    name,    sayName,  &#125;;&#125;)();</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ant design form设置值 !== 获取值</title>
      <link href="//post/2022-05-13react.html"/>
      <url>//post/2022-05-13react.html</url>
      
        <content type="html"><![CDATA[<h2 id="有意思的事"><a href="#有意思的事" class="headerlink" title="有意思的事"></a>有意思的事</h2><ul><li>今天维护项目遇到一个有意思的事，直观感受，设置值，再取出来，貌似没毛病<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">  &#x2F;&#x2F; ...  const [values, setValues] &#x3D; useState&lt;Record&lt;string, any&gt;&gt;()  const &#123; applyStartTime, applyEndTime, attendanceType, staffId &#125; &#x3D; values || &#123;&#125;  const getDetail &#x3D; usePersistFn(async () &#x3D;&gt; &#123;    &#x2F;&#x2F; ...略    const obj: Record&lt;string, any&gt; &#x3D; &#123;      staffId: applyStaff.staffId,      attendanceType: res.result.attendanceType,      applyStartTime: &#123;        value: moment(res.result.applyStartTime),        half: res.result.startDayType,      &#125;,      applyEndTime: &#123;        value: moment(res.result.applyEndTime),        half: res.result.endDayType,      &#125;,      applyReason,      applyAttachments,    &#125;    &#x2F;&#x2F; ...略    form.setFieldsValue(obj)    setValues(form.getFieldsValue())  &#125;)  &#x2F;&#x2F; ...略  const &#123; total, loading: totalLoading &#125; &#x3D; useCaculateDays(    &#123;      start: applyStartTime,      end: applyEndTime,    &#125;,    staffId,    attendanceType,  )  &#x2F;&#x2F; ...略  &#x2F;&#x2F; AnualForm组件  &lt;Form.Item name&#x3D;&quot;applyStartTime&quot; label&#x3D;&quot;起始日期&quot; rules&#x3D;&#123;[&#123; required: true &#125;]&#125;&gt;      &lt;HalftDatePicker predict&#x3D;&#123;&#123; lessThan: end?.value &#125;&#125; &#x2F;&gt;    &lt;&#x2F;Form.Item&gt;  &lt;Form.Item name&#x3D;&quot;applyEndTime&quot; label&#x3D;&quot;结束日期&quot; rules&#x3D;&#123;[&#123; required: true &#125;]&#125;&gt;    &lt;HalftDatePicker predict&#x3D;&#123;&#123; moreThan: start?.value &#125;&#125; &#x2F;&gt;  &lt;&#x2F;Form.Item&gt;  type IValue &#x3D; &#123;    value?: moment.Moment    half: 1 | 2  &#125; &#x2F;&#x2F; HalftDatePicker组件const HalftDatePicker: React.ForwardRefRenderFunction&lt;any, PickerProps&lt;moment.Moment&gt; &amp; &#123;  value?: IValue  onChange?: (v?: IValue) &#x3D;&gt; void  predict?: &#123;    lessThan?: moment.Moment    moreThan?: moment.Moment    holiday?: boolean  &#125;&#125;&gt; &#x3D; (props, ref) &#x3D;&gt; &#123;  &#x2F;&#x2F; ...略&#125;</code></pre></li></ul><p>代码的目的是： </p><ol><li>请求详情</li><li>装配数据，更新values</li><li>useCaculateDays 通过后台动态计算有效工作日，返回total请假天数，</li><li>渲染total到表单对应位置</li></ol><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>经过一点一点回溯调试，发现 useCaculateDays 没请求，被判断拦截掉了，往上找找，</p><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">form.setFieldsValue(obj)setValues(form.getFieldsValue())</code></pre><h3 id="打上日志"><a href="#打上日志" class="headerlink" title="打上日志"></a>打上日志</h3><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">&#x2F;&#x2F; ...略console.log(&quot;obj&quot;,obj);form.setFieldsValue(obj)console.log(&quot;obj1&quot;,form.getFieldsValue());setValues(obj)</code></pre><p>发现<code>obj</code>键值内容不等于<code>obj1</code></p><ul><li>obj</li></ul><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;    &quot;staffId&quot;: &quot;02333&quot;,    &quot;attendanceType&quot;: 11,    &quot;applyStartTime&quot;: &#123;        &quot;value&quot;: &quot;2022-03-23T16:00:00.000Z&quot;,        &quot;half&quot;: 1    &#125;,    &quot;applyEndTime&quot;: &#123;        &quot;value&quot;: &quot;2022-03-23T16:00:00.000Z&quot;,        &quot;half&quot;: 2    &#125;,    &quot;applyReason&quot;: &quot;&quot;,    &quot;applyAttachments&quot;: []&#125;</code></pre><ul><li>obj1<pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;    &quot;staffId&quot;: &quot;02333&quot;,    &quot;attendanceType&quot;: 11,    &quot;applyReason&quot;: &quot;&quot;,    &quot;applyAttachments&quot;: []&#125;</code></pre></li></ul><p><em>猜想</em></p><ul><li>会不会<code>form.setFieldsValue</code>异步？查了下api是同步的<em>排除这种可能</em></li><li>断点调试过程中，也会遇到表单渲染一半的情况，<code>AnualForm组件</code>是条件渲染，如果这块表单没有渲染出来，通过<code>form.getFieldsValue</code>就拿不到</li></ul><h3 id="修改代码验证下猜想"><a href="#修改代码验证下猜想" class="headerlink" title="修改代码验证下猜想"></a>修改代码验证下猜想</h3><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">console.log(&quot;obj&quot;,obj);form.setFieldsValue(obj)console.log(&quot;obj1&quot;,form.getFieldsValue());setTimeout(() &#x3D;&gt; &#123;  setValues(form.getFieldsValue())  &#125;, 5000);&#125;</code></pre><img src="http://t-blog-images.aijs.top/img/Kapture%202022-05-13%20at%2016.01.46.gif" width=300 /><h3 id="最终修改"><a href="#最终修改" class="headerlink" title="最终修改"></a>最终修改</h3><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">form.setFieldsValue(obj)setValues(obj)</code></pre>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ModHeader</title>
      <link href="//post/2022-05-13modeheader.html"/>
      <url>//post/2022-05-13modeheader.html</url>
      
        <content type="html"><![CDATA[<h2 id="通过不同请求头字段标识请求不同的环境"><a href="#通过不同请求头字段标识请求不同的环境" class="headerlink" title="通过不同请求头字段标识请求不同的环境"></a>通过不同请求头字段标识请求不同的环境</h2><img src="http://t-blog-images.aijs.top/img/20220513145839.webp" width=400 /><h3 id="Requesr-Headers"><a href="#Requesr-Headers" class="headerlink" title="Requesr Headers"></a>Requesr Headers</h3><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">Accept: *&#x2F;*Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8,zh-TW;q&#x3D;0.7Cache-Control: no-cacheConnection: keep-alivecontent-type: application&#x2F;json; charset&#x3D;utf-8Cookie: perfLang&#x3D;zh; envtag: ladon-1        Host: localhost:3119Pragma: no-cacheReferer: http:&#x2F;&#x2F;localhost:3119&#x2F;sec-ch-ua: &quot; Not A;Brand&quot;;v&#x3D;&quot;99&quot;, &quot;Chromium&quot;;v&#x3D;&quot;101&quot;, &quot;Google Chrome&quot;;v&#x3D;&quot;101&quot;sec-ch-ua-mobile: ?0sec-ch-ua-platform: &quot;macOS&quot;</code></pre><h3 id="不生效了"><a href="#不生效了" class="headerlink" title="不生效了"></a>不生效了</h3><p>理论上是没问题，应该是由于某些原因导致这个插件内部运行出了问题，具体什么问题不知<br><em>处理：</em>将浏览器重启动后,请求头<code>envtag: ladon-1</code>增加成功</p>]]></content>
      
      
      <categories>
          
          <category> Chrome </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器首屏优化-首屏时间获取</title>
      <link href="//post/2022-05-12performance.html"/>
      <url>//post/2022-05-12performance.html</url>
      
        <content type="html"><![CDATA[<p>白屏时间 &#x3D; 地址栏输入网址后回车 - 浏览器出现第一个元素<br>首屏时间 &#x3D; 地址栏输入网址后回车 - 浏览器第一屏渲染完成</p><p>影响白屏时间的因素：网络，服务端性能，前端页面结构设计。<br>影响首屏时间的因素：白屏时间，资源下载执行时间。</p><p>通常在head解析完，body开始渲染此时是白屏结束<br>白屏时间 &#x3D; firstPaint - performance.timing.navigationStart || pageStartTime</p><p>常用方法</p><ol><li>首屏模块标签标记， 你觉得首屏完成的地方插入脚本</li><li>同级首屏内加载最慢的图片&#x2F;iframe</li></ol><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9sejV6LmNvbS9hc3NldHMvaW1nL3BlcmZvcm1hbmNlLnBuZw?x-oss-process=image/format,png"></p><p>左边红线代表的是网络传输层面的过程，右边红线代表了服务器传输回字节后浏览器的各种事件状态，这个阶段包含了浏览器对文档的解析，DOM 树构建，布局，绘制等等。<br><em>1. prompt for unload</em></p><ul><li>navigationStart: 表示从上一个文档卸载结束时的 unix 时间戳，如果没有上一个文档，这个值将和 fetchStart 相等。</li></ul><p><em>2. 前一个网页卸载</em></p><ul><li>unloadEventStart: 表示前一个网页（与当前页面同域）unload 的时间戳，如果无前一个网页 unload 或者前一个网页与当前页面不同域，则值为 0。</li><li>unloadEventEnd: 返回前一个页面 unload 时间绑定的回掉函数执行完毕的时间戳。</li></ul><p><em>3. 重定向</em></p><ul><li>redirectStart: 第一个 HTTP 重定向发生时的时间。有跳转且是同域名内的重定向才算，否则值为 0。</li><li>redirectEnd: 最后一个 HTTP 重定向完成时的时间。有跳转且是同域名内部的重定向才算，否则值为 0。</li></ul><p><em>4. 使用 HTTP 请求</em></p><ul><li>fetchStart: 浏览器准备好使用 HTTP 请求抓取文档的时间，这发生在检查本地缓存之前。</li></ul><p><em>5. 域名解析</em></p><ul><li>domainLookupStart&#x2F;domainLookupEnd: DNS 域名查询开始&#x2F;结束的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等</li></ul><p><em>6. tcp链接</em></p><ul><li>connectStart: HTTP（TCP）开始&#x2F;重新 建立连接的时间，如果是持久连接，则与 fetchStart 值相等。</li><li>connectEnd: HTTP（TCP） 完成建立连接的时间（完成握手），如果是持久连接，则与 fetchStart 值相等。</li></ul><p><em>7. ssl建立</em></p><ul><li>secureConnectionStart: HTTPS 连接开始的时间，如果不是安全连接，则值为 0。</li></ul><p><em>8. 读取文档</em></p><ul><li>requestStart: HTTP 请求读取真实文档开始的时间（完成建立连接），包括从本地读取缓存。</li></ul><p><em>9. 响应</em></p><ul><li>responseStart: HTTP 开始接收响应的时间（获取到第一个字节），包括从本地读取缓存。</li><li>responseEnd: HTTP 响应全部接收完成的时间（获取到最后一个字节），包括从本地读取缓存。</li></ul><p><em>10. 解析dom</em></p><ul><li>domLoading: 开始解析渲染 DOM 树的时间，此时 Document.readyState 变为 loading，并将抛出 readystatechange 相关事件。</li></ul><p><em>11. dom可交互</em></p><ul><li>domInteractive: 完成解析 DOM 树的时间，Document.readyState 变为 interactive，并将抛出 readystatechange 相关事件，注意只是 DOM 树解析完成，这时候并没有开始加载网页内的资源。</li></ul><p><em>12. 页面内资源加载</em></p><ul><li>domContentLoadedEventStart: DOM 解析完成后，网页内资源加载开始的时间，在 DOMContentLoaded 事件抛出前发生。</li><li>domContentLoadedEventEnd: DOM 解析完成后，网页内资源加载完成的时间（如 JS 脚本加载执行完毕）。</li></ul><p><em>13. dom树解析完成</em></p><ul><li>domComplete: DOM 树解析完成，且资源也准备就绪的时间，Document.readyState 变为 complete，并将抛出 readystatechange 相关事件。</li></ul><p><em>14. load事件</em></p><ul><li>loadEventStart: load 事件发送给文档，也即 load 回调函数开始执行的时间。</li><li>loadEventEnd: load 事件的回调函数执行完毕的时间。</li></ul><p>Performance 接口可以获取到当前页面与性能相关的信息。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;    &quot;timeOrigin&quot;: 1652338539312.5,    &quot;timing&quot;: &#123;        &quot;connectStart&quot;: 1652338539353,        &quot;navigationStart&quot;: 1652338539312,        &quot;loadEventEnd&quot;: 1652338542492,        &quot;domLoading&quot;: 1652338539823,        &quot;secureConnectionStart&quot;: 1652338539401,        &quot;fetchStart&quot;: 1652338539316,        &quot;domContentLoadedEventStart&quot;: 1652338540574,        &quot;responseStart&quot;: 1652338539807,        &quot;responseEnd&quot;: 1652338539828,        &quot;domInteractive&quot;: 1652338540574,        &quot;domainLookupEnd&quot;: 1652338539353,        &quot;redirectStart&quot;: 0,        &quot;requestStart&quot;: 1652338539505,        &quot;unloadEventEnd&quot;: 0,        &quot;unloadEventStart&quot;: 0,        &quot;domComplete&quot;: 1652338542489,        &quot;domainLookupStart&quot;: 1652338539353,        &quot;loadEventStart&quot;: 1652338542489,        &quot;domContentLoadedEventEnd&quot;: 1652338540575,        &quot;redirectEnd&quot;: 0,        &quot;connectEnd&quot;: 1652338539504    &#125;,    &quot;navigation&quot;: &#123;        &quot;type&quot;: 0,        &quot;redirectCount&quot;: 0    &#125;&#125;</code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">function getPerfermanceTiming() &#123;  let t &#x3D; performance.timing  &#x2F;&#x2F; 重定向结束时间 - 重定向开始时间  let redirect &#x3D; t.redirectEnd - t.redirectStart  &#x2F;&#x2F; DNS 查询开始时间 - fetech start 时间  let appCache &#x3D; t.domainLookupStart - t.fetchStart  &#x2F;&#x2F; DNS 查询结束时间 - DNS 查询开始时间  let dns &#x3D; t.domainLookupEnd - t.domainLookupStart  &#x2F;&#x2F; 完成 TCP 连接握手时间 - TCP 连接开始时间   let tcp &#x3D; t.connectEnd - t.connectStart  &#x2F;&#x2F; 从请求开始到接收到第一个响应字符的时间   let ttfb &#x3D; t.responseStart - t.requestStart  &#x2F;&#x2F; 资源下载时间，响应结束时间 - 响应开始时间  let contentDL &#x3D; t.responseEnd - t.responseStart  &#x2F;&#x2F; 从请求开始到响应结束的时间  let httpTotal &#x3D; t.responseEnd - t.requestStart  &#x2F;&#x2F; 从页面开始到 domContentLoadedEventEnd  let domContentloaded &#x3D; t.domContentLoadedEventEnd - t.navigationStart  &#x2F;&#x2F; 从页面开始到 loadEventEnd  let loaded &#x3D; t.loadEventEnd - t.navigationStart  let result &#x3D; [    &#123; key: &quot;Redirect&quot;, desc: &quot;网页重定向的耗时&quot;, value: redirect &#125;,     &#123; key: &quot;AppCache&quot;, desc: &quot;检查本地缓存的耗时&quot;, value: appCache &#125;,    &#123; key: &quot;DNS&quot;, desc: &quot;DNS查询的耗时&quot;, value: dns &#125;,    &#123; key: &quot;TCP&quot;, desc: &quot;TCP连接的耗时&quot;, value: tcp &#125;,    &#123; key: &quot;Waiting(TTFB)&quot;, desc: &quot;从客户端发起请求到接收到响应的时间 &#x2F; Time To First Byte&quot;, value: ttfb &#125;,    &#123; key: &quot;Content Download&quot;, desc: &quot;下载服务端返回数据的时间&quot;, value: contentDL &#125;,    &#123; key: &quot;HTTP Total Time&quot;, desc: &quot;http请求总耗时&quot;, value: httpTotal &#125;,    &#123; key: &quot;DOMContentLoaded&quot;, desc: &quot;dom加载完成的时间&quot;, value: domContentloaded &#125;,    &#123; key: &quot;Loaded&quot;, desc: &quot;页面load的总耗时&quot;, value: loaded &#125;  ]  return result&#125;getPerfermanceTiming()</code></pre><p><a href="https://blog.csdn.net/z9061/article/details/101454438">Web 性能优化-首屏和白屏时间</a></p>]]></content>
      
      
      <categories>
          
          <category> performance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> performance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="//post/2022-05-12react.html"/>
      <url>//post/2022-05-12react.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">&#123;    &quot;personnelSubarea&quot;: 8,    &quot;employType&quot;: 1,    &quot;travelLevel&quot;: 1,    &quot;socialSecurityDate&quot;: 0,    &quot;salaryRange&quot;: 4,    &quot;isLongDistance&quot;: 0,    &quot;payWay&quot;: 1,    &quot;gmtModified&quot;: 1647505144854,    &quot;socialSecurityAddress&quot;: -1,    &quot;id&quot;: 2,    &quot;staffId&quot;: &quot;00001&quot;&#125;</code></pre><pre class="line-numbers language-none"><code class="language-none">&#123;    &quot;id&quot;: 2,    &quot;staffId&quot;: &quot;00001&quot;,    &quot;personnelArea&quot;: 4,    &quot;personnelSubarea&quot;: 8,    &quot;employType&quot;: 1,    &quot;travelLevel&quot;: 1,    &quot;socialSecurityAddress&quot;: -1,    &quot;socialSecurityDate&quot;: 0,    &quot;salaryRange&quot;: 4,    &quot;contractAddress&quot;: 2,    &quot;isLongDistance&quot;: 0,    &quot;payWay&quot;: 1,    &quot;gmtModified&quot;: 1652338924087,    &quot;changeDate&quot;: null,    &quot;startDate&quot;: 0,    &quot;endDate&quot;: 0,    &quot;status&quot;: 1,    &quot;gmtCreate&quot;: null&#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vscode插件 paste code to snippets</title>
      <link href="//post/2022-05-11vscode.html"/>
      <url>//post/2022-05-11vscode.html</url>
      
        <content type="html"><![CDATA[<h2 id="粘贴代码，生成用户代码片段"><a href="#粘贴代码，生成用户代码片段" class="headerlink" title="粘贴代码，生成用户代码片段"></a>粘贴代码，生成用户代码片段</h2><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ol><li>其他插件具有<code>共性</code>，而<code>不具特性 </code>，每次写代码，要么用第三方插件，现成的代码片段，时常不能满足日常开发需要</li><li>自定义代码片段，手写 <code>费时费力</code>，一般步骤，粘贴、修改、格式化</li><li>其他插件类似vscode宏变量的使用少之又少， 要么将开源插件定制化，要么重新开发</li><li>快捷变量记不住</li></ol><h2 id="paste-code-to-snippets-优点："><a href="#paste-code-to-snippets-优点：" class="headerlink" title="paste code to snippets 优点："></a>paste code to snippets 优点：</h2><ol><li>高度定制化</li><li>跨语言（任何vscode支持的语言，都可在对应类型片段文件中进行增加）</li><li>使用简单 （复制、唤起命令、挖孔）</li><li>快捷变量完全自定义（想怎么写就怎么写）</li></ol><h2 id="操作GIF"><a href="#操作GIF" class="headerlink" title="操作GIF"></a>操作GIF</h2><p><img src="http://t-blog-images.aijs.top/img/Kapture%202022-05-11%20at%2009.39.01.gif"></p>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP3</title>
      <link href="//post/2022-05-11http.html"/>
      <url>//post/2022-05-11http.html</url>
      
        <content type="html"><![CDATA[<h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><img src="https://www.upyun.com/static/img/title@3x.5597f51.png" />HTTP/3 的基础即谷歌多年探索的基于 UDP 的 QUIC 协议。与 TCP 相比，使用 UDP 可以提供更大的灵活性，并且可以使 QUIC 完全于用户空间中实现——对协议实现的更新不像 TCP 那样需要绑定到操作系统更新。使用 QUIC，可以简单地将 HTTP 级别的流映射到 QUIC 流的顶部，从而继承 HTTP/2 的所有优点，而不会产生队头阻塞。HTTP/3 虽仍处于草案状态，但很多用户已经跃跃欲试。</blockquote><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ol><li>HTTP&#x2F;3 利用 QUIC 加速 HTTP 请求，QUIC 提供比 TCP 和 TLS 更高的加密和性能</li><li>QUIC 是一种默认加密的新传输协议，旨在加快 HTTP 传输速度以及使其更加安全</li><li>HTTP&#x2F;3 基于 UDP，如果数据包丢失，只会中断一个流，而不会中断所有流，提高了同时获取多个对象的性能</li><li>支持 0-RTT，消除服务器的 TLS 确认，使后续连接的启动速度更快</li></ol><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>下图表示 HTTP&#x2F;2 和 HTTP&#x2F;3 多路复用两个请求时，数据包丢失及其影响（请求及其相关的响应分别为深蓝和浅蓝色）</p><p>HTTP&#x2F;2 多路复用 2 个请求。响应被分解为多个数据包，一旦一个数据包丢失了，两个请求都被阻止。<br><img src="https://www.upyun.com/static/img/http_3%20&%20QUIC.d73f941.gif" /><br>HTTP&#x2F;3 复用 2 个请求。虽然浅色的数据包丢失了，但是深色的数据包传输得很好。<br><img src="https://www.upyun.com/static/img/http2.27d52a1.gif" /><br>在相同丢包率的条件下，HTTP&#x2F;3 和 HTTP&#x2F;2 性能测试对比如下<br>测试环境：服务端（HTTP&#x2F;3 with cubic &amp; HTTP&#x2F;2 with bbr）、客户端（cubic）<br><img src="https://www.upyun.com/static/img/%E5%BB%BA%E8%BF%9E%E6%97%B6%E9%97%B4.35656db.png" /><br><img src="https://www.upyun.com/static/img/%E8%AF%B7%E6%B1%82%E6%97%B6%E9%97%B41x.7069918.png" /></p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p><a href="https://www.upyun.com/tech/tags/HTTP3" target="_blank" >查看更多</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跨域问题</title>
      <link href="//post/2022-05-09cors.html"/>
      <url>//post/2022-05-09cors.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>浏览器安全策略限制跨域访问</p><p>内容安全策略是一个额外的安全层，用于检测并削弱某些特定类型的攻击，包括跨站脚本 (XSS) 和数据注入攻击等。无论是数据盗取、网站内容污染还是散发恶意软件，这些攻击都是主要的手段。</p><ol><li>使用方式<br>为使 CSP 可用, 你需要配置你的网络服务器返回 Content-Security-Policy，或者在 HTML <meta> 元素种也可配置该策略, 例如：</li></ol><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;meta  http-equiv&#x3D;&quot;Content-Security-Policy&quot;  content&#x3D;&quot;default-src &#39;self&#39;; img-src https:&#x2F;&#x2F;*; child-src &#39;none&#39;;&quot;&#x2F;&gt;</code></pre><ol start="2"><li>配置示例<br>（1）一个网站管理者想要所有内容均来自站点的同一个源 (不包括其子域名)</li></ol><pre class="line-numbers language-html" data-language="html"><code class="language-html">Content-Security-Policy: default-src &#39;self&#39;</code></pre><p>（2）一个网站管理者允许内容来自信任的域名及其子域名 (域名不必须与 CSP 设置所在的域名相同)</p><pre class="line-numbers language-none"><code class="language-none">Content-Security-Policy: default-src &#39;self&#39; *.trusted.com</code></pre><p>（3）一个网站管理者允许网页应用的用户在他们自己的内容中包含来自任何源的图片, 但是限制音频或视频需从信任的资源提供者(获得)，所有脚本必须从特定主机服务器获取可信的代码。</p><pre class="line-numbers language-none"><code class="language-none">Content-Security-Policy: default-src &#39;self&#39;;img-src *;media-src media1.com media2.com; script-src userscripts.example.com</code></pre><p>在这里，各种内容默认仅允许从文档所在的源获取, 但存在如下例外:</p><p>图片可以从任何地方加载(注意 “*“ 通配符)。<br>多媒体文件仅允许从 media1.com 和 media2.com 加载(不允许从这些站点的子域名)。<br>可运行脚本仅允许来自于 userscripts.example.com。</p><p>作者：菜鸡前端<br>链接：<a href="https://www.jianshu.com/p/a45924e99a6d">https://www.jianshu.com/p/a45924e99a6d</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h2 id="处理方式"><a href="#处理方式" class="headerlink" title="处理方式"></a>处理方式</h2><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><ul><li>脚本</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">listen 80; # 监听的端⼝   add_header &#39;Access-Control-Allow-Origin&#39; &#39;$http_origin&#39; ;   add_header &#39;Access-Control-Allow-Credentials&#39; &#39;true&#39; ;   add_header &#39;Access-Control-Allow-Methods&#39; &#39;PUT,POST,GET,DELETE,OPTIONS&#39; ;   add_header &#39;Access-Control-Allow-Headers&#39; &#39;Content-Type,Content-Length,Authorization,Accept,X-Requested-With&#39; ;</code></pre><ul><li>实际操作</li></ul><p><img src="http://t-blog-images.aijs.top/img/20220509181853.webp"></p><h3 id="jsonp-方式-lt-动态-script-gt"><a href="#jsonp-方式-lt-动态-script-gt" class="headerlink" title="jsonp 方式 &lt;动态 script&gt;"></a>jsonp 方式 &lt;动态 script&gt;</h3><h3 id="服务端设置，类似-nginx"><a href="#服务端设置，类似-nginx" class="headerlink" title="服务端设置，类似 nginx"></a>服务端设置，类似 nginx</h3><h3 id="其他（不常用）"><a href="#其他（不常用）" class="headerlink" title="其他（不常用）"></a>其他（不常用）</h3>]]></content>
      
      
      <categories>
          
          <category> cors </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cors </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试题汇总</title>
      <link href="//post/2022-05-08interview.html"/>
      <url>//post/2022-05-08interview.html</url>
      
        <content type="html"><![CDATA[<h2 id="值得收藏的链接"><a href="#值得收藏的链接" class="headerlink" title="值得收藏的链接"></a>值得收藏的链接</h2><ol><li><a target="_blank" href="https://juejin.cn/user/1381458394494461">码上通天</a></li><li><a target="_blank" href="https://juejin.cn/post/6844904019165446158#heading-42">面试完50个人后我写下这篇总结</a></li><li><a target="_blank" href="https://juejin.cn/post/6844903897610321934">if 我是前端团队 Leader，怎么制定前端协作规范?</a></li><li><a target="_blank" href="https://juejin.cn/post/7061588533214969892">做了一份前端面试复习计划，保熟～</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js变量和作用域</title>
      <link href="//post/2022-05-08varible.html"/>
      <url>//post/2022-05-08varible.html</url>
      
        <content type="html"><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="var-let-const区别"><a href="#var-let-const区别" class="headerlink" title="var let const区别"></a>var let const区别</h3><ul><li><strong>变量提升</strong>：var 存在变量提升，let、const没有（let、const存在暂时性死区）</li><li><strong>作用域的限制</strong>：var不受作用域的限制，而let、const受当前作用域的限制</li><li><strong>重复声明</strong>：var可以重复声明，let、const不可以</li><li><strong>const是常量</strong>，必须有初始值，否则报错，不能更改，但是可以更改对象内部属性</li></ul><h3 id="变量分类"><a href="#变量分类" class="headerlink" title="变量分类"></a>变量分类</h3><ul><li>js中的变量分为两种：<ul><li>全局变量和局部变量。全局变量很好理解，就是在js任何地方都能够调用的变量；</li><li>而局部变量就只能在函数的内部才能够调用的变量。</li></ul></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">var a&#x3D;10;function show()&#123;  console.log(&#39;a:&#39;+a); &#x2F;&#x2F;a:10  var b&#x3D;2;  console.log(&#39;inside b:&#39;+b); &#x2F;&#x2F;inside b:2&#125;show();console.log(&#39;outside b:&#39;+b); &#x2F;&#x2F;b is no defined</code></pre><p>　　在上面的程序中，变量a就是一个全局变量，在函数的内部能够调用。但是这里的变量b就是局部变量，当函数结束调用后，变量b就被回收了，因此在函数外部调用失败。</p><p><em>另外需要特别注意的是：</em></p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>如果在声明局部变量时不用var声明，那么这个变量自动“提升”为全局变量。</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js">var a&#x3D;10;function show()&#123;  console.log(&#39;a:&#39;+a); &#x2F;&#x2F;a:10  b&#x3D;2;  console.log(&#39;inside b:&#39;+b); &#x2F;&#x2F;inside b:2&#125;show();console.log(&#39;outside b:&#39;+b); &#x2F;&#x2F;outside b:2</code></pre><p>对比两段代码，<em>如果你在声明b&#x3D;2时没有写var，那么b就隐式地声明为全局变量</em>，在函数外面还是能够被调用到的。<br>虽然使用全局变量能够在任何地方调用，很方便，但是全局变量的优点也给他带来了<em>缺点</em>：</p><ol><li>一直占用内存：全局变量保存在静态存储区，如果全局变量过多会占多大量内存，严重影响页面的性能。</li><li>影响了函数的独立性：一般函数都是传入参数和传出返回值进行运算的，如果函数依赖于全局变量，破坏了函数的这种独立性，</li><li>可移植性: 同时也降低了函数的可移植性。</li></ol><p><strong>因此我们在定义变量时一般要尽可能少的定义全局变量。</strong></p><h3 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>函数声明优先于变量声明</p></blockquote><p>　　下面我们通过一段代码来说明.</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">var a; function a()&#123;&#125;console.log(typeof a); &#x2F;&#x2F;function&#x2F;&#x2F; 或许有人是认为函数声明在后面的原因，那么调换一下位置。</code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">function a()&#123;&#125;var a; console.log(typeof a); &#x2F;&#x2F;function&#x2F;&#x2F; 调换位置后变量a的类型还是function，这时候声明变量a的语句没有起作用，被函数声明覆盖了。&#x2F;&#x2F; 因此函数声明优先于变量的声明。&#x2F;&#x2F; 但是如果我们在声明的同时给a进行赋值。</code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">function a()&#123;&#125;var a&#x3D;&#39;xyf&#39;; console.log(typeof a); &#x2F;&#x2F;string&#x2F;&#x2F; 我们将其调换一下位置再次进行验证。</code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">var a&#x3D;&#39;xyf&#39;; function a()&#123;&#125;console.log(typeof a); &#x2F;&#x2F;string&#x2F;&#x2F; 可以看到，给变量a进行赋值后，不管变量a在哪，其类型变为字符串类型，上面两段代码相当于如下代码：</code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">function a()&#123;&#125;var a;a&#x3D;&#39;xyf&#39;;console.log(typeof a); &#x2F;&#x2F;string&#x2F;&#x2F; a最后被赋值为字符串，因此a的类型自然是字符串</code></pre><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><h3 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h3><p>　js中作用域只有<em>函数作用域</em>和<em>全局作用域</em>，</p><h3 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h3><p>　js中作用域只有<em>函数作用域</em>和<em>全局作用域</em>，</p><h3 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h3><p>  let const<em>有块级作用域</em>。函数作用域是比较容易理解的，那么什么是块级作用域呢？<br>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">&#123;var a &#x3D; 1&#125;console.log(a)VM2355:1 1</code></pre><br>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">&#123;let a &#x3D;1&#125;console.log(a)VM2079:1 Uncaught ReferenceError: a is not defined</code></pre></p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>任何一对花括号（｛和｝）中的语句集都属于一个块，在这之中定义的所有变量在代码块外都是不可见的，我们称之为块级作用域。</p></blockquote><p>　　理解了块级作用域，来看一下下面的小例子。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console.log(v); &#x2F;&#x2F;undefinedvar v &#x3D; &quot;world&quot;;　　&#x2F;&#x2F; 这段代码很好理解，由于变量v在没有赋值前使用了，所以是undefined。其实这里存在着声明的提前。</code></pre><p>当前作用域内的声明都会提升到作用域的最前面，包括变量和函数的声明</p><p>由于js作用域中的声明都会被提升到作用域的最前面，所以，上面的代码相当于：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">var v;console.log(v); &#x2F;&#x2F;undefinedv &#x3D; &quot;world&quot;;&#x2F;&#x2F; 这样就能很清晰地理解为什么变量v是undefined的了。&#x2F;&#x2F;下面我们把变量v放到一个方法中去：</code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">if(true)&#123;  var v &#x3D; &quot;hello&quot;;&#125;console.log(v); &#x2F;&#x2F;hello&#x2F;&#x2F; 在这里由于js没有块级作用域，所以if方法没有“形成”一个封闭的作用域，&#x2F;&#x2F; 并不能够“阻挡”外面的代码获取里面的变量。</code></pre><p>函数作用域<br>　　我们再把变量v放到函数中去：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">function show()&#123;  var v&#x3D;&#39;world&#39;;&#125;show();console.log(v); &#x2F;&#x2F;undefined</code></pre><p>　　由于show函数是一个函数作用域，“阻挡”外面的代码获取里面变量（并不能阻挡里面的代码获取外面的变量），所以函数外部并不能获取到函数里面的变量v。因此证明了js中只有函数作用域，没有块级作用域。<br>　　再来看下面的一段代码：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">var v&#x3D;&#39;hello&#39;;function show()&#123;  console.log(v); &#x2F;&#x2F;undefined  var v&#x3D;&#39;world&#39;;&#125;show();</code></pre><p>　　很多人看到这边都会很疑惑，不是说这边show函数中能够获取到函数外面的变量的么？但是由于这边是一个函数作用域，而函数作用域存在着变量声明的提前，因此，上面的代码相当于下面的代码：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">var v&#x3D;&#39;hello&#39;;function show()&#123;var v;console.log(v); &#x2F;&#x2F;undefinedv&#x3D;&#39;world&#39;;&#125;show();</code></pre><p>　　这里把变量v的声明放到了整个函数作用域的最前面，因此显示为undefined。理解了上面的代码，相信下面的代码也不难理解了。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">var v &#x3D; &quot;hello&quot;;(function()&#123;  console.log(v);  var v &#x3D; &quot;world&quot;;&#125;)();</code></pre><p>　　在这里自执行函数形成了函数作用域</p><p>需要注意的是<br>变量提升只提升函数的声明，并不提升函数的定义</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">show(); &#x2F;&#x2F;show is not a functionvar show&#x3D;function()&#123;&#x2F;&#x2F;...&#125;show(); &#x2F;&#x2F;成功运行</code></pre><p>　　或许有人有疑问，为什么这边定义的函数就不能执行呢？在这里我们需要明白函数在js中是如何进行定义的。</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>函数有两种定义方式，一种是<code>函数声明</code>，另一种是<code>函数表达式</code>。那么什么是函数声明什么是函数表达式呢？</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js">&#x2F;&#x2F;函数声明function show()&#123;&#x2F;&#x2F;....&#125;&#x2F;&#x2F;函数表达式var show&#x3D;function()&#123;&#x2F;&#x2F;...&#125;</code></pre><p>乍一看，他们长得很像，写法都差不多，但是实际上还是有区别的。</p><ul><li>js的解析器对<code>函数声明</code>和<code>函数表达式</code>并不是一视同仁的对待的，有点“种族歧视”的意思在里面。</li><li><code>函数声明就像是“一等公民”，js会优先读取，确保在执行前就已经被解析了</code>，所以函数声明放在当前作用域的任何地方都能够被调用，甚至放到调用函数声明之后面。</li><li><code>而函数表达式就显得比较“普通”，和一般的变量一样，只有到执行到该行时才进行解析，</code>因此，调用函数表达式要在定义后进行使用。</li></ul><h2 id="other"><a href="#other" class="headerlink" title="other"></a>other</h2><p><a href="https://juejin.cn/post/6844904019165446158">https://juejin.cn/post/6844904019165446158</a></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lerna调试开源库遇到的问题</title>
      <link href="//post/2022-05-05lerna.html"/>
      <url>//post/2022-05-05lerna.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">yarn install --mutex network:42424 --non-interactive👑 ~&#x2F;Desktop&#x2F;slate git:(main) $ lerna --version4.0.0👑 ~&#x2F;Desktop&#x2F;slate git:(main) $ yarn global add lerna@3.19.0    Usage Error: The &#39;yarn global&#39; commands have been removed in 2.x - consider using &#39;yarn dlx&#39; or a third-party plugin instead$ yarn run [--inspect] [--inspect-brk] &lt;scriptName&gt; ...👑 ~&#x2F;Desktop&#x2F;slate git:(main) $ yarn --version              3.0.1</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC存储空间不足问题</title>
      <link href="//post/2022-05-05mac.html"/>
      <url>//post/2022-05-05mac.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://t-blog-images.aijs.top/img/20220505165350.webp"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>String相关面试代码</title>
      <link href="//post/2022-05-03string.html"/>
      <url>//post/2022-05-03string.html</url>
      
        <content type="html"><![CDATA[<h3 id="转化为驼峰命名"><a href="#转化为驼峰命名" class="headerlink" title="转化为驼峰命名"></a>转化为驼峰命名</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><code>var s1 = &quot;get-element-by-id&quot;</code></p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">var f &#x3D; function (s) &#123;  return s.replace(&#x2F;-\w&#x2F;g, function (x) &#123;    return x.splice(1).toUpperCase();  &#125;);&#125;;</code></pre><h3 id="模版引擎实现"><a href="#模版引擎实现" class="headerlink" title="模版引擎实现"></a>模版引擎实现</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">let template &#x3D; &quot;我是&#123;&#123;name&#125;&#125;,年龄&#123;&#123;age&#125;&#125;,性别&#123;&#123;sex&#125;&#125;&quot;;let data &#x3D; &#123;  name: &quot;姓名&quot;,  age: 18,&#125;;render(template, data); &#x2F;&#x2F;我是姓名,年龄18,性别undefinedfunction render(template, data) &#123;  &#x2F;&#x2F; 模版字符串正则  const resg &#x3D; &#x2F;\&#123;\&#123;(\w+)\&#125;\&#125;&#x2F;;  &#x2F;&#x2F; 判断模版里是否有模版字符串  if (reg.test(template)) &#123;    &#x2F;&#x2F; 查找当前模版里第一个模版字符串的字符    const name &#x3D; reg.exec(template)[1];    &#x2F;&#x2F; 将第一个模版字符串渲染    template &#x3D; template.replace(reg, data[name]);    &#x2F;&#x2F; 递归的渲染并返回渲染后的结构    return render(template, data);  &#125;&#125;</code></pre><h3 id="解析-URL-Params-为对象"><a href="#解析-URL-Params-为对象" class="headerlink" title="解析 URL Params 为对象"></a>解析 URL Params 为对象</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">let url &#x3D;  &quot;http:&#x2F;&#x2F;www.domain.com&#x2F;?user&#x3D;anonymouse&amp;id&#x3D;123&amp;id&#x3D;456&amp;city&#x3D;%E5%8C%97%E4%BA%AC&amp;enabled&quot;;&#x2F;** * 结果 * &#123; *  user: &#39;anonymouse&#39;, *  id: [123,456], &#x2F;&#x2F; 重复出现的key，要转化成数组 *  city: &#39;北京&#39;, &#x2F;&#x2F; 中文需要解码 *  enabled: true &#x2F;&#x2F; 未指定值的key，约定为true * * * &#125; * **&#x2F;function paramParam(url) &#123;  const paramsStr &#x3D; &#x2F;.+\?(.+)$&#x2F;.exec(url)[1];  const paramsArr &#x3D; paramsArr.split(&quot;&amp;&quot;);  let paramsObj &#x3D; &#123;&#125;;  paramsArr.forEach((param) &#x3D;&gt; &#123;    if (&#x2F;&#x3D;&#x2F;.test(param)) &#123;      let [key, val] &#x3D; param.split(&quot;&#x3D;&quot;); &#x2F;&#x2F; 拆分键&#x2F;值      val &#x3D; decodeURLComponent(val); &#x2F;&#x2F; 汉字解码      val &#x3D; &#x2F;^\d+$&#x2F;.test(val) ? parseFloat(val) : val; &#x2F;&#x2F; 数字转化      if (paramsObj.hasOwnProperty(key)) &#123;        paramsObj[key] &#x3D; [].concat(paramsObj[key], val); &#x2F;&#x2F; 重复key转数组      &#125; else &#123;        paramsObj[key] &#x3D; val;      &#125;    &#125; else &#123;      paramsObj[key] &#x3D; true; &#x2F;&#x2F; 处理约定    &#125;  &#125;);&#125;</code></pre><h3 id="查找字符串中，出现最多的字符和个数"><a href="#查找字符串中，出现最多的字符和个数" class="headerlink" title="查找字符串中，出现最多的字符和个数"></a>查找字符串中，出现最多的字符和个数</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">let str &#x3D; &quot;abcabcabcbbcccc&quot;;let num &#x3D; 0;let char &#x3D; &quot;&quot;;&#x2F;&#x2F; 先排序，后用正则处理个数str &#x3D; str.split(&quot;&quot;).sort().join(&quot;&quot;);let re &#x3D; &#x2F;(\w)\1+&#x2F;g;str.replace(re, ($0, $1) &#x3D;&gt; &#123;  if (num &lt; $0.length) &#123;    num &#x3D; $0.length;    char &#x3D; $1;  &#125;&#125;);</code></pre><h3 id="字符串查找"><a href="#字符串查找" class="headerlink" title="字符串查找"></a>字符串查找</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">a &#x3D; &quot;34&quot;;b &#x3D; &quot;1234567&quot;; &#x2F;&#x2F; 返回2a &#x3D; &quot;35&quot;;b &#x3D; &quot;1234567&quot;; &#x2F;&#x2F; 返回 -1a &#x3D; &quot;355&quot;;b &#x3D; &quot;1234355&quot;; &#x2F;&#x2F; 返回5function isContain(a, b) &#123;  for (let i in b) &#123;    if (a[0] &#x3D;&#x3D;&#x3D; b[i]) &#123;      let tmp &#x3D; true;      for (let j in a) &#123;        if (a[j] !&#x3D;&#x3D; b[~~i + ~~j]) &#123;          tmp &#x3D; false;        &#125;      &#125;      if (tmp) &#123;        return i;      &#125;    &#125;  &#125;  return -1;&#125;</code></pre><h3 id="实现千分位分隔符"><a href="#实现千分位分隔符" class="headerlink" title="实现千分位分隔符"></a>实现千分位分隔符</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">&#x2F;&#x2F; 保留三位小数paraseToMoney(1234.56); &#x2F;&#x2F; return &#39;1,234.56&#39;paraseToMoney(123456789); &#x2F;&#x2F; return 123,456,789paraseToMoney(1087654.321); &#x2F;&#x2F; return 1,087,654.321function paraseToMoney(params) &#123;  num &#x3D; parseFloat(num.toFixed(3));  let [integer, decimal] &#x3D; String.prototype.split.call(num, &quot;.&quot;);  integer &#x3D; integer.replace(&#x2F;\d(?&#x3D;(\d&#123;3&#125;))+$&#x2F;, &quot;$&amp;,&quot;);  return integer + &quot;.&quot; + (decimal ?? &quot;&quot;);&#125;</code></pre><h3 id="判断是否是电话号码"><a href="#判断是否是电话号码" class="headerlink" title="判断是否是电话号码"></a>判断是否是电话号码</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">function isPhone(str) &#123;  let regx &#x3D; &#x2F;^1[34578]\d&#123;9&#125;$&#x2F;;  return regx.test(str);&#125;</code></pre><h3 id="判断是否是邮箱"><a href="#判断是否是邮箱" class="headerlink" title="判断是否是邮箱"></a>判断是否是邮箱</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">function isEmail(mail) &#123;  var regx &#x3D; &#x2F;^(a-zA-Z0-9_\-)+@(a-zA-Z0-9_\-)+(\.[a-zA-Z0-9_\-])+$&#x2F;;  return regx.test(email);&#125;</code></pre><h3 id="校验身份证"><a href="#校验身份证" class="headerlink" title="校验身份证"></a>校验身份证</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">function isCard(number) &#123;  var regx &#x3D; &#x2F;(^\d&#123;15&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)&#x2F;;  return regx.test(number);&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何更好的沉淀</title>
      <link href="//post/2022-04-28%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA.html"/>
      <url>//post/2022-04-28%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul><li>工作日常经验性总结放哪？</li><li>存电脑，电脑坏了重做系统没了，</li><li>放到电脑备忘录，卧槽，怎么没及时更新</li><li>放自己的服务器，没时间打理，服务器到期，嗝屁了，没来的及迁移</li></ul><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><ul><li>hexo由于有丰富的插件和主题，使用及部署方便，备受欢迎</li><li>自己购买服务器部署，服务器到期后续费很贵</li><li>放到第三方博客上，好一点的像简书，每天发布限制两篇，可控性太差</li></ul><h2 id="hexo-主题"><a href="#hexo-主题" class="headerlink" title="hexo 主题"></a>hexo 主题</h2><p>进行博客美化,这里使用 <code>aurora</code></p><pre class="line-numbers language-none"><code class="language-none">theme: aurora</code></pre><p><a href="https://tridiamond.tech/">tridiamond</a><br><a href="https://github.com/AlphaHinex/AlphaHinex.github.io">AlphaHinex</a></p><h2 id="阿里云oss"><a href="#阿里云oss" class="headerlink" title="阿里云oss"></a>阿里云oss</h2><ul><li>图片资源放到github上，访问较慢，为了提升体验，将资源放到oss上，权限配置为公开，可被任何用户访问</li></ul><h2 id="阿里云域名"><a href="#阿里云域名" class="headerlink" title="阿里云域名"></a>阿里云域名</h2><ul><li>域名访问比较方便，图片资源只有在使用域名的情况下，各资源可以预览，而不仅仅是下载</li></ul><h2 id="PicGo图床「贼好用，"><a href="#PicGo图床「贼好用，" class="headerlink" title="PicGo图床「贼好用，"></a>PicGo图床「贼好用，</h2><ul><li>思考：除此之外，因为其开源我们可以学习下作者是如何处理插件的」</li><li>为博客中md文档提供图片链接，放到阿里云oss上</li><li>上传成功<br><img src="http://t-blog-images.aijs.top/img/20220428101247.png?x-oss-process=image/resize,h_300,w_500"></li><li>因为开发过electron，第一想到的是我要debug,打开控制台</li><li>域名配错不可访问<br><img src="http://t-blog-images.aijs.top/img/20220428104003.png?x-oss-process=image/resize,h_300,w_500"><br><img src="http://t-blog-images.aijs.top/img/20220428104024.png?x-oss-process=image/resize,h_300,w_500"></li><li>遇到图片,作为程序猿第一反应要优化「压缩」<code>compress</code></li><li>插件下载<br><img src="http://t-blog-images.aijs.top/img/20220428104511.png?x-oss-process=image/resize,h_300,w_500" alt="下载插件"></li><li>插件启用<br><img src="http://t-blog-images.aijs.top/img/20220428104919.png?x-oss-process=image/resize,h_300,w_500" alt="需要启动插件，不器用没有效果"></li><li>插件是否生效了<br><img src="http://t-blog-images.aijs.top/img/20220428105126.png?x-oss-process=image/resize,h_300,w_500" alt="压缩后的校验"></li><li>插件列表<br><a href="https://github.com/PicGo/Awesome-PicGo">插件列表</a><h3 id="总结：总体而言picgo已经很好了，有几点可以优化"><a href="#总结：总体而言picgo已经很好了，有几点可以优化" class="headerlink" title="总结：总体而言picgo已经很好了，有几点可以优化"></a>总结：总体而言picgo已经很好了，有几点可以优化</h3></li><li>已有图片二次重新上传压缩功能</li><li>窗口实在是太小了，正常情况下可以手动拖拽改变大小<h2 id="书写文章-hexo页面不热重载？"><a href="#书写文章-hexo页面不热重载？" class="headerlink" title="书写文章 hexo页面不热重载？"></a>书写文章 hexo页面不热重载？</h2></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yarn add global browser-syncyarn add hexo-browsersync</code></pre><h2 id="启用评论"><a href="#启用评论" class="headerlink" title="启用评论"></a>启用评论</h2><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># For local development only!gitalk:  enable: false  autoExpand: true  clientID: &#39;&#39;  clientSecret: &#39;&#39;  repo: &#39;dev-blog-comments&#39;  owner: &#39;TriDiamond&#39;  admin: [&#39;TriDiamond&#39;]  id: uid  language: en  distractionFreeMode: true  recentComment: true  proxy: &#39;&#39;# Valine comment plugin (recommended!)# see https:&#x2F;&#x2F;valine.js.org&#x2F;quickstart.htmlvaline:  enable: true  app_id: 去申请  app_key: 去申请  avatar: &#39;http:&#x2F;&#x2F;t-blog-images.aijs.top&#x2F;img&#x2F;avatar.jpeg&#39;  placeholder: Leave your thoughts behind~  visitor: true  lang: en  avatarForce: false  meta: [&#39;nick&#39;, &#39;mail&#39;]  requiredFields: []  admin: &#39;海龙&#39;  recentComment: true</code></pre><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li>每次发布后，github page 自定义域名会丢失<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>在_posts目录下建立CNAME文件 填写上自己的域名</p></blockquote></li><li>图床picGo，上传了图片，在oss上查看也成功了，但是picGo相册中没有展示<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><code>/Users/chenhailong/Library/Application Support/picgo</code>目录下，删除 <code>rm picgo.db</code>,重新启动<br>见<a href="https://github.com/Molunerfinn/PicGo/issues/781">issue #781</a></p></blockquote></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Slate 学习</title>
      <link href="//post/2022-04-29slate-lean.html"/>
      <url>//post/2022-04-29slate-lean.html</url>
      
        <content type="html"><![CDATA[<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://doodlewind.github.io/slate-doc-cn/">slate 中文文档</a><br><a href="https://docs.slatejs.org/">slate 英文文档</a></p><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><a href="https://doodlewind.github.io/slate-doc-cn/">Slate</a> 是一个 完全 可定制的富文本编辑框架。<br>通过 Slate，你可以构建出类似 Medium、Dropbox Paper 或者 Canvas 这样使用直观、富交互、体验业已成为 Web 应用标杆的编辑器。同时，你也无需担心在代码实现上陷入复杂度的泥潭之中。</p></blockquote><h2 id="能做什么"><a href="#能做什么" class="headerlink" title="能做什么"></a>能做什么</h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>通过 Slate，你可以构建出类似 Medium、Dropbox Paper 或者 Canvas 这样使用直观、富交互、体验业已成为 Web 应用标杆的编辑器。同时，你也无需担心在代码实现上陷入复杂度的泥潭之中。<br>Slate 之所以能做到这一点，是因为它的所有逻辑都是通过一系列的插件实现的。这样，你就再也不会被某项特性 在 或 不在 编辑器【核心】边界之内的问题所困扰了。你可以将它理解为在 React 和 Immutable 基础上，一种可插拔的 contenteditable 实现。另外，它的灵感来自于 Draft.js，Prosemirror 和 Quill 等类库。</p></blockquote><h2 id="产生的背景"><a href="#产生的背景" class="headerlink" title="产生的背景"></a>产生的背景</h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>为什么发明 Slate 呢？好吧…（注意，这部分内容包含了一些我的个人观点！）</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>在发明 Slate 之前，我尝试了许多不同的富文本编辑器。我发现虽然它们在编写简单示例时基本没有问题，但一旦想要构建一些类似 Medium、Dropbox Paper 或者 Google Docs 这样的内容，你就会发现一些深层次的问题，比如…</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>编辑器硬编码了文档的结构规范，难以定制</strong>。类似加粗和斜体的结构可以开箱即用，但评论、嵌入内容以及更多的定制性需求呢？</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>对文档的编程式变换非常错综复杂</strong>。用户的编写体验可能不错，但在执行编程式变更时却不必要地复杂，而这对于构建高级的编辑行为至关重要。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>对 HTML、Markdown 等内容的序列化支持看起来像是事后加上的</strong>。这是一个非常常见的使用场景，但要实现将文档转换为 HTML 或 Markdown 的简单功能都需要编写大量的模板代码。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>重新学习一个新的视图层效率不高且十分受限</strong>。各种编辑器在重新发明视图层的轮子，而非使用 React 这样已有的技术方案。你必须学习一套带着自有限制和陷阱的新系统。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>**<code>对协同编辑没有预先设计好的支持</code>**。编辑器内部的数据结构使其无法用于实时、协作的编辑场景中，除非重写编辑器。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>代码仓库是单体的，而非小而可复用的</strong>。许多编辑器没有对外开放本应为开发者所复用的内部工具，以至于不得不重新发明轮子。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>无法构建复杂而存在嵌套关系的文档</strong>。不少编辑器是围绕简单的【扁平】文档结构设计的，这使得表格、嵌入内容和字幕等内容难以理解，有时甚至无法实现。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>当然，并非所有的编辑器都存在以上的问题，但如果你已经尝试过一些编辑器，你可能已经踩过类似的坑了。为了摆脱它们在 API 上的限制来达到你期望的用户体验，你得使用各种奇技淫巧，有些体验甚至是完全无法实现的。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>如果你遇到了相似的问题，那么也许你会喜欢上 Slate。让我来介绍一下 Slate 是如何解决这些问题的吧…</p></blockquote><h2 id="提供了什么能力"><a href="#提供了什么能力" class="headerlink" title="提供了什么能力"></a>提供了什么能力</h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>Slate 尝试通过一些原则来解决 “Why?” 这一节中的问题：</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>作为一等公民的插件</strong>。 在 Slate 中最重要的一点是，插件是一等公民（first-class）的实体——甚至连编辑器的核心逻辑都是通过插件实现的。这意味着你能够 完全地 定制编辑体验，构建出对标 Medium 和 Canvas 那样的复杂编辑器，而无需对抗各种类库的预设条件。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>精简 Schema 的核心</strong>。 Slate 的核心逻辑并不对你所编辑的数据结构做任何假设，这意味着你在需要应对复杂场景时不会被编辑器预置的内容所束缚（译者注：此处 Schema 可理解为类似 XML Schema 的文档结构规范）。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>支持嵌套的文档模型</strong>。 Slate 所使用的文档模型是一棵嵌套的、递归的树，和 DOM 本身十分接近。这使得构建表格和嵌套引用等能够满足进阶需求的复杂组件成为了可能。当然，你同样可以使用单一的层级关系以保证简单性。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>无状态、不可变的数据</strong>。 通过使用 React 和 Immutable.js，我们是基于不可变数据结构，以无状态的方式构建 Slate 编辑器的。这大大降低了理解代码的难度，也节约了大量开发插件的时间。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>直观的 changes</strong>。 Slate 中的内容是通过 “change” 来编辑的，这是一种被设计为支持高阶使用，且极其符合直觉的概念。这样，我们就能够通过它来尽可能简单地编写插件和自定义功能了。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>**<code>为协同编辑准备的数据模型</code>**。 Slate 使用的数据模型——尤其是由 change 更改文档的方式——在设计时就已考虑到对协同编辑的支持。所以，如果你决定为编辑器添加协作功能，你不需要进行彻底的重构。（当然，这还需要你投入更多的努力！）</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>明确的【核心】边界划分。 通过插件优先的架构与精简 Schema 的内核，Slate 对于【核心】和【自定义】有着明确得多的划分，从而保证核心的编辑体验不会为各种边缘情况所困扰。</p></blockquote><h2 id="协同编辑，这个后面会持续关注"><a href="#协同编辑，这个后面会持续关注" class="headerlink" title="协同编辑，这个后面会持续关注"></a>协同编辑，这个后面会持续关注</h2><p><img src="http://t-blog-images.aijs.top/img/20220429152337.png"><br><a href="https://docs.slate-yjs.dev/">slate-yjs</a><br><a href="https://docs.yjs.dev/">yjs</a></p><h2 id="slate-文档不是很多，半小时看完"><a href="#slate-文档不是很多，半小时看完" class="headerlink" title="slate 文档不是很多，半小时看完"></a>slate 文档不是很多，半小时看完</h2><p>主要内容 </p><ul><li>插件定制化</li><li>渲染节点定制化</li><li>按键监听处理</li><li>数据格式编码、反编码</li><li>数据存储</li></ul><h2 id="就这点东西😱"><a href="#就这点东西😱" class="headerlink" title="就这点东西😱"></a>就这点东西😱</h2><p>竟然有些同学凭借slate的使用拿了3.75,赶紧学～</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>架构设计引发的血案</title>
      <link href="//post/2022-04-29nextjs.html"/>
      <url>//post/2022-04-29nextjs.html</url>
      
        <content type="html"><![CDATA[<h2 id="记录个bug-并在此文中规避"><a href="#记录个bug-并在此文中规避" class="headerlink" title="记录个bug,并在此文中规避"></a>记录个bug,并在此文中规避</h2><p>此处记下 hexo-theme-aurora 源码bug，没空时候帮他改</p><pre class="line-numbers language-none"><code class="language-none">.article .article-content p &#123;    font-size: .875rem;    line-height: 1.25rem;    margin-bottom: 0.5rem;    padding-bottom: 1rem;    word-break: break-all;&#125;</code></pre><h2 id="bug复现"><a href="#bug复现" class="headerlink" title="bug复现"></a>bug复现</h2><p><img src="http://t-blog-images.aijs.top/img/20220429103417.png"><br><img src="http://t-blog-images.aijs.top/img/20220429103946.png"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">(node:29) UnhandledPromiseRejectionWarning: Error: Forbidden    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Object.getDataReport (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11494:19)    at async Promise.all (index 3)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)(Use &#96;node --trace-warnings ...&#96; to show where the warning was created)(node:29) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag &#96;--unhandled-rejections&#x3D;strict&#96; (see https:&#x2F;&#x2F;nodejs.org&#x2F;api&#x2F;cli.html#cli_unhandled_rejections_mode). (rejection id: 19)(node:29) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.(node:29) UnhandledPromiseRejectionWarning: Error: Forbidden    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Object.getDataReport (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11494:19)    at async Promise.all (index 3)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)(node:29) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag &#96;--unhandled-rejections&#x3D;strict&#96; (see https:&#x2F;&#x2F;nodejs.org&#x2F;api&#x2F;cli.html#cli_unhandled_rejections_mode). (rejection id: 44)Error: invalid json response body at https:&#x2F;&#x2F;login-daily.敏感数据-inc.cn:7799&#x2F;error&#x2F;illegal&#x2F;location reason: Unexpected token &lt; in JSON at position 0    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Object.refreshPendingPerformanceNum (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11487:25)    at async Promise.all (index 2)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)Error: invalid json response body at https:&#x2F;&#x2F;login-daily.敏感数据-inc.cn:7799&#x2F;error&#x2F;illegal&#x2F;location reason: Unexpected token &lt; in JSON at position 0    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Promise.all (index 0)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)Error: Forbidden    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Object.getDataReport (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11494:19)    at async Promise.all (index 3)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)Error: Forbidden    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Promise.all (index 0)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)Error: invalid json response body at https:&#x2F;&#x2F;login-daily.敏感数据-inc.cn:7799&#x2F;error&#x2F;illegal&#x2F;location reason: Unexpected token &lt; in JSON at position 0    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Promise.all (index 0)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)Error: invalid json response body at https:&#x2F;&#x2F;login-daily.敏感数据-inc.cn:7799&#x2F;error&#x2F;illegal&#x2F;location reason: Unexpected token &lt; in JSON at position 0    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Object.refreshPendingPerformanceNum (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11487:25)    at async Promise.all (index 2)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)</code></pre><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">const [resp] &#x3D; await Promise.all([  getLoginInfo(ctx),  CommonModel.effects.refreshPendingObjectiveNum(req, ctx),  CommonModel.effects.refreshPendingPerformanceNum(req, ctx),  CommonModel.effects.getDataReport(req, ctx),])if (resp.success) &#123;  UserModal.actions.setUser(resp.result, req)&#125;</code></pre><h2 id="增加异常捕获"><a href="#增加异常捕获" class="headerlink" title="增加异常捕获"></a>增加异常捕获</h2><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">const [resp] &#x3D; await Promise.all([  getLoginInfo(ctx),  CommonModel.effects.refreshPendingObjectiveNum(req, ctx),  CommonModel.effects.refreshPendingPerformanceNum(req, ctx),  CommonModel.effects.getDataReport(req, ctx),]).catch(e&#x3D;&gt;&#123;  console.log(&quot;发生错误&quot;)  console.log(e)&#125;)</code></pre><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>日志仅 <code>Forbidden</code> 有效信息，大概是接口</p><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">发生错误Error: Forbidden    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-7be1c2d9b56a41e863e3.js:13144:29    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)    at async Promise.all (index 0)    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-7be1c2d9b56a41e863e3.js:12208:22)</code></pre><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><ol><li>因为acl 企业权限整了180天（顶配），时不时就出现系统瘫痪的情况，<code>日常</code>、<code>线上</code>都有此问题这架构设计的，估计没谁了。完全可以改成离职后，系统自动将用户禁权即可</li><li>除此之外，sso也有个通病，三个月没改过密码，用户账户无法登录，需要重新密码方可登录</li></ol>]]></content>
      
      
      <categories>
          
          <category> Bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Slate wiki-ui评论功能光标乱跳</title>
      <link href="//post/2022-04-29slate.html"/>
      <url>//post/2022-04-29slate.html</url>
      
        <content type="html"><![CDATA[<h2 id="bug复现"><a href="#bug复现" class="headerlink" title="bug复现"></a>bug复现</h2><pre class="line-numbers language-none"><code class="language-none">bug复现 (node:29) UnhandledPromiseRejectionWarning: Error: Forbidden at &amp;#x2F;code&amp;#x2F;client&amp;#x2F;.next&amp;#x2F;server&amp;#x2F;pages&amp;#x2F;_app-a05...</code></pre><p><img src="https://t-blog-images.aijs.top/img/Kapture%202022-04-29%20at%2015.41.56.gif"></p><p>在vite react项目上，输入汉字的同时按住删除键，光标会乱跳</p><h3 id="排查1"><a href="#排查1" class="headerlink" title="排查1:"></a>排查1:</h3><p>wiki（esm）组件问题，检查wiki-ui组件库，运行正常</p><pre class="line-numbers language-none"><code class="language-none">&quot;react&quot;: &quot;^16.8.0&quot;,&quot;react-dom&quot;: &quot;^16.8.0&quot;,</code></pre><h3 id="排查2"><a href="#排查2" class="headerlink" title="排查2:"></a>排查2:</h3><p>vite加载wiki-ui组件时候，因为vite只能处理esm，在vite.config.ts, esbuildOptions自定义插件进行处理<br>wiki-ui，不是很懂，换个角度</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">esbuildOptions: &#123;  plugins: [    &#123;      name: &#39;originjs:commonjs&#39;,      setup(build) &#123;        build.onLoad(          &#123;            filter: &#x2F;@敏感数据-fe\&#x2F;wiki-ui\&#x2F;dist&#x2F;,            namespace: &#39;file&#39;,          &#125;,          async (&#123; path: id &#125;) &#x3D;&gt; &#123;            const code &#x3D; readFileSync(id).toString()            const result &#x3D; transformRequire(code, id)            return &#123;              contents: result,              loader: &#39;js&#39;,            &#125;          &#125;,        ),          build.onLoad(            &#123;              filter: &#x2F;@敏感数据-fe\&#x2F;wiki-ui\&#x2F;dist\&#x2F;components\&#x2F;iconfont&#x2F;,              namespace: &#39;file&#39;,            &#125;,            async (&#123; path: id &#125;) &#x3D;&gt; &#123;              const code &#x3D; readFileSync(id).toString()              const result &#x3D; transformRequire(code, id)              return &#123;                contents: result,                loader: &#39;js&#39;,              &#125;            &#125;,          )      &#125;,    &#125;,    esbuildPluginMonacoEditorNls(&#123;      locale: Languages.zh_hans,    &#125;),  ],&#125;,</code></pre><h3 id="排查3"><a href="#排查3" class="headerlink" title="排查3:"></a>排查3:</h3><p>将wiki-ui组件放到umijs应用中运行</p><pre class="line-numbers language-none"><code class="language-none"># 搭建个项目# 移动demo组件到新项目# 运行，发现有相同的问题</code></pre><h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h3><h4 id="1-dom"><a href="#1-dom" class="headerlink" title="1.dom"></a>1.dom</h4><p>输入过程中点击删除操作，那么在这个过程中，输入的内容是在<code>contenteditable=&quot;true&quot; </code>中运行</p><pre class="line-numbers language-none"><code class="language-none">&lt;div data-gramm&#x3D;&quot;false&quot; role&#x3D;&quot;textbox&quot; spellcheck&#x3D;&quot;false&quot; class&#x3D;&quot;slash-slate-core&quot; id&#x3D;&quot;SLASH_SLATE_CORE&quot; data-app-id&#x3D;&quot;5A9BEA&quot; autocorrect&#x3D;&quot;false&quot; autocapitalize&#x3D;&quot;false&quot; data-slate-editor&#x3D;&quot;true&quot; data-slate-node&#x3D;&quot;value&quot; contenteditable&#x3D;&quot;true&quot; style&#x3D;&quot;position: relative; outline: none; white-space: pre-wrap; overflow-wrap: break-word;&quot;&gt;&lt;p data-slate-node&#x3D;&quot;element&quot;&gt;&lt;span data-slate-node&#x3D;&quot;text&quot;&gt;&lt;span data-slate-leaf&#x3D;&quot;true&quot;&gt;&lt;span data-slate-string&#x3D;&quot;true&quot;&gt;12121212哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈h h h h h h h h h h h h hs f s d f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</code></pre><h4 id="2-合成事件"><a href="#2-合成事件" class="headerlink" title="2.合成事件"></a>2.合成事件</h4><p>应该会走合成事件，合成事件之后会执行渲染，web端走的是react-dom，比对正常运行的项目，和新项目的版本</p><pre class="line-numbers language-none"><code class="language-none"># react 17版本# react-dom 17版本</code></pre><h4 id="3-react"><a href="#3-react" class="headerlink" title="3.react"></a>3.react</h4><p>先进行<code>react</code>降版本 <code>16.14.0</code>，检查合成事件是否有问题，降版本后，运行，问题同样存在，大概可以断定是<code>react-dom</code>渲染出了问题，</p><h4 id="4-react-dom"><a href="#4-react-dom" class="headerlink" title="4.react-dom"></a>4.react-dom</h4><p>对<code>react-dom</code>降低版本到<code>16.14.0</code>, 后运行正常，那么问题应该在<code>react-dom</code>上</p><h4 id="5-github版本-16-14-0"><a href="#5-github版本-16-14-0" class="headerlink" title="5.github版本 16.14.0"></a>5.github版本 16.14.0</h4><p>两个版本有什么不同：查看<code>react</code>发布日志，16.14.0之后的一个版本是<a href="https://github.com/facebook/react/releases#:~:text=17.0.0%20(October%2020%2C%202020)">17.0.0 (October 20, 2020)</a> 看上去与事件和渲染相关的东西不多</p><pre class="line-numbers language-none"><code class="language-none">Use browser focusin and focusout for onFocus and onBlur. (@trueadm in #19186)Make all Capture events use the browser capture phase. (@trueadm in #19221)Throw if forwardRef or memo component returns undefined. (@gaearon in #19550)Remove event pooling. (@trueadm in #18969)Fix onBeforeInput reporting an incorrect event.type. (@eps1lon in #19561)Fix event.relatedTarget reported as undefined in Firefox. (@claytercek in #19607)Fix rendering into a shadow root. (@Jack-Works in #15894)Fix movementX&#x2F;Y polyfill with capture events. (@gaearon in #19672)Artifactsreact: https:&#x2F;&#x2F;unpkg.com&#x2F;react@17.0.1&#x2F;umd&#x2F;react-art: https:&#x2F;&#x2F;unpkg.com&#x2F;react-art@17.0.1&#x2F;umd&#x2F;react-dom: https:&#x2F;&#x2F;unpkg.com&#x2F;react-dom@17.0.1&#x2F;umd&#x2F;react-is: https:&#x2F;&#x2F;unpkg.com&#x2F;react-is@17.0.1&#x2F;umd&#x2F;react-test-renderer: https:&#x2F;&#x2F;unpkg.com&#x2F;react-test-renderer@17.0.1&#x2F;umd&#x2F;scheduler: https:&#x2F;&#x2F;unpkg.com&#x2F;scheduler@0.20.1&#x2F;umd&#x2F;</code></pre><h4 id="6-github版本-18-1-0"><a href="#6-github版本-18-1-0" class="headerlink" title="6.github版本 18.1.0"></a>6.github版本 18.1.0</h4><p>在往后找最新的版本，发现在<a href="https://github.com/facebook/react/releases#:~:text=Compare-,18.1.0%20(April%2026%2C%202022),-Latest">18.1.0 (April 26, 2022)</a>，改了一堆<code>react-dom</code>的bug,看上去也没相关的</p><pre class="line-numbers language-none"><code class="language-none">Fix the false positive warning about react-dom&#x2F;client when using UMD bundle. (@alireza-molaee in #24274)Fix suppressHydrationWarning to work in production too. (@gaearon in #24271)Fix componentWillUnmount firing twice inside of Suspense. (@acdlite in #24308)Fix some transition updates being ignored. (@acdlite in #24353)Fix useDeferredValue causing an infinite loop when passed an unmemoized value. (@acdlite in #24247)Fix throttling of revealing Suspense fallbacks. (@sunderls in #24253)Fix an inconsistency in whether the props object is the same between renders. (@Andarist and @acdlite in #24421)Fix a missing warning about a setState loop in useEffect. (@gaearon in #24298)Fix a spurious hydration error. (@gnoff in #24404)Warn when calling setState in useInsertionEffect. (@gaearon in #24295)Ensure the reason for hydration errors is always displayed. (@gaearon in #24276)</code></pre><h3 id="可用版本"><a href="#可用版本" class="headerlink" title="可用版本"></a>可用版本</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;react&quot;: &quot;^16.14.0&quot;,&quot;react-dom&quot;: &quot;16.14.0&quot;,</code></pre><h3 id="这个演示代码正常"><a href="#这个演示代码正常" class="headerlink" title="这个演示代码正常"></a>这个演示代码正常</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;embed type&#x3D;&quot;text&#x2F;html&quot; src&#x3D;&quot;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;react-ts-m3y5yv?embed&#x3D;1&amp;file&#x3D;App.tsx&amp;view&#x3D;preview&quot; width&#x3D;&quot;100%&quot; height&#x3D;&quot;200&quot;&gt;&lt;!--加载太慢，复制地址查看吧--&gt; &lt;!--https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;react-ts-m3y5yv?embed&#x3D;1&amp;file&#x3D;App.tsx&amp;view&#x3D;preview--&gt; </code></pre><h2 id="懵逼。。。"><a href="#懵逼。。。" class="headerlink" title="懵逼。。。"></a>懵逼。。。</h2><p>从头开始</p><pre class="line-numbers language-none"><code class="language-none">待办事项中的评论功能（组件问题）光标乱跳的问题；0. 项目 + wiki-ui 异常1. 单运行wiki-ui demo 正常2. 运行slate + umijs 正常3. 运行wiki-ui  + umijs 异常4. slate 与  wiki-ui  不一样在于slate版本5. wiki-ui 做了什么事情： 定制化一些节点展示，光标的渲染和wiki-ui无关</code></pre><h2 id="贫僧先去slate官网化缘，回来再战"><a href="#贫僧先去slate官网化缘，回来再战" class="headerlink" title="贫僧先去slate官网化缘，回来再战"></a>贫僧先去slate官网<code>化缘</code>，回来再战</h2><p><a href="http://localhost:4000/post/2022-04-29slate-lean">slate-lean</a></p><h2 id="化缘归来"><a href="#化缘归来" class="headerlink" title="化缘归来"></a>化缘归来</h2><p>问题怎么解决</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>企业微信： 图片附件无法预览的问题</title>
      <link href="//post/2022-04-19wework-preview.html"/>
      <url>//post/2022-04-19wework-preview.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://t-blog-images.aijs.top/img/11460713-13685d46ead24558.png"></p><ul><li>背景：安卓预览正常，部分iOS预览有问题（大部分手机都是正常的）<pre class="line-numbers language-none"><code class="language-none">downloadAttachment(downloadUrl).then(res &#x3D;&gt; &#123;      if (getWechatUserAgent(navigator.userAgent)) &#123; &#x2F;&#x2F; 判断是企业微信        const blob &#x3D; new Blob([res]);        wx.previewFile(&#123;          url: location.origin + downloadUrl, &#x2F;&#x2F; 需要预览文件的地址(必填，可以使用相对路径)          name: attachment.name, &#x2F;&#x2F; 需要预览文件的文件名，必须有带文件格式的后缀，例如.doc(不填的话取url的最后部分，最后部分是个包含格式后缀的文件名)          size: blob.size &#x2F;&#x2F; 需要预览文件的字节大小(必填，而且大小必须正确，否则会打开失败)        &#125;);        Toast.loading(i18n.loading, false)        return      &#125;      var reader &#x3D; new FileReader();      reader.readAsDataURL(res);   &#x2F;&#x2F; 转换为base64，可以直接放入a标签href      reader.onload &#x3D; function (e) &#123;        const anchorEle &#x3D; document.createElement(&#39;a&#39;)        document.body.appendChild(anchorEle)        anchorEle.href &#x3D; e?.target?.result as any        anchorEle.download &#x3D; attachment.name        anchorEle.click()        document.body.removeChild(anchorEle)      &#125;      Toast.loading(i18n.loading, false)    &#125;).catch(() &#x3D;&gt; &#123;      Toast.loading(i18n.loading, false)    &#125;)</code></pre><code>自研移动端</code>、<code>web端</code>、<code>企业微信桌面端</code>都没问题，当然喽，每一个端展示效果是不一样的，代码也不一样。排查了耗费一定时间。</li></ul><ol><li>排查 企业微信版本， 比对后发现，和正常使用的微信版本一致</li><li>排查手机版本不一致，客户iphone12和 系统版本15.1，我们开发人员是14.+，所以我把我的手机升级到最新，我的手机升级后是正常的，那么可能是数据问题，数据</li><li>排查数据，这是老系统的数据，和新系统数据走不同的业务代码，经排查也没问题</li><li>排查<code>size</code>如果不准确也会出现上述问题，由于预发环境获取票据的信息与线上是不一致的，所以无法在预发进行排查，能做的事保证代码执行到<code> const blob = new Blob([res]);</code>，并且能够获取到正确的size，所以进行了alert调试，这个在手机上比较直观，当然也可以<code>vconsole</code>【暂不考虑,因为之前开发人员没加，部门被砍掉，很多人被裁员了，所有项目都我来维护，没时间，不整了】，调试结果是size: 88214,各个手机都一样，用户手机也是88214，故排除size</li><li>最后可能问题在于，用户手机上版本与手机不匹配，有兼容性bug，尝试升级企业微信，最后解决</li></ol><br/><p>总结：如果考虑直接升级用户app版本，或许在第三步就解决问题了，我的iphoneX也不用升级到15.3了</p>]]></content>
      
      
      <categories>
          
          <category> WeWork </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WeWork </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm 包发布相关</title>
      <link href="//post/2022-04-28npm.html"/>
      <url>//post/2022-04-28npm.html</url>
      
        <content type="html"><![CDATA[<h2 id="npm-包发布"><a href="#npm-包发布" class="headerlink" title="npm 包发布"></a>npm 包发布</h2><pre class="line-numbers language-none"><code class="language-none">npm notice &#x3D;&#x3D;&#x3D; Tarball Details &#x3D;&#x3D;&#x3D; npm notice name:          @tutu-fe&#x2F;wiki-ui                        npm notice version:       0.1.1-beta                              npm notice filename:      @tutu-fe&#x2F;wiki-ui-0.1.1-beta.tgz         npm notice package size:  85.7 kB                                 npm notice unpacked size: 449.9 kB                                npm notice shasum:        973f5eb8d74de04c34b8e9c94536f8924b1f9570npm notice integrity:     sha512-Uyo3zS0eaMOYE[...]60Ywmrmb&#x2F;brxQ&#x3D;&#x3D;npm notice total files:   205                                     npm notice npm ERR! code E403npm ERR! 403 403 Forbidden - PUT https:&#x2F;&#x2F;registry- - [maintainers_error] haotian.chen does not in maintainer listnpm ERR! 403 In most cases, you or one of your dependencies are requestingnpm ERR! 403 a package version that is forbidden by your security policy, ornpm ERR! 403 on a server you do not have access to.npm ERR! A complete log of this run can be found in:npm ERR!     &#x2F;Users&#x2F;haotian&#x2F;.npm&#x2F;_logs&#x2F;2022-04-28T09_58_10_365Z-debug.log</code></pre><h2 id="配置package-json"><a href="#配置package-json" class="headerlink" title="配置package.json"></a>配置package.json</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;maintainers&quot;: [  &quot;davishua&quot;,å  &quot;haotian.chen&quot;],</code></pre><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="http://t-blog-images.aijs.top/img/20220428180656.png"><br><img src="http://t-blog-images.aijs.top/img/20220428180602.png"></p>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="//post/hello-world.html"/>
      <url>//post/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Nestjs 结合 knife4j</title>
      <link href="//post/2022-02-29node.html"/>
      <url>//post/2022-02-29node.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.npmjs.com/package/nest-knife4j">nest-knife4j</a><br><a href="https://github.com/xiaoymin/swagger-bootstrap-ui">knife4j github</a><br><a href="https://xiaoym.gitee.io/knife4j/documentation/">knife4j 文档</a><br><code>knife4j</code>可以理解为<code>一套swagger皮肤</code>，不使用knife4j默认是<code>swagger 1</code>版本的样式<br><img src="http://t-blog-images.aijs.top/img/11460713-6cda8a0126f7ee78.png"></p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nestjs文件上传</title>
      <link href="//post/2022-02-28node.html"/>
      <url>//post/2022-02-28node.html</url>
      
        <content type="html"><![CDATA[<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p><a href="https://www.jianshu.com/p/28f8dd9a732e">Nestjs 上传文件</a><br><a href="https://www.cnblogs.com/ajanuw/p/9575278.html">Nestjs 上传文件</a></p>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 拖拽兼容</title>
      <link href="//post/2022-02-27react.html"/>
      <url>//post/2022-02-27react.html</url>
      
        <content type="html"><![CDATA[<h2 id="拖拽在web-pc-端、iframe、h5移动端"><a href="#拖拽在web-pc-端、iframe、h5移动端" class="headerlink" title="拖拽在web pc 端、iframe、h5移动端"></a>拖拽在web pc 端、iframe、h5移动端</h2><h3 id="存在差异"><a href="#存在差异" class="headerlink" title="存在差异"></a>存在差异</h3><ul><li>web pc 端支持：<code>onMouseDown</code>、<code>onMouseUp</code>、<code>onMousemove</code>、<code>onDragStart</code>、<code>onDragEnd</code>、<code>nDragOver</code></li><li>iframe web pc 端支持：<code>onMouseDown</code>、<code>onMouseUp</code>、<code>onMousemove</code></li><li>h5移动端支持：<code>onTouchStart</code>、<code>onTouchEnd</code>、<code>onTouchmove</code><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3></li></ul><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">export default function Draggable(props: Props) &#123;  const &#123; children, style, className, onDragFinish, onDraggingStart, onPositionGet, boundary &#x3D; &#123; x: MARGIN_TO_PAGE, y: MARGIN_TO_PAGE &#125; &#125; &#x3D; props  const [dragging, setDragging] &#x3D; useState(false)  const [attaching, setAttaching] &#x3D; useState(false)  const [top, setTop] &#x3D; useState(0)  const [left, setLeft] &#x3D; useState(0)  const ghostRef: MutableRefObject&lt;HTMLDivElement&gt; &#x3D; useRef()  const elRef: MutableRefObject&lt;HTMLDivElement&gt; &#x3D; useRef()  const onDragStart &#x3D; useCallback((e: DragEvent&lt;HTMLDivElement&gt; | TouchEvent&lt;HTMLDivElement&gt;) &#x3D;&gt; &#123;    let x    let y    if (isDrag(e)) &#123;      if (e.target !&#x3D;&#x3D; elRef.current) &#123;        return      &#125;      e.dataTransfer.setDragImage(emptyImg, 0, 0)      x &#x3D; e.clientX      y &#x3D; e.clientY    &#125; else &#123;      if (!e.target || !(e.target instanceof HTMLElement)) &#123;        return      &#125;      if (!parentHasClass(e.target, [rootStyles.feedbackRoot])) &#123;        return      &#125;      x &#x3D; e.touches[0].clientX      y &#x3D; e.touches[0].clientY    &#125;    e.stopPropagation()    const rect &#x3D; e.currentTarget.getBoundingClientRect()    const offsetX &#x3D; x - rect.x    const offsetY &#x3D; y - rect.y    setTop(rect.y)    setLeft(rect.x)    setDragging(true)    if (isDrag(e)) &#123;      dragoverHandle &#x3D; (event: DragEvent) &#x3D;&gt; &#123;        if (event.clientX || event.clientY) &#123;          setTop(event.clientY - offsetY)          setLeft(event.clientX - offsetX)        &#125;      &#125;      &#x2F;&#x2F; firefox 中，ondrag 拿不到鼠标的坐标，所以这里使用 document 的 dragover      document.addEventListener(&#39;dragover&#39;, dragoverHandle)    &#125; else &#123;      dragoverHandle &#x3D; (event: TouchEvent) &#x3D;&gt; &#123;        const touch &#x3D; event.touches[0]        if (touch.clientX || touch.clientY) &#123;          setTop(touch.clientY - offsetY)          setLeft(touch.clientX - offsetX)        &#125;      &#125;      document.addEventListener(&#39;touchmove&#39;, dragoverHandle)    &#125;    onDraggingStart()  &#125;, [])  const onDragEnd &#x3D; useCallback((event) &#x3D;&gt; &#123;    if (!ghostRef.current) &#123;      setDragging(false)      return    &#125;    const rect &#x3D; ghostRef.current.getBoundingClientRect()    const &#123; rel, abs &#125; &#x3D; calcAttachSide(rect, boundary)    setTop(abs.top)    setLeft(abs.left)    setAttaching(true)    if (isDrag(event)) &#123;      document.removeEventListener(&#39;dragover&#39;, dragoverHandle)    &#125; else &#123;      document.removeEventListener(&#39;touchmove&#39;, dragoverHandle)    &#125;    &#x2F;&#x2F; onPosition &amp;&amp; onPosition(rel) &#x2F;&#x2F; 其他业务    dragoverHandle &#x3D; null    setTimeout(() &#x3D;&gt; &#123;      onDragFinish(rel)      setAttaching(false)      setDragging(false)    &#125;, 300)  &#125;, [])  const onMousedown &#x3D; useCallback((e) &#x3D;&gt; &#123;    const x &#x3D; e.clientX    const y &#x3D; e.clientY    const rect &#x3D; e.currentTarget.getBoundingClientRect()    const offsetX &#x3D; x - rect.x    const offsetY &#x3D; y - rect.y    setTop(rect.y)    setLeft(rect.x)    setDragging(true)    if (e.preventDefault) &#123;      e.preventDefault()    &#125; else &#123;      e.returnValue &#x3D; false    &#125;    document.onmousemove &#x3D; function (ev: any) &#123;      const _event &#x3D; ev || window.event      const endx &#x3D; _event.clientX - offsetX      const endy &#x3D; _event.clientY - offsetY      setTop(endy)      setLeft(endx)    &#125;  &#125;, [])  const onMouseup &#x3D; useCallback((e) &#x3D;&gt; &#123;    if (!ghostRef.current) &#123;      setDragging(false)      return    &#125;    const rect &#x3D; ghostRef.current.getBoundingClientRect()    const &#123; rel, abs &#125; &#x3D; calcAttachSide(rect, boundary)    setTop(abs.top)    setLeft(abs.left)    setAttaching(true)    document.onmousemove &#x3D; null    onPositionGet &amp;&amp; onPositionGet(rel)    setTimeout(() &#x3D;&gt; &#123;      onDragFinish(rel)      setAttaching(false)      setDragging(false)    &#125;, 300)  &#125;, []) &#x2F;&#x2F; 能力检测  if (&#39;dragover&#39; in document.documentElement || &#39;ontouchstart&#39; in document.documentElement) &#123;    return (      &lt;div        style&#x3D;&#123;style&#125;        className&#x3D;&#123;className&#125;        draggable        onTouchStart&#x3D;&#123;onDragStart&#125;        onTouchEnd&#x3D;&#123;onDragEnd&#125;        onDragStart&#x3D;&#123;onDragStart&#125;        onDragEnd&#x3D;&#123;onDragEnd&#125;        onDragOver&#x3D;&#123;prevent&#125;        ref&#x3D;&#123;elRef&#125;      &gt;        &lt;div          style&#x3D;&#123;dragging ? &#123; top, left &#125; : null&#125;          className&#x3D;&#123;cn(&#123;            [styles.dragging]: dragging,            [styles.attaching]: attaching,          &#125;)&#125;          ref&#x3D;&#123;ghostRef&#125;        &gt;          &#123;children&#125;        &lt;&#x2F;div&gt;      &lt;&#x2F;div&gt;    )  &#125;  return (    &lt;div      style&#x3D;&#123;style&#125;      className&#x3D;&#123;className&#125;      draggable      onMouseDown&#x3D;&#123;onMousedown&#125;      onMouseUp&#x3D;&#123;onMouseup&#125;      ref&#x3D;&#123;elRef&#125;    &gt;      &lt;div        style&#x3D;&#123;dragging ? &#123; top, left &#125; : null&#125;        className&#x3D;&#123;cn(&#123;          [styles.dragging]: dragging,          [styles.attaching]: attaching,        &#125;)&#125;        ref&#x3D;&#123;ghostRef&#125;      &gt;        &#123;children&#125;      &lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;  )&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React DOM</title>
      <link href="//post/2022-05-04react.html"/>
      <url>//post/2022-05-04react.html</url>
      
        <content type="html"><![CDATA[<h2 id="17-0-0-October-20-2020"><a href="#17-0-0-October-20-2020" class="headerlink" title="17.0.0 (October 20, 2020)"></a>17.0.0 (October 20, 2020)</h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>Delegate events to roots instead of document<br>来看下<a href="https://www.bigbinary.com/blog/react-17-delegates-events-to-root-instead-of-document">原因</a></p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>React自首次发布以来一直在自动执行事件委派。它直接在文档节点上为每个事件类型附加一个处理程序。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>虽然它提高了应用程序的性能，但由于文档节点上的事件委派，已经报告了许多问题。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>为了演示其中一个问题，让我们以select下拉列表为例。<br>下面示例中的CountryDropDown是用于国家选择的React组件，它将被呈现给id为React root的div。react DOM容器封装在id为main的div中，该div有一个包含stopPropagation（）的更改事件。</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;!--Div&#39;s change event contains stopPropagation()--&gt;&lt;div id&#x3D;&quot;main&quot;&gt;  &lt;!--Div where react component will be rendered --&gt;  &lt;div id&#x3D;&quot;react-root&quot;&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</code></pre><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx">class CountryDropDown extends React.Component &#123;  state &#x3D; &#123;    country: &#39;&#39;,  &#125;  const handleChange &#x3D; e &#x3D;&gt; &#123;    this.setState(&#123; country: e.target.value &#125;);  &#125;  render() &#123;    return (      &lt;table class&#x3D;&quot;table table-striped table-condensed&quot;&gt;        &lt;thead&gt;          &lt;tr&gt;            &lt;th&gt;Country&lt;&#x2F;th&gt;            &lt;th&gt;Selected country&lt;&#x2F;th&gt;          &lt;&#x2F;tr&gt;        &lt;&#x2F;thead&gt;        &lt;tbody&gt;          &lt;tr&gt;            &lt;td&gt;              &lt;select value&#x3D;&#123;this.state.country&#125;                onChange&#x3D;&#123;this.handleChange&#125;              &gt;                &lt;option value&#x3D;&quot;&quot;&gt;--Select--&lt;&#x2F;option&gt;                &lt;option value&#x3D;&quot;India&quot;&gt;India&lt;&#x2F;option&gt;                &lt;option value&#x3D;&quot;US&quot;&gt;US&lt;&#x2F;option&gt;                &lt;option value&#x3D;&quot;Dubai&quot;&gt;Dubai&lt;&#x2F;option&gt;              &lt;&#x2F;select&gt;            &lt;&#x2F;td&gt;            &lt;td&gt;              &#123;this.state.country&#125;            &lt;&#x2F;td&gt;          &lt;&#x2F;tr&gt;        &lt;&#x2F;tbody&gt;      &lt;&#x2F;table&gt;    );  &#125;&#125;ReactDOM.render(&lt;CountryDropDown &#x2F;&gt;, document.getElementById(&#39;react-root&#39;));</code></pre><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>将更改事件附加到主div</p></blockquote><pre class="line-numbers language-none"><code class="language-none">document.getElementById(&quot;main&quot;).addEventListener(  &quot;change&quot;,  function (e) &#123;    e.stopPropagation();  &#125;,  false);</code></pre><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>当选择一个国家时，我们无法看到所选的国家</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>此意外行为的原因是附加到文档节点的onChange dropdown事件。包含e.stopPropagation（）的主div的change事件阻止了下拉菜单的onChange事件。</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>为了解决此类问题，React 17不再在文档级别附加事件处理程序。相反，它将它们附加到根DOM容器中，React树将被渲染到该容器中。<br><img src="https://www.bigbinary.com/blog_images/react17/react_17_event_delegation.png"></p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>在React 17中进行更改后，事件被附加到根DOM容器，React树被呈现到该容器中。在我们的示例中，onChange事件的下拉列表将附加到id为react root的div。当选择任何国家&#x2F;地区呈现预期行为时，将触发此事件。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sentry错误日志获取</title>
      <link href="//post/2021-06-20sentry.html"/>
      <url>//post/2021-06-20sentry.html</url>
      
        <content type="html"><![CDATA[<ul><li>先上图</li></ul><p><img src="http://t-blog-images.aijs.top/img/11460713-94dac7337bf8ed4f.png"></p><p><img src="http://t-blog-images.aijs.top/img/11460713-2d4eb13808a7a16a.png"></p><p>This is a quick getting started guide. For in-depth instructions on integrating Sentry with React, view <a href="https://docs.sentry.io/platforms/javascript/guides/react/">our complete documentation</a>.</p><p>To instrument your React application with Sentry, first install the <code>@sentry/react</code> and <code>@sentry/tracing</code> packages:</p><pre class="line-numbers language-none"><code class="language-none"># Using yarnyarn add @sentry&#x2F;react @sentry&#x2F;tracing# Using npmnpm install --save @sentry&#x2F;react @sentry&#x2F;tracing</code></pre><p>Next, import and initialize the Sentry module as early as possible, before initializing React:</p><pre class="line-numbers language-none"><code class="language-none">import React from &quot;react&quot;;import ReactDOM from &quot;react-dom&quot;;import * as Sentry from &quot;@sentry&#x2F;react&quot;;import &#123; Integrations &#125; from &quot;@sentry&#x2F;tracing&quot;;import App from &quot;.&#x2F;App&quot;;Sentry.init(&#123;  dsn: &quot;https:&#x2F;&#x2F;a5f1c39789b24bb7a434868b677e0c65@&#x2F;1063&quot;,  integrations: [new Integrations.BrowserTracing()],  &#x2F;&#x2F; Set tracesSampleRate to 1.0 to capture 100%  &#x2F;&#x2F; of transactions for performance monitoring.  &#x2F;&#x2F; We recommend adjusting this value in production  tracesSampleRate: 1.0,&#125;);ReactDOM.render(&lt;App &#x2F;&gt;, document.getElementById(&quot;root&quot;));&#x2F;&#x2F; Can also use with React Concurrent Mode&#x2F;&#x2F; ReactDOM.createRoot(document.getElementById(&#39;root&#39;)).render(&lt;App &#x2F;&gt;);</code></pre><p>The above configuration captures both error and performance data. To reduce the volume of performance data captured, change <code>tracesSampleRate</code> to a value between 0 and 1.</p><p>After this step, Sentry will report any uncaught exceptions triggered by your application.</p><p>You can trigger your first event from your development environment by raising an exception somewhere within your application. An example of this would be rendering a button whose <code>onClick</code> handler attempts to invoke a method that does not exist:</p><pre class="line-numbers language-none"><code class="language-none">return &lt;button onClick&#x3D;&#123;methodDoesNotExist&#125;&gt;Break the world&lt;&#x2F;button&gt;;</code></pre><p>Once you’ve verified the library is initialized properly and sent a test event, consider visiting our <a href="https://docs.sentry.io/platforms/javascript/guides/react/">complete React docs</a>. There you’ll find additional instructions for surfacing valuable context from React error boundaries, React Router, Redux, and more.</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 自动生成 .d.ts</title>
      <link href="//post/2021-06-10scss2type.html"/>
      <url>//post/2021-06-10scss2type.html</url>
      
        <content type="html"><![CDATA[<h2 id="CSS-Module-Typed"><a href="#CSS-Module-Typed" class="headerlink" title="CSS Module Typed"></a>CSS Module Typed</h2><h2 id="address"><a href="#address" class="headerlink" title="address"></a>address</h2><p><a href="https://marketplace.visualstudio.com/items?itemName=awwit.typed-css-modules-plugin">link</a></p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>Install deps first:</p><h3 id="require"><a href="#require" class="headerlink" title="require"></a>require</h3><p><code>npm install typed-css-modules</code></p><h3 id="if-you-need-less"><a href="#if-you-need-less" class="headerlink" title="if you need less"></a>if you need less</h3><p><code>npm install less</code></p><h3 id="if-you-need-scss-x2F-sass"><a href="#if-you-need-scss-x2F-sass" class="headerlink" title="if you need scss&#x2F;sass"></a>if you need scss&#x2F;sass</h3><p><code>npm install sass</code></p><h3 id="if-you-need-stylus"><a href="#if-you-need-stylus" class="headerlink" title="if you need stylus"></a>if you need stylus</h3><p><code>npm install stylus</code></p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>Modules can be installed globally. yarn is supported.</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>To switch the package manager (npm or yarn), you need to change the settings npm.packageManager of the built-in module vscode.npm.</p></blockquote><h3 id="Configuring"><a href="#Configuring" class="headerlink" title="Configuring"></a>Configuring</h3><p>By default, the option to automatically format .d.ts files using eslint is enabled. You can disable this feature through the setting “typed-css-modules.eslint.enable”: false.</p><p>Usage<br>put</p><p><code>// @type</code></p><p>or</p><p><code>/* @type */</code></p><p>ahead of your .css&#x2F;.less&#x2F;.scss&#x2F;.sass&#x2F;.styl file, and save, you will get a d.ts file in same directory.</p><h3 id="preview"><a href="#preview" class="headerlink" title="preview"></a>preview</h3><p><img src="https://s2.ax1x.com/2019/01/31/k1yTT1.gif"></p><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss">&#x2F;* @type *&#x2F;.root &#123;  padding: 16px;  min-height: 100%;  .empty-wrapper &#123;    height: 380px;    display: flex;    flex-direction: column;    align-items: center;    justify-content: center;  &#125;  &gt; h3 &#123;    font-size: inherit;    margin-bottom: 4px;  &#125;  .toolbar-wrapper &#123;    position: relative;    .toolbar &#123;      position: absolute;      margin: 12px 0;      z-index: 1;      &amp;.static &#123;        position: static;      &#125;      &gt; *:not(:first-child) &#123;        margin-left: 8px;      &#125;    &#125;  &#125;  .buttons&#123;    button &#123;      margin-right: 8px;    &#125;  &#125;&#125;.use-select&#123;  width: 300px&#125;</code></pre><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">declare const styles: &#123;  readonly &quot;root&quot;: string;  readonly &quot;empty-wrapper&quot;: string;  readonly &quot;toolbar-wrapper&quot;: string;  readonly &quot;toolbar&quot;: string;  readonly &quot;static&quot;: string;  readonly &quot;buttons&quot;: string;  readonly &quot;use-select&quot;: string;&#125;;export &#x3D; styles;</code></pre><h3 id="problem"><a href="#problem" class="headerlink" title="problem"></a>problem</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>Creates .d.ts files from css-modules .css&#x2F;.less&#x2F;.scss&#x2F;.sass&#x2F;.styl files.</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>Error: vscode-typed-css-modules: Cannot find global module ‘typed-css-modules’</p></blockquote><pre class="line-numbers language-none"><code class="language-none">npm install -g typed-css-modules</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode GitHub Copilot</title>
      <link href="//post/2022-05-08vscode.html"/>
      <url>//post/2022-05-08vscode.html</url>
      
        <content type="html"><![CDATA[<h2 id="Copilot"><a href="#Copilot" class="headerlink" title="Copilot"></a>Copilot</h2><a href="https://copilot.github.com/" target="_blank"><img src="https://copilot.github.com/head2x.png"  width= 100/></a><p>Your AI pair programmer</p><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a><a href="https://copilot.github.com/">官网</a></h3><p><img src="https://copilot.github.com/diagram.png"></p><h3 id="支持开发工具"><a href="#支持开发工具" class="headerlink" title="支持开发工具"></a>支持开发工具</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>support Visual Studio Code, Neovim, and IntelliJ-based IDEs like JetBrains IntelliJ IDEA, Android Studio or PyCharm.</p></blockquote><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><ul><li>需要人员审批通过，等[1-2 工作日]</li></ul><p><a href="https://github.com/features/copilot/signup">注册&#x2F;结果查看</a></p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>Join the GitHub Copilot waitlist<br>Access is limited to a small group of testers during the technical preview of GitHub Copilot. Sign up today for your chance to try it out and help us improve.</p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>You’re already on the waitlist for GitHub Copilot! We’ll notify you when we’ve enabled it on your account. Make sure your primary email address is up-to-date so we can notify you.</p></blockquote><h3 id="vscode-安装插件-Copilot"><a href="#vscode-安装插件-Copilot" class="headerlink" title="vscode 安装插件 Copilot"></a>vscode 安装插件 <code>Copilot</code></h3><p><img src="http://t-blog-images.aijs.top/img/20220508111956.webp"></p>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> AI编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git public key</title>
      <link href="//post/2016-06-20git.html"/>
      <url>//post/2016-06-20git.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">[root@izbp1hun1qsl59e2nzqyvcz ~]# git config --global user.name &quot;hailong.chen&quot;[root@izbp1hun1qsl59e2nzqyvcz ~]# git config --global user.email &quot;841660202@qq.com&quot;</code></pre><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>SSH<br>SSH keys<br>SSH key 可以让你在你的电脑和Code服务器之间建立安全的加密连接。 先执行以下语句来判断是否已经存在本地公钥：<br><code>cat ~/.ssh/id_rsa.pub</code><br>如果你看到一长串以 ssh-rsa或 ssh-dsa开头的字符串, 你可以跳过 ssh-keygen的步骤。<br>提示: 最好的情况是一个密码对应一个ssh key，但是那不是必须的。你完全可以跳过创建密码这个步骤。请记住设置的密码并不能被修改或获取。<br>你可以按如下命令来生成ssh key<br><code>ssh-keygen -t rsa -C &quot;841660202@qq.com&quot;</code><br>这个指令会要求你提供一个位置和文件名去存放键值对和密码，你可以点击Enter键去使用默认值。<br>用以下命令获取你生成的公钥：<br><code>cat ~/.ssh/id_rsa.pub</code><br>复制这个公钥放到你的个人设置中的SSH&#x2F;My SSH Keys下，请完整拷贝从ssh-开始直到你的用户名和主机名为止的内容。<br>如果打算拷贝你的公钥到你的粘贴板下，请参考你的操作系统使用以下的命令：<br>Windows:<br><code>clip &lt; ~/.ssh/id_rsa.pub</code><br>Mac:<br><code>pbcopy &lt; ~/.ssh/id_rsa.pub</code><br>GNU&#x2F;Linux (requires xclip):<br><code>xclip -sel clip &lt; ~/.ssh/id_rsa.pub</code><br>Applications<br>Eclipse<br>如何在Eclipse中添加ssh key: <a href="https://wiki.eclipse.org/EGit/User_Guide#Eclipse_SSH_Configuration">https://wiki.eclipse.org/EGit/User_Guide#Eclipse_SSH_Configuration</a><br>Tip: Non-default OpenSSH key file names or locations<br>如果，不管你有什么理由，当你决定去用一个非默认的位置或文件名去存放你的ssh key。你必须配置好你的ssh客户端以找到你的ssh私钥去连接Code服务器，对于OpenSSH客户端，这个通常是在~&#x2F;.ssh&#x2F;config类似的位置配置的：<br>Host my-git.company.com<br>RSAAuthentication yes<br>IdentityFile ~&#x2F;my-ssh-key-directory&#x2F;company-com-private-key-filename</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Last login: Sun Apr 17 16:06:15 on consoleN&#x2F;A: version &quot;N&#x2F;A -&gt; N&#x2F;A&quot; is not yet installed.You need to run &quot;nvm install N&#x2F;A&quot; to install it before using it.N&#x2F;A: version &quot;N&#x2F;A -&gt; N&#x2F;A&quot; is not yet installed.You need to run &quot;nvm install N&#x2F;A&quot; to install it before using it.The default interactive shell is now zsh.To update your account to use zsh, please run &#96;chsh -s &#x2F;bin&#x2F;zsh&#96;.For more details, please visit https:&#x2F;&#x2F;support.apple.com&#x2F;kb&#x2F;HT208050.chenhailong@chenhailongdeMacBook-Pro:~$ &#x2F;Users&#x2F;chenhailong&#x2F;Desktop -bash: &#x2F;Users&#x2F;chenhailong&#x2F;Desktop: is a directorychenhailong@chenhailongdeMacBook-Pro:~$ cd &#x2F;Users&#x2F;chenhailong&#x2F;Desktop chenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git clone git@github.com:841660202&#x2F;841660202.github.io.gitCloning into &#39;841660202.github.io&#39;...The authenticity of host &#39;github.com (20.205.243.166)&#39; can&#39;t be established.ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF&#x2F;zLDA0zPMSvHdkr4UvCOqU.This key is not known by any other namesAre you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? yesWarning: Permanently added &#39;github.com&#39; (ED25519) to the list of known hosts.git@github.com: Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.chenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git clone git@github.com:841660202&#x2F;841660202.github.io.gitCloning into &#39;841660202.github.io&#39;...git@github.com: Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.chenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ pbcopy &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub-bash: &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa.pub: No such file or directorychenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ cat ~&#x2F;.ssh&#x2F;id_rsa.pubcat: &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa.pub: No such file or directorychenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git config --global user.name &quot;hailong.chen&quot;chenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ chenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git config --global user.email &quot;841660202@qq.com&quot;chenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ cat ~&#x2F;.ssh&#x2F;id_rsa.pubcat: &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa.pub: No such file or directorychenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ ssh-keygen -t rsa -C &quot;841660202@qq.com&quot;Generating public&#x2F;private rsa key pair.Enter file in which to save the key (&#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsaYour public key has been saved in &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa.pubThe key fingerprint is:SHA256:bdtIDeRXGKxGTEa&#x2F;Ex3QdPtVoOUiwuiq7YKjKrLakbU 841660202@qq.comThe key&#39;s randomart image is:+---[RSA 3072]----+|         +&#x3D;.o**.o||       o +o.o*.oo||      . o.+.* o..||     .   oo&#x3D; +  o||    . . S.+ +   .||   o o   o + .   || .o E     o .    ||&#x3D;..+             ||@oooo            |+----[SHA256]-----+chenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ pbcopy &lt; ~&#x2F;.ssh&#x2F;id_rsa.pubchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git clone git@github.com:841660202&#x2F;841660202.github.io.gitCloning into &#39;841660202.github.io&#39;...remote: Enumerating objects: 441, done.remote: Counting objects: 100% (441&#x2F;441), done.remote: Compressing objects: 100% (216&#x2F;216), done.remote: Total 441 (delta 208), reused 401 (delta 168), pack-reused 0Receiving objects: 100% (441&#x2F;441), 1.34 MiB | 1.05 MiB&#x2F;s, done.Resolving deltas: 100% (208&#x2F;208), done.chenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ </code></pre><h2 id="设置github-SSH-keys"><a href="#设置github-SSH-keys" class="headerlink" title="设置github SSH keys"></a>设置github SSH keys</h2><p><a href="https://github.com/settings/keys">https://github.com/settings/keys</a></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Iterm2美化终端</title>
      <link href="//post/2017-07-09item2.html"/>
      <url>//post/2017-07-09item2.html</url>
      
        <content type="html"><![CDATA[<h2 id="oh-my-zsh-插件推荐"><a href="#oh-my-zsh-插件推荐" class="headerlink" title="oh-my-zsh 插件推荐 :"></a>oh-my-zsh 插件推荐 :</h2><h3 id="autojump、zsh-autosuggestion-以及-zsh-syntax-highlighting"><a href="#autojump、zsh-autosuggestion-以及-zsh-syntax-highlighting" class="headerlink" title="autojump、zsh-autosuggestion 以及 zsh-syntax-highlighting"></a>autojump、zsh-autosuggestion 以及 zsh-syntax-highlighting</h3><h3 id="推荐博客左岸博客"><a href="#推荐博客左岸博客" class="headerlink" title="推荐博客左岸博客"></a>推荐博客<a href="https://www.zrahh.com/archives/167.html">左岸博客</a></h3><h3 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h3><p><img src="http://t-blog-images.aijs.top/img/11460713-14c8ef376aabe04a.png"><br><img src="http://t-blog-images.aijs.top/img/11460713-ef2da0af46da7712.png"><br><img src="http://t-blog-images.aijs.top/img/11460713-e49ed15245409774.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量删除目录</title>
      <link href="//post/2019-10-30shell.html"/>
      <url>//post/2019-10-30shell.html</url>
      
        <content type="html"><![CDATA[<h2 id="删除某个目录下所有子目录的node-modules"><a href="#删除某个目录下所有子目录的node-modules" class="headerlink" title="删除某个目录下所有子目录的node_modules"></a>删除某个目录下所有子目录的node_modules</h2><pre class="line-numbers language-none"><code class="language-none"># 查找 &#x2F;tmp&#x2F;test&#x2F; 子目录下所有 modu 执行删除find &#x2F;tmp&#x2F;test&#x2F; -type d -name modu |xargs rm -rf</code></pre><pre class="line-numbers language-none"><code class="language-none"># 查找 &#x2F;tmp&#x2F;test&#x2F; 子目录下所有 node_modules 执行删除find &#x2F;tmp&#x2F;test&#x2F; -type d -name node_modules |xargs rm -rf</code></pre>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Layoffs</title>
      <link href="//post/2022-03-25Layoffs.html"/>
      <url>//post/2022-03-25Layoffs.html</url>
      
        <content type="html"><![CDATA[<h2 id="一家上市公司近期「B业」人数变化"><a href="#一家上市公司近期「B业」人数变化" class="headerlink" title="一家上市公司近期「B业」人数变化"></a>一家上市公司近期「B业」人数变化</h2><p><img src="http://t-blog-images.aijs.top/img/11460713-98eaa0e7b6e68c6f.png" alt="2022-03-30"><br><img src="http://t-blog-images.aijs.top/img/11460713-f2c5edfe1032663d.png" alt="2022-03-31"><br><img src="http://t-blog-images.aijs.top/img/11460713-0d1febc4e52867bd.png" alt="2022-04-01"><br><img src="http://t-blog-images.aijs.top/img/11460713-3c855f37997fca9d.png" alt="2022-04-02"><br><img src="http://t-blog-images.aijs.top/img/11460713-33ab1685e98181c5.png" alt="2022-04-07"><br><img src="http://t-blog-images.aijs.top/img/11460713-f6178de2c725ba0d.png" alt="2022-04-08"><br><img src="http://t-blog-images.aijs.top/img/11460713-1c49e477ebebdb04.png" alt="2022-04-11"><br><img src="http://t-blog-images.aijs.top/img/11460713-ff83505b93a40211.png" alt="2022-04-12"><br><img src="http://t-blog-images.aijs.top/img/11460713-6e26dc81d1bc1bb5.png" alt="2022-04-13"><br><img src="http://t-blog-images.aijs.top/img/11460713-6f19d0ccbc1470d1.png" alt="2022-04-14"><br><img src="http://t-blog-images.aijs.top/img/11460713-5fa4eb0d60075e10.png" alt="2022-04-15"><br><img src="http://t-blog-images.aijs.top/img/11460713-a75f3fa3bc0cc9ad.png" alt="2022-04-20"><br><img src="http://t-blog-images.aijs.top/img/11460713-2cb92c5f9a24df72.png" alt="2022-04-21"><br><img src="http://t-blog-images.aijs.top/img/11460713-ea85739148839bd2.png" alt="image.png"><br><img src="http://t-blog-images.aijs.top/img/11460713-cc82a2680e69dccd.png" alt="2022-04-26"><br><img src="http://t-blog-images.aijs.top/img/11460713-fdd722c44a598a88.png" alt="2022-04-27"><br><img src="http://t-blog-images.aijs.top/img/11460713-35395fd4c9b459ea.png" alt="2022-04-28"><br><img src="http://t-blog-images.aijs.top/img/20220505093216.webp" alt="2022-05-05"><br><img src="http://t-blog-images.aijs.top/img/20220509134022.webp" alt="2022-05-09"><br><img src="http://t-blog-images.aijs.top/img/20220510180811.webp" alt="2022-05-10"></p>]]></content>
      
      
      <categories>
          
          <category> Layoffs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Layoffs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nestjs服务端技术栈</title>
      <link href="//post/2021-06-30node.html"/>
      <url>//post/2021-06-30node.html</url>
      
        <content type="html"><![CDATA[<h2 id="NestJS中文文档"><a href="#NestJS中文文档" class="headerlink" title="NestJS中文文档"></a>NestJS中文文档</h2><p><a href="https://nestjs.bootcss.com/">NestJS中文文档</a><br><a href="https://docs.nestjs.cn/">NestJS中文文档</a><br><a href="https://github.com/nestjs/nest">github</a> 42.2K</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>A progressive Node.js framework for building efficient, scalable, and enterprise-grade server-side applications on top of TypeScript &amp; JavaScript (ES6, ES7, ES8) 🚀</p></blockquote><h2 id="TypeORM"><a href="#TypeORM" class="headerlink" title="TypeORM"></a>TypeORM</h2><p><a href="https://typeorm.biunav.com/zh/#%E5%AE%89%E8%A3%85">TypeORM中文文档</a><br><a href="https://github.com/typeorm/typeorm">github地址</a> 26.3K</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>ORM for TypeScript and JavaScript (ES7, ES6, ES5). Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, SAP Hana, WebSQL databases. Works in NodeJS, Browser, Ionic, Cordova and Electron platforms.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web office预览</title>
      <link href="//post/2021-09-07web.html"/>
      <url>//post/2021-09-07web.html</url>
      
        <content type="html"><![CDATA[<p>第一步<br>将文件上传到你的服务器里，并支持url下载这个文件。<br>第二步<br>访问：<a href="http://view.officeapps.live.com/op/view.aspx?src=%E8%A6%81%E9%A2%84%E8%A7%88%E6%96%87%E4%BB%B6%E7%9A%84url%E5%9C%B0%E5%9D%80%EF%BC%88%E8%AE%B0%E5%BE%97url%E7%BC%96%E7%A0%81%E5%93%A6%EF%BC%89">http://view.officeapps.live.com/op/view.aspx?src=要预览文件的url地址（记得url编码哦）</a><br>第三步<br>可以使用iframe嵌入你的系统<br>更多<br>详情查看：<a href="https://www.microsoft.com/en-us/microsoft-365/blog/2013/04/10/office-web-viewer-view-office-documents-in-a-browser/?eu=true">https://www.microsoft.com/en-us/microsoft-365/blog/2013/04/10/office-web-viewer-view-office-documents-in-a-browser/?eu=true</a><br><img src="http://t-blog-images.aijs.top/img/11460713-93b26693cac5c2d8.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node-dev</title>
      <link href="//post/2021-11-02node.html"/>
      <url>//post/2021-11-02node.html</url>
      
        <content type="html"><![CDATA[<h2 id="在幕后用ts-node调整node-dev"><a href="#在幕后用ts-node调整node-dev" class="headerlink" title="在幕后用ts-node调整node-dev"></a>在幕后用ts-node调整node-dev</h2><ul><li>作用：在幕后用ts-node调整node-dev</li><li>优点：<ul><li>任意依赖的文件改变时候，重启node process，但是共享ts编译线程。</li><li>因为不需要每次ts-node编译的实例化，而提升性能</li></ul></li><li>配置项：</li><li>注意事项：</li><li>截图：<br><img src="http://t-blog-images.aijs.top/img/11460713-10cfe41335cfeb5d.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简书迁移到OSS</title>
      <link href="//post/2022-04-27mv-blog-jianshu.html"/>
      <url>//post/2022-04-27mv-blog-jianshu.html</url>
      
        <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre class="line-numbers language-none"><code class="language-none">cat .&#x2F;* |grep uploadimages.jianshu.io &gt; image.txtmkdir img3dcd img3dwget -i ..&#x2F;image.txtsed -i&#39;&#39; -e &#39;s&#x2F;!\[image.png\](&#x2F;&#x2F;g&#39; image.txtsed -i&#39;&#39; -e &#39;s&#x2F;)&#x2F;&#x2F;g&#39; image.txt</code></pre><h2 id="迁移简书图片下载后重命名"><a href="#迁移简书图片下载后重命名" class="headerlink" title="迁移简书图片下载后重命名"></a>迁移简书图片下载后重命名</h2><pre class="line-numbers language-none"><code class="language-none">#! &#x2F;bin&#x2F;shfor eachfile in &#96;ls -B&#96;do    # echo $&#123;eachfile%%\%3F*&#125; # 截掉最后.txt    # $ % https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;b3bdc3b3968e  filename&#x3D;$&#123;eachfile%%\%3F*&#125;  filehead&#x3D;&#96;echo $eachfile | awk -F \%3F &#39;&#123;print $1 &#125;&#39;&#96;  filelast&#x3D;&#96;echo $eachfile | awk -F \%3F &#39;&#123;print $2 &#125;&#39;&#96;  # mv $filename.txt $&#123;filelast&#125;_$filehead.txt  # https:&#x2F;&#x2F;baijiahao.baidu.com&#x2F;s?id&#x3D;1726788915185806701&amp;wfr&#x3D;spider&amp;for&#x3D;pc  echo &#39;--&#39;  # echo $filename  echo $filehead #分割字符左边部分  echo $filelast #分割字符右边部分  # 右边文件存在的情况下才处理  if [ &quot;$filelast&quot; !&#x3D; &quot;&quot; ]  then    echo &#39;执行rename &#39;    mv $eachfile $filehead  fidone</code></pre>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
