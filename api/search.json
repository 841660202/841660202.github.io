[{"id":"832da5e8309651301e718ddb27ca95fd","title":"vscode插件 paste code to snippets","content":"粘贴代码，生成用户代码片段背景\n其他插件具有共性，而不具特性 ，每次写代码，要么用第三方插件，现成的代码片段，时常不能满足日常开发需要\n自定义代码片段，手写 费时费力，一般步骤，粘贴、修改、格式化\n其他插件类似vscode宏变量的使用少之又少， 要么将开源插件定制化，要么重新开发\n快捷变量记不住\n\npaste code to snippets 优点：\n高度定制化\n跨语言（任何vscode支持的语言，都可在对应类型片段文件中进行增加）\n使用简单 （复制、唤起命令、挖孔）\n快捷变量完全自定义（想怎么写就怎么写）\n\n操作GIF\n","slug":"2022-05-11vscode","date":"2022-05-11T01:38:30.000Z","categories_index":"vscode","tags_index":"vscode,插件","author_index":"陈海龙"},{"id":"8a3cd3de20e0b1971e27a9e96209af62","title":"HTTP3","content":"现状\n\n\n\n\n\n\n\n\n\nHTTP/3 的基础即谷歌多年探索的基于 UDP 的 QUIC 协议。与 TCP 相比，使用 UDP 可以提供更大的灵活性，并且可以使 QUIC 完全于用户空间中实现——对协议实现的更新不像 TCP 那样需要绑定到操作系统更新。使用 QUIC，可以简单地将 HTTP 级别的流映射到 QUIC 流的顶部，从而继承 HTTP/2 的所有优点，而不会产生队头阻塞。HTTP/3 虽仍处于草案状态，但很多用户已经跃跃欲试。\n优势\nHTTP&#x2F;3 利用 QUIC 加速 HTTP 请求，QUIC 提供比 TCP 和 TLS 更高的加密和性能\nQUIC 是一种默认加密的新传输协议，旨在加快 HTTP 传输速度以及使其更加安全\nHTTP&#x2F;3 基于 UDP，如果数据包丢失，只会中断一个流，而不会中断所有流，提高了同时获取多个对象的性能\n支持 0-RTT，消除服务器的 TLS 确认，使后续连接的启动速度更快\n\n演示下图表示 HTTP&#x2F;2 和 HTTP&#x2F;3 多路复用两个请求时，数据包丢失及其影响（请求及其相关的响应分别为深蓝和浅蓝色）\nHTTP&#x2F;2 多路复用 2 个请求。响应被分解为多个数据包，一旦一个数据包丢失了，两个请求都被阻止。HTTP&#x2F;3 复用 2 个请求。虽然浅色的数据包丢失了，但是深色的数据包传输得很好。在相同丢包率的条件下，HTTP&#x2F;3 和 HTTP&#x2F;2 性能测试对比如下测试环境：服务端（HTTP&#x2F;3 with cubic &amp; HTTP&#x2F;2 with bbr）、客户端（cubic）\n更多查看更多\n","slug":"2022-05-11http","date":"2022-05-11T01:26:00.000Z","categories_index":"工具","tags_index":"工具","author_index":"陈海龙"},{"id":"1827bdebccdb6131916a11069d50f729","title":"跨域问题","content":"背景浏览器安全策略限制跨域访问\n内容安全策略是一个额外的安全层，用于检测并削弱某些特定类型的攻击，包括跨站脚本 (XSS) 和数据注入攻击等。无论是数据盗取、网站内容污染还是散发恶意软件，这些攻击都是主要的手段。\n\n使用方式为使 CSP 可用, 你需要配置你的网络服务器返回 Content-Security-Policy，或者在 HTML  元素种也可配置该策略, 例如：\n\n&lt;meta\n  http-equiv&#x3D;&quot;Content-Security-Policy&quot;\n  content&#x3D;&quot;default-src &#39;self&#39;; img-src https:&#x2F;&#x2F;*; child-src &#39;none&#39;;&quot;\n&#x2F;&gt;\n\n\n配置示例（1）一个网站管理者想要所有内容均来自站点的同一个源 (不包括其子域名)\n\nContent-Security-Policy: default-src &#39;self&#39;\n\n（2）一个网站管理者允许内容来自信任的域名及其子域名 (域名不必须与 CSP 设置所在的域名相同)\nContent-Security-Policy: default-src &#39;self&#39; *.trusted.com\n\n（3）一个网站管理者允许网页应用的用户在他们自己的内容中包含来自任何源的图片, 但是限制音频或视频需从信任的资源提供者(获得)，所有脚本必须从特定主机服务器获取可信的代码。\nContent-Security-Policy: default-src &#39;self&#39;;\nimg-src *;\nmedia-src media1.com media2.com; script-src userscripts.example.com\n\n在这里，各种内容默认仅允许从文档所在的源获取, 但存在如下例外:\n图片可以从任何地方加载(注意 “*“ 通配符)。多媒体文件仅允许从 media1.com 和 media2.com 加载(不允许从这些站点的子域名)。可运行脚本仅允许来自于 userscripts.example.com。\n作者：菜鸡前端链接：https://www.jianshu.com/p/a45924e99a6d来源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n处理方式nginx\n脚本\n\n\nlisten 80; # 监听的端⼝\n   add_header &#39;Access-Control-Allow-Origin&#39; &#39;$http_origin&#39; ;\n   add_header &#39;Access-Control-Allow-Credentials&#39; &#39;true&#39; ;\n   add_header &#39;Access-Control-Allow-Methods&#39; &#39;PUT,POST,GET,DELETE,OPTIONS&#39; ;\n   add_header &#39;Access-Control-Allow-Headers&#39; &#39;Content-Type,Content-Length,Authorization,Accept,X-Requested-With&#39; ;\n\n\n实际操作\n\n\njsonp 方式 &lt;动态 script&gt;服务端设置，类似 nginx其他（不常用）","slug":"2022-05-09cors","date":"2022-05-09T13:30:47.000Z","categories_index":"cors","tags_index":"cors,nginx","author_index":"陈海龙"},{"id":"99460a2013287be2d51642da6dd169f8","title":"面试题汇总","content":"值得收藏的链接\n码上通天\n面试完50个人后我写下这篇总结\nif 我是前端团队 Leader，怎么制定前端协作规范?\n做了一份前端面试复习计划，保熟～\n\n","slug":"2022-05-08interview","date":"2022-05-08T08:27:00.000Z","categories_index":"","tags_index":"面试","author_index":"陈海龙"},{"id":"8c2ce163d41ac846e552a207bb84d5a9","title":"js变量和作用域","content":"变量var let const区别\n变量提升：var 存在变量提升，let、const没有（let、const存在暂时性死区）\n作用域的限制：var不受作用域的限制，而let、const受当前作用域的限制\n重复声明：var可以重复声明，let、const不可以\nconst是常量，必须有初始值，否则报错，不能更改，但是可以更改对象内部属性\n\n变量分类\njs中的变量分为两种：\n全局变量和局部变量。全局变量很好理解，就是在js任何地方都能够调用的变量；\n而局部变量就只能在函数的内部才能够调用的变量。\n\n\n\nvar a&#x3D;10;\nfunction show()&#123;\n  console.log(&#39;a:&#39;+a); &#x2F;&#x2F;a:10\n  var b&#x3D;2;\n  console.log(&#39;inside b:&#39;+b); &#x2F;&#x2F;inside b:2\n&#125;\nshow();\nconsole.log(&#39;outside b:&#39;+b); &#x2F;&#x2F;b is no defined\n　　在上面的程序中，变量a就是一个全局变量，在函数的内部能够调用。但是这里的变量b就是局部变量，当函数结束调用后，变量b就被回收了，因此在函数外部调用失败。\n另外需要特别注意的是：\n\n\n\n\n\n\n\n\n\n如果在声明局部变量时不用var声明，那么这个变量自动“提升”为全局变量。\nvar a&#x3D;10;\nfunction show()&#123;\n  console.log(&#39;a:&#39;+a); &#x2F;&#x2F;a:10\n  b&#x3D;2;\n  console.log(&#39;inside b:&#39;+b); &#x2F;&#x2F;inside b:2\n&#125;\nshow();\nconsole.log(&#39;outside b:&#39;+b); &#x2F;&#x2F;outside b:2\n对比两段代码，如果你在声明b&#x3D;2时没有写var，那么b就隐式地声明为全局变量，在函数外面还是能够被调用到的。虽然使用全局变量能够在任何地方调用，很方便，但是全局变量的优点也给他带来了缺点：\n\n一直占用内存：全局变量保存在静态存储区，如果全局变量过多会占多大量内存，严重影响页面的性能。\n影响了函数的独立性：一般函数都是传入参数和传出返回值进行运算的，如果函数依赖于全局变量，破坏了函数的这种独立性，\n可移植性: 同时也降低了函数的可移植性。\n\n因此我们在定义变量时一般要尽可能少的定义全局变量。\n变量声明\n\n\n\n\n\n\n\n\n函数声明优先于变量声明\n　　下面我们通过一段代码来说明.\nvar a; \nfunction a()&#123;\n&#125;\nconsole.log(typeof a); &#x2F;&#x2F;function\n&#x2F;&#x2F; 或许有人是认为函数声明在后面的原因，那么调换一下位置。\nfunction a()&#123;\n&#125;\nvar a; \nconsole.log(typeof a); &#x2F;&#x2F;function\n&#x2F;&#x2F; 调换位置后变量a的类型还是function，这时候声明变量a的语句没有起作用，被函数声明覆盖了。\n&#x2F;&#x2F; 因此函数声明优先于变量的声明。\n&#x2F;&#x2F; 但是如果我们在声明的同时给a进行赋值。\nfunction a()&#123;\n&#125;\nvar a&#x3D;&#39;xyf&#39;; \nconsole.log(typeof a); &#x2F;&#x2F;string\n&#x2F;&#x2F; 我们将其调换一下位置再次进行验证。\nvar a&#x3D;&#39;xyf&#39;; \nfunction a()&#123;\n&#125;\nconsole.log(typeof a); &#x2F;&#x2F;string\n&#x2F;&#x2F; 可以看到，给变量a进行赋值后，不管变量a在哪，其类型变为字符串类型，上面两段代码相当于如下代码：\nfunction a()&#123;\n&#125;\nvar a;\na&#x3D;&#39;xyf&#39;;\nconsole.log(typeof a); &#x2F;&#x2F;string\n&#x2F;&#x2F; a最后被赋值为字符串，因此a的类型自然是字符串\n作用域全局作用域　js中作用域只有函数作用域和全局作用域，\n函数作用域　js中作用域只有函数作用域和全局作用域，\n块级作用域  let const有块级作用域。函数作用域是比较容易理解的，那么什么是块级作用域呢？  &#123;var a &#x3D; 1&#125;\n\nconsole.log(a)\nVM2355:1 1\n  &#123;let a &#x3D;1&#125;\n\nconsole.log(a)\nVM2079:1 Uncaught ReferenceError: a is not defined\n\n\n\n\n\n\n\n\n\n任何一对花括号（｛和｝）中的语句集都属于一个块，在这之中定义的所有变量在代码块外都是不可见的，我们称之为块级作用域。\n　　理解了块级作用域，来看一下下面的小例子。\nconsole.log(v); &#x2F;&#x2F;undefined\nvar v &#x3D; &quot;world&quot;;\n　　&#x2F;&#x2F; 这段代码很好理解，由于变量v在没有赋值前使用了，所以是undefined。其实这里存在着声明的提前。\n当前作用域内的声明都会提升到作用域的最前面，包括变量和函数的声明\n由于js作用域中的声明都会被提升到作用域的最前面，所以，上面的代码相当于：\nvar v;\nconsole.log(v); &#x2F;&#x2F;undefined\nv &#x3D; &quot;world&quot;;\n&#x2F;&#x2F; 这样就能很清晰地理解为什么变量v是undefined的了。\n&#x2F;&#x2F;下面我们把变量v放到一个方法中去：\nif(true)&#123;\n  var v &#x3D; &quot;hello&quot;;\n&#125;\nconsole.log(v); &#x2F;&#x2F;hello\n&#x2F;&#x2F; 在这里由于js没有块级作用域，所以if方法没有“形成”一个封闭的作用域，\n&#x2F;&#x2F; 并不能够“阻挡”外面的代码获取里面的变量。\n函数作用域　　我们再把变量v放到函数中去：\nfunction show()&#123;\n  var v&#x3D;&#39;world&#39;;\n&#125;\nshow();\nconsole.log(v); &#x2F;&#x2F;undefined\n　　由于show函数是一个函数作用域，“阻挡”外面的代码获取里面变量（并不能阻挡里面的代码获取外面的变量），所以函数外部并不能获取到函数里面的变量v。因此证明了js中只有函数作用域，没有块级作用域。　　再来看下面的一段代码：\nvar v&#x3D;&#39;hello&#39;;\nfunction show()&#123;\n  console.log(v); &#x2F;&#x2F;undefined\n  var v&#x3D;&#39;world&#39;;\n&#125;\nshow();\n　　很多人看到这边都会很疑惑，不是说这边show函数中能够获取到函数外面的变量的么？但是由于这边是一个函数作用域，而函数作用域存在着变量声明的提前，因此，上面的代码相当于下面的代码：\nvar v&#x3D;&#39;hello&#39;;\nfunction show()&#123;\n\tvar v;\n\tconsole.log(v); &#x2F;&#x2F;undefined\n\tv&#x3D;&#39;world&#39;;\n&#125;\nshow();\n　　这里把变量v的声明放到了整个函数作用域的最前面，因此显示为undefined。理解了上面的代码，相信下面的代码也不难理解了。\nvar v &#x3D; &quot;hello&quot;;\n(function()&#123;\n  console.log(v);\n  var v &#x3D; &quot;world&quot;;\n&#125;)();\n\n　　在这里自执行函数形成了函数作用域\n需要注意的是变量提升只提升函数的声明，并不提升函数的定义\nshow(); &#x2F;&#x2F;show is not a function\nvar show&#x3D;function()&#123;\n\t&#x2F;&#x2F;...\n&#125;\nshow(); &#x2F;&#x2F;成功运行\n\n　　或许有人有疑问，为什么这边定义的函数就不能执行呢？在这里我们需要明白函数在js中是如何进行定义的。\n\n\n\n\n\n\n\n\n\n函数有两种定义方式，一种是函数声明，另一种是函数表达式。那么什么是函数声明什么是函数表达式呢？\n&#x2F;&#x2F;函数声明\nfunction show()&#123;\n\t&#x2F;&#x2F;....\n&#125;\n&#x2F;&#x2F;函数表达式\nvar show&#x3D;function()&#123;\n\t&#x2F;&#x2F;...\n&#125;\n乍一看，他们长得很像，写法都差不多，但是实际上还是有区别的。\n\njs的解析器对函数声明和函数表达式并不是一视同仁的对待的，有点“种族歧视”的意思在里面。\n函数声明就像是“一等公民”，js会优先读取，确保在执行前就已经被解析了，所以函数声明放在当前作用域的任何地方都能够被调用，甚至放到调用函数声明之后面。\n而函数表达式就显得比较“普通”，和一般的变量一样，只有到执行到该行时才进行解析，因此，调用函数表达式要在定义后进行使用。\n\notherhttps://juejin.cn/post/6844904019165446158\n","slug":"2022-05-08varible","date":"2022-05-08T02:00:00.000Z","categories_index":"js","tags_index":"面试,js","author_index":"陈海龙"},{"id":"4e47b6e9bf7ea41cfbf0d4f0a3fe5d3c","title":"Lerna调试开源库遇到的问题","content":"yarn install --mutex network:42424 --non-interactive\n\n👑 ~&#x2F;Desktop&#x2F;slate git:(main) $ lerna --version\n4.0.0\n\n\n👑 ~&#x2F;Desktop&#x2F;slate git:(main) $ yarn global add lerna@3.19.0    \nUsage Error: The &#39;yarn global&#39; commands have been removed in 2.x - consider using &#39;yarn dlx&#39; or a third-party plugin instead\n\n$ yarn run [--inspect] [--inspect-brk] &lt;scriptName&gt; ...\n👑 ~&#x2F;Desktop&#x2F;slate git:(main) $ yarn --version              \n3.0.1","slug":"2022-05-05lerna","date":"2022-05-05T13:30:47.000Z","categories_index":"工具","tags_index":"工具","author_index":"陈海龙"},{"id":"80947b2a66ed033838be54dc8f90264b","title":"MAC存储空间不足问题","content":"\n","slug":"2022-05-05mac","date":"2022-05-05T13:30:47.000Z","categories_index":"工具","tags_index":"工具","author_index":"陈海龙"},{"id":"462f06ba8f007318cafbef853cf322ba","title":"String相关面试代码","content":"转化为驼峰命名\n\n\n\n\n\n\n\n\nvar s1 = &quot;get-element-by-id&quot;\nvar f &#x3D; function (s) &#123;\n  return s.replace(&#x2F;-\\w&#x2F;g, function (x) &#123;\n    return x.splice(1).toUpperCase();\n  &#125;);\n&#125;;\n\n模版引擎实现let template &#x3D; &quot;我是&#123;&#123;name&#125;&#125;,年龄&#123;&#123;age&#125;&#125;,性别&#123;&#123;sex&#125;&#125;&quot;;\nlet data &#x3D; &#123;\n  name: &quot;姓名&quot;,\n  age: 18,\n&#125;;\n\nrender(template, data); &#x2F;&#x2F;我是姓名,年龄18,性别undefined\n\nfunction render(template, data) &#123;\n  &#x2F;&#x2F; 模版字符串正则\n  const resg &#x3D; &#x2F;\\&#123;\\&#123;(\\w+)\\&#125;\\&#125;&#x2F;;\n  &#x2F;&#x2F; 判断模版里是否有模版字符串\n  if (reg.test(template)) &#123;\n    &#x2F;&#x2F; 查找当前模版里第一个模版字符串的字符\n    const name &#x3D; reg.exec(template)[1];\n    &#x2F;&#x2F; 将第一个模版字符串渲染\n    template &#x3D; template.replace(reg, data[name]);\n    &#x2F;&#x2F; 递归的渲染并返回渲染后的结构\n    return render(template, data);\n  &#125;\n&#125;\n\n解析 URL Params 为对象let url &#x3D;\n  &quot;http:&#x2F;&#x2F;www.domain.com&#x2F;?user&#x3D;anonymouse&amp;id&#x3D;123&amp;id&#x3D;456&amp;city&#x3D;%E5%8C%97%E4%BA%AC&amp;enabled&quot;;\n\n&#x2F;**\n * 结果\n * &#123;\n *  user: &#39;anonymouse&#39;,\n *  id: [123,456], &#x2F;&#x2F; 重复出现的key，要转化成数组\n *  city: &#39;北京&#39;, &#x2F;&#x2F; 中文需要解码\n *  enabled: true &#x2F;&#x2F; 未指定值的key，约定为true\n *\n *\n * &#125;\n *\n **&#x2F;\nfunction paramParam(url) &#123;\n  const paramsStr &#x3D; &#x2F;.+\\?(.+)$&#x2F;.exec(url)[1];\n  const paramsArr &#x3D; paramsArr.split(&quot;&amp;&quot;);\n  let paramsObj &#x3D; &#123;&#125;;\n\n  paramsArr.forEach((param) &#x3D;&gt; &#123;\n    if (&#x2F;&#x3D;&#x2F;.test(param)) &#123;\n      let [key, val] &#x3D; param.split(&quot;&#x3D;&quot;); &#x2F;&#x2F; 拆分键&#x2F;值\n      val &#x3D; decodeURLComponent(val); &#x2F;&#x2F; 汉字解码\n      val &#x3D; &#x2F;^\\d+$&#x2F;.test(val) ? parseFloat(val) : val; &#x2F;&#x2F; 数字转化\n      if (paramsObj.hasOwnProperty(key)) &#123;\n        paramsObj[key] &#x3D; [].concat(paramsObj[key], val); &#x2F;&#x2F; 重复key转数组\n      &#125; else &#123;\n        paramsObj[key] &#x3D; val;\n      &#125;\n    &#125; else &#123;\n      paramsObj[key] &#x3D; true; &#x2F;&#x2F; 处理约定\n    &#125;\n  &#125;);\n&#125;\n\n查找字符串中，出现最多的字符和个数let str &#x3D; &quot;abcabcabcbbcccc&quot;;\nlet num &#x3D; 0;\nlet char &#x3D; &quot;&quot;;\n\n&#x2F;&#x2F; 先排序，后用正则处理个数\n\nstr &#x3D; str.split(&quot;&quot;).sort().join(&quot;&quot;);\n\nlet re &#x3D; &#x2F;(\\w)\\1+&#x2F;g;\n\nstr.replace(re, ($0, $1) &#x3D;&gt; &#123;\n  if (num &lt; $0.length) &#123;\n    num &#x3D; $0.length;\n    char &#x3D; $1;\n  &#125;\n&#125;);\n\n字符串查找a &#x3D; &quot;34&quot;;\nb &#x3D; &quot;1234567&quot;; &#x2F;&#x2F; 返回2\na &#x3D; &quot;35&quot;;\nb &#x3D; &quot;1234567&quot;; &#x2F;&#x2F; 返回 -1\na &#x3D; &quot;355&quot;;\nb &#x3D; &quot;1234355&quot;; &#x2F;&#x2F; 返回5\n\nfunction isContain(a, b) &#123;\n  for (let i in b) &#123;\n    if (a[0] &#x3D;&#x3D;&#x3D; b[i]) &#123;\n      let tmp &#x3D; true;\n      for (let j in a) &#123;\n        if (a[j] !&#x3D;&#x3D; b[~~i + ~~j]) &#123;\n          tmp &#x3D; false;\n        &#125;\n      &#125;\n      if (tmp) &#123;\n        return i;\n      &#125;\n    &#125;\n  &#125;\n  return -1;\n&#125;\n\n实现千分位分隔符&#x2F;&#x2F; 保留三位小数\nparaseToMoney(1234.56); &#x2F;&#x2F; return &#39;1,234.56&#39;\nparaseToMoney(123456789); &#x2F;&#x2F; return 123,456,789\nparaseToMoney(1087654.321); &#x2F;&#x2F; return 1,087,654.321\n\nfunction paraseToMoney(params) &#123;\n  num &#x3D; parseFloat(num.toFixed(3));\n  let [integer, decimal] &#x3D; String.prototype.split.call(num, &quot;.&quot;);\n  integer &#x3D; integer.replace(&#x2F;\\d(?&#x3D;(\\d&#123;3&#125;))+$&#x2F;, &quot;$&amp;,&quot;);\n  return integer + &quot;.&quot; + (decimal ?? &quot;&quot;);\n&#125;\n\n判断是否是电话号码function isPhone(str) &#123;\n  let regx &#x3D; &#x2F;^1[34578]\\d&#123;9&#125;$&#x2F;;\n  return regx.test(str);\n&#125;\n\n判断是否是邮箱function isEmail(mail) &#123;\n  var regx &#x3D; &#x2F;^(a-zA-Z0-9_\\-)+@(a-zA-Z0-9_\\-)+(\\.[a-zA-Z0-9_\\-])+$&#x2F;;\n\n  return regx.test(email);\n&#125;\n\n校验身份证function isCard(number) &#123;\n  var regx &#x3D; &#x2F;(^\\d&#123;15&#125;$)|(^\\d&#123;17&#125;(\\d|X|x)$)&#x2F;;\n\n  return regx.test(number);\n&#125;\n","slug":"2022-05-03string","date":"2022-05-04T00:00:00.000Z","categories_index":"前端","tags_index":"前端","author_index":"陈海龙"},{"id":"39b06ee79b8fd96256d44a33e065e573","title":"如何更好的沉淀","content":"背景\n工作日常经验性总结放哪？\n存电脑，电脑坏了重做系统没了，\n放到电脑备忘录，卧槽，怎么没及时更新\n放自己的服务器，没时间打理，服务器到期，嗝屁了，没来的及迁移\n\nhexo\nhexo由于有丰富的插件和主题，使用及部署方便，备受欢迎\n自己购买服务器部署，服务器到期后续费很贵\n放到第三方博客上，好一点的像简书，每天发布限制两篇，可控性太差\n\nhexo 主题进行博客美化,这里使用 aurora\ntheme: aurora\ntridiamondAlphaHinex\n阿里云oss\n图片资源放到github上，访问较慢，为了提升体验，将资源放到oss上，权限配置为公开，可被任何用户访问\n\n阿里云域名\n域名访问比较方便，图片资源只有在使用域名的情况下，各资源可以预览，而不仅仅是下载\n\nPicGo图床「贼好用，\n思考：除此之外，因为其开源我们可以学习下作者是如何处理插件的」\n为博客中md文档提供图片链接，放到阿里云oss上\n上传成功\n因为开发过electron，第一想到的是我要debug,打开控制台\n域名配错不可访问\n遇到图片,作为程序猿第一反应要优化「压缩」compress\n插件下载\n插件启用\n插件是否生效了\n插件列表插件列表总结：总体而言picgo已经很好了，有几点可以优化\n已有图片二次重新上传压缩功能\n窗口实在是太小了，正常情况下可以手动拖拽改变大小书写文章 hexo页面不热重载？\n\nyarn add global browser-sync\nyarn add hexo-browsersync\n启用评论# For local development only!\ngitalk:\n  enable: false\n  autoExpand: true\n  clientID: &#39;&#39;\n  clientSecret: &#39;&#39;\n  repo: &#39;dev-blog-comments&#39;\n  owner: &#39;TriDiamond&#39;\n  admin: [&#39;TriDiamond&#39;]\n  id: uid\n  language: en\n  distractionFreeMode: true\n  recentComment: true\n  proxy: &#39;&#39;\n\n# Valine comment plugin (recommended!)\n# see https:&#x2F;&#x2F;valine.js.org&#x2F;quickstart.html\nvaline:\n  enable: true\n  app_id: 去申请\n  app_key: 去申请\n  avatar: &#39;http:&#x2F;&#x2F;t-blog-images.aijs.top&#x2F;img&#x2F;avatar.jpeg&#39;\n  placeholder: Leave your thoughts behind~\n  visitor: true\n  lang: en\n  avatarForce: false\n  meta: [&#39;nick&#39;, &#39;mail&#39;]\n  requiredFields: []\n  admin: &#39;海龙&#39;\n  recentComment: true\n\n\n常见问题\n每次发布后，github page 自定义域名会丢失\n\n\n\n\n\n\n\n\n在_posts目录下建立CNAME文件 填写上自己的域名\n\n图床picGo，上传了图片，在oss上查看也成功了，但是picGo相册中没有展示\n\n\n\n\n\n\n\n\n/Users/chenhailong/Library/Application Support/picgo目录下，删除 rm picgo.db,重新启动见issue #781\n\n\n","slug":"2022-04-28博客创建","date":"2022-04-30T03:23:23.729Z","categories_index":"","tags_index":"","author_index":"陈海龙"},{"id":"38b6e3ab42ce78e34a964ff2e90b3a7d","title":"Slate 学习","content":"是什么\n\n\n\n\n\n\n\n\nSlate 是一个 完全 可定制的富文本编辑框架。通过 Slate，你可以构建出类似 Medium、Dropbox Paper 或者 Canvas 这样使用直观、富交互、体验业已成为 Web 应用标杆的编辑器。同时，你也无需担心在代码实现上陷入复杂度的泥潭之中。\n能做什么\n\n\n\n\n\n\n\n\n通过 Slate，你可以构建出类似 Medium、Dropbox Paper 或者 Canvas 这样使用直观、富交互、体验业已成为 Web 应用标杆的编辑器。同时，你也无需担心在代码实现上陷入复杂度的泥潭之中。Slate 之所以能做到这一点，是因为它的所有逻辑都是通过一系列的插件实现的。这样，你就再也不会被某项特性 在 或 不在 编辑器【核心】边界之内的问题所困扰了。你可以将它理解为在 React 和 Immutable 基础上，一种可插拔的 contenteditable 实现。另外，它的灵感来自于 Draft.js，Prosemirror 和 Quill 等类库。\n产生的背景\n\n\n\n\n\n\n\n\n为什么发明 Slate 呢？好吧…（注意，这部分内容包含了一些我的个人观点！）\n\n\n\n\n\n\n\n\n\n在发明 Slate 之前，我尝试了许多不同的富文本编辑器。我发现虽然它们在编写简单示例时基本没有问题，但一旦想要构建一些类似 Medium、Dropbox Paper 或者 Google Docs 这样的内容，你就会发现一些深层次的问题，比如…\n\n\n\n\n\n\n\n\n\n编辑器硬编码了文档的结构规范，难以定制。类似加粗和斜体的结构可以开箱即用，但评论、嵌入内容以及更多的定制性需求呢？\n\n\n\n\n\n\n\n\n\n对文档的编程式变换非常错综复杂。用户的编写体验可能不错，但在执行编程式变更时却不必要地复杂，而这对于构建高级的编辑行为至关重要。\n\n\n\n\n\n\n\n\n\n对 HTML、Markdown 等内容的序列化支持看起来像是事后加上的。这是一个非常常见的使用场景，但要实现将文档转换为 HTML 或 Markdown 的简单功能都需要编写大量的模板代码。\n\n\n\n\n\n\n\n\n\n重新学习一个新的视图层效率不高且十分受限。各种编辑器在重新发明视图层的轮子，而非使用 React 这样已有的技术方案。你必须学习一套带着自有限制和陷阱的新系统。\n\n\n\n\n\n\n\n\n\n**对协同编辑没有预先设计好的支持**。编辑器内部的数据结构使其无法用于实时、协作的编辑场景中，除非重写编辑器。\n\n\n\n\n\n\n\n\n\n代码仓库是单体的，而非小而可复用的。许多编辑器没有对外开放本应为开发者所复用的内部工具，以至于不得不重新发明轮子。\n\n\n\n\n\n\n\n\n\n无法构建复杂而存在嵌套关系的文档。不少编辑器是围绕简单的【扁平】文档结构设计的，这使得表格、嵌入内容和字幕等内容难以理解，有时甚至无法实现。\n\n\n\n\n\n\n\n\n\n当然，并非所有的编辑器都存在以上的问题，但如果你已经尝试过一些编辑器，你可能已经踩过类似的坑了。为了摆脱它们在 API 上的限制来达到你期望的用户体验，你得使用各种奇技淫巧，有些体验甚至是完全无法实现的。\n\n\n\n\n\n\n\n\n\n如果你遇到了相似的问题，那么也许你会喜欢上 Slate。让我来介绍一下 Slate 是如何解决这些问题的吧…\n提供了什么能力\n\n\n\n\n\n\n\n\nSlate 尝试通过一些原则来解决 “Why?” 这一节中\b的问题：\n\n\n\n\n\n\n\n\n\n作为一等公民的插件。 在 Slate 中最重要的一点是，插件是一等公民（first-class）的实体——甚至连编辑器的核心逻辑都是通过插件实现的。这意味着你能够 完全地 定制编辑体验，构建出对标 Medium 和 Canvas 那样的复杂编辑器，而无需对抗各种类库的预设条件。\n\n\n\n\n\n\n\n\n\n精简 Schema 的核心。 Slate 的核心逻辑并不对你所编辑的数据结构做任何假设，这意味着你在需要应对复杂场景时不会被编辑器预置的内容所束缚（译者注：此处 Schema 可理解为类似 XML Schema 的文档结构规范）。\n\n\n\n\n\n\n\n\n\n支持嵌套的文档模型。 Slate 所使用的文档模型是一棵嵌套的、递归的树，和 DOM 本身十分接近。这使得构建表格和嵌套引用等能够满足进阶需求的复杂组件成为了可能。当然，你同样可以使用单一的层级关系以保证简单性。\n\n\n\n\n\n\n\n\n\n无状态、不可变的数据。 通过使用 React 和 Immutable.js，我们是基于不可变数据结构，以无状态的方式构建 Slate 编辑器的。这大大降低了理解代码的难度，也节约了大量开发插件的时间。\n\n\n\n\n\n\n\n\n\n直观的 changes。 Slate 中的内容是通过 “change” 来编辑的，这是一种被设计为支持高阶使用，且极其符合直觉的概念。这样，我们就能够通过它来尽可能简单地编写插件和自定义功能了。\n\n\n\n\n\n\n\n\n\n**为协同编辑准备的数据模型**。 Slate 使用的数据模型——尤其是由 change 更改文档的方式——在设计时就已考虑到对协同编辑的支持。所以，如果你决定为编辑器添加协作功能，你不需要进行彻底的重构。（当然，这还需要你投入更多的努力！）\n\n\n\n\n\n\n\n\n\n明确的【核心】边界划分。 通过插件优先的架构与精简 Schema 的内核，Slate 对于【核心】和【自定义】有着明确得多的划分，从而保证核心的编辑体验不会为各种边缘情况所困扰。\n协同编辑，这个后面会持续关注slate-yjsyjs\nslate 文档不是很多，半小时看完主要内容 \n\n插件定制化\n渲染节点定制化\n按键监听处理\n数据格式编码、反编码\n数据存储就这点东西😱竟然有些同学凭借slate的使用拿了3.75,我不服，大写的不服\n\n","slug":"2022-04-29slate-lean","date":"2022-04-29T07:12:51.670Z","categories_index":"前端","tags_index":"前端","author_index":"陈海龙"},{"id":"be2d536c56c87a429a3dc062a6c5cd1f","title":"架构设计引发的血案","content":"记录个bug,并在此文中规避此处记下 hexo-theme-aurora 源码bug，没空时候帮他改\n.article .article-content p &#123;\n    font-size: .875rem;\n    line-height: 1.25rem;\n    margin-bottom: 0.5rem;\n    padding-bottom: 1rem;\n    word-break: break-all;\n&#125;\nbug复现\n(node:29) UnhandledPromiseRejectionWarning: Error: Forbidden\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Object.getDataReport (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11494:19)\n    at async Promise.all (index 3)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)\n(Use &#96;node --trace-warnings ...&#96; to show where the warning was created)\n(node:29) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag &#96;--unhandled-rejections&#x3D;strict&#96; (see https:&#x2F;&#x2F;nodejs.org&#x2F;api&#x2F;cli.html#cli_unhandled_rejections_mode). (rejection id: 19)\n(node:29) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n(node:29) UnhandledPromiseRejectionWarning: Error: Forbidden\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Object.getDataReport (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11494:19)\n    at async Promise.all (index 3)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)\n(node:29) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag &#96;--unhandled-rejections&#x3D;strict&#96; (see https:&#x2F;&#x2F;nodejs.org&#x2F;api&#x2F;cli.html#cli_unhandled_rejections_mode). (rejection id: 44)\nError: invalid json response body at https:&#x2F;&#x2F;login-daily.敏感数据-inc.cn:7799&#x2F;error&#x2F;illegal&#x2F;location reason: Unexpected token &lt; in JSON at position 0\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Object.refreshPendingPerformanceNum (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11487:25)\n    at async Promise.all (index 2)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)\nError: invalid json response body at https:&#x2F;&#x2F;login-daily.敏感数据-inc.cn:7799&#x2F;error&#x2F;illegal&#x2F;location reason: Unexpected token &lt; in JSON at position 0\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Promise.all (index 0)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)\nError: Forbidden\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Object.getDataReport (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11494:19)\n    at async Promise.all (index 3)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)\nError: Forbidden\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Promise.all (index 0)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)\nError: invalid json response body at https:&#x2F;&#x2F;login-daily.敏感数据-inc.cn:7799&#x2F;error&#x2F;illegal&#x2F;location reason: Unexpected token &lt; in JSON at position 0\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Promise.all (index 0)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)\nError: invalid json response body at https:&#x2F;&#x2F;login-daily.敏感数据-inc.cn:7799&#x2F;error&#x2F;illegal&#x2F;location reason: Unexpected token &lt; in JSON at position 0\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:13141:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Object.refreshPendingPerformanceNum (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:11487:25)\n    at async Promise.all (index 2)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-a053507d8512cb10a3ff.js:12208:22)\n\n\n源代码const [resp] &#x3D; await Promise.all([\n  getLoginInfo(ctx),\n  CommonModel.effects.refreshPendingObjectiveNum(req, ctx),\n  CommonModel.effects.refreshPendingPerformanceNum(req, ctx),\n  CommonModel.effects.getDataReport(req, ctx),\n])\n\nif (resp.success) &#123;\n  UserModal.actions.setUser(resp.result, req)\n&#125;\n增加异常捕获const [resp] &#x3D; await Promise.all([\n  getLoginInfo(ctx),\n  CommonModel.effects.refreshPendingObjectiveNum(req, ctx),\n  CommonModel.effects.refreshPendingPerformanceNum(req, ctx),\n  CommonModel.effects.getDataReport(req, ctx),\n]).catch(e&#x3D;&gt;&#123;\n  console.log(&quot;发生错误&quot;)\n  console.log(e)\n&#125;)\n日志日志仅 Forbidden 有效信息，大概是接口\n发生错误\nError: Forbidden\n    at &#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-7be1c2d9b56a41e863e3.js:13144:29\n    at processTicksAndRejections (internal&#x2F;process&#x2F;task_queues.js:95:5)\n    at async Promise.all (index 0)\n    at async Function.getInitialProps (&#x2F;code&#x2F;client&#x2F;.next&#x2F;server&#x2F;pages&#x2F;_app-7be1c2d9b56a41e863e3.js:12208:22)\n\n\n\n总结：\n因为acl 企业权限整了180天（顶配），时不时就出现系统瘫痪的情况，日常、线上都有此问题这架构设计的，估计没谁了。完全可以改成离职后，系统自动将用户禁权即可\n除此之外，sso也有个通病，三个月没改过密码，用户账户无法登录，需要重新密码方可登录\n\n","slug":"2022-04-29nextjs","date":"2022-04-29T02:56:00.000Z","categories_index":"Bug","tags_index":"Bug","author_index":"陈海龙"},{"id":"f5ccfd5f1ce5f78727a64a19669811c7","title":"Slate wiki-ui评论功能光标乱跳","content":"bug复现bug复现 (node:29) UnhandledPromiseRejectionWarning: Error: Forbidden at &amp;#x2F;code&amp;#x2F;client&amp;#x2F;.next&amp;#x2F;server&amp;#x2F;pages&amp;#x2F;_app-a05...\n\n在vite react项目上，输入汉字的同时按住删除键，光标会乱跳\n排查1:wiki（esm）组件问题，检查wiki-ui组件库，运行正常\n&quot;react&quot;: &quot;^16.8.0&quot;,\n&quot;react-dom&quot;: &quot;^16.8.0&quot;,\n排查2:vite加载wiki-ui组件时候，因为vite只能处理esm，在vite.config.ts, esbuildOptions自定义插件进行处理wiki-ui，不是很懂，换个角度\nesbuildOptions: &#123;\n  plugins: [\n    &#123;\n      name: &#39;originjs:commonjs&#39;,\n      setup(build) &#123;\n        build.onLoad(\n          &#123;\n            filter: &#x2F;@敏感数据-fe\\&#x2F;wiki-ui\\&#x2F;dist&#x2F;,\n            namespace: &#39;file&#39;,\n          &#125;,\n          async (&#123; path: id &#125;) &#x3D;&gt; &#123;\n            const code &#x3D; readFileSync(id).toString()\n            const result &#x3D; transformRequire(code, id)\n\n            return &#123;\n              contents: result,\n              loader: &#39;js&#39;,\n            &#125;\n          &#125;,\n        ),\n          build.onLoad(\n            &#123;\n              filter: &#x2F;@敏感数据-fe\\&#x2F;wiki-ui\\&#x2F;dist\\&#x2F;components\\&#x2F;iconfont&#x2F;,\n              namespace: &#39;file&#39;,\n            &#125;,\n            async (&#123; path: id &#125;) &#x3D;&gt; &#123;\n              const code &#x3D; readFileSync(id).toString()\n              const result &#x3D; transformRequire(code, id)\n\n              return &#123;\n                contents: result,\n                loader: &#39;js&#39;,\n              &#125;\n            &#125;,\n          )\n      &#125;,\n    &#125;,\n    esbuildPluginMonacoEditorNls(&#123;\n      locale: Languages.zh_hans,\n    &#125;),\n  ],\n&#125;,\n排查3:将wiki-ui组件放到umijs应用中运行\n# 搭建个项目\n# 移动demo组件到新项目\n# 运行，发现有相同的问题\n分析：1.dom输入过程中点击删除操作，那么在这个过程中，输入的内容是在contenteditable=&quot;true&quot; 中运行\n&lt;div data-gramm&#x3D;&quot;false&quot; role&#x3D;&quot;textbox&quot; spellcheck&#x3D;&quot;false&quot; class&#x3D;&quot;slash-slate-core&quot; id&#x3D;&quot;SLASH_SLATE_CORE&quot; data-app-id&#x3D;&quot;5A9BEA&quot; autocorrect&#x3D;&quot;false&quot; autocapitalize&#x3D;&quot;false&quot; data-slate-editor&#x3D;&quot;true&quot; data-slate-node&#x3D;&quot;value&quot; contenteditable&#x3D;&quot;true&quot; style&#x3D;&quot;position: relative; outline: none; white-space: pre-wrap; overflow-wrap: break-word;&quot;&gt;&lt;p data-slate-node&#x3D;&quot;element&quot;&gt;&lt;span data-slate-node&#x3D;&quot;text&quot;&gt;&lt;span data-slate-leaf&#x3D;&quot;true&quot;&gt;&lt;span data-slate-string&#x3D;&quot;true&quot;&gt;12121212哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈h h h h h h h h h h h h hs f s d f&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;\n2.合成事件应该会走合成事件，合成事件之后会执行渲染，web端走的是react-dom，比对正常运行的项目，和新项目的版本\n# react 17版本\n# react-dom 17版本\n3.react先进行react降版本 16.14.0，检查合成事件是否有问题，降版本后，运行，问题同样存在，大概可以断定是react-dom渲染出了问题，\n4.react-dom对react-dom降低版本到16.14.0, 后运行正常，那么问题应该在react-dom上\n5.github版本 16.14.0两个版本有什么不同：查看react发布日志，16.14.0之后的一个版本是17.0.0 (October 20, 2020) 看上去与事件和渲染相关的东西不多\nUse browser focusin and focusout for onFocus and onBlur. (@trueadm in #19186)\nMake all Capture events use the browser capture phase. (@trueadm in #19221)\nThrow if forwardRef or memo component returns undefined. (@gaearon in #19550)\nRemove event pooling. (@trueadm in #18969)\nFix onBeforeInput reporting an incorrect event.type. (@eps1lon in #19561)\nFix event.relatedTarget reported as undefined in Firefox. (@claytercek in #19607)\nFix rendering into a shadow root. (@Jack-Works in #15894)\nFix movementX&#x2F;Y polyfill with capture events. (@gaearon in #19672)\nArtifacts\nreact: https:&#x2F;&#x2F;unpkg.com&#x2F;react@17.0.1&#x2F;umd&#x2F;\nreact-art: https:&#x2F;&#x2F;unpkg.com&#x2F;react-art@17.0.1&#x2F;umd&#x2F;\nreact-dom: https:&#x2F;&#x2F;unpkg.com&#x2F;react-dom@17.0.1&#x2F;umd&#x2F;\nreact-is: https:&#x2F;&#x2F;unpkg.com&#x2F;react-is@17.0.1&#x2F;umd&#x2F;\nreact-test-renderer: https:&#x2F;&#x2F;unpkg.com&#x2F;react-test-renderer@17.0.1&#x2F;umd&#x2F;\nscheduler: https:&#x2F;&#x2F;unpkg.com&#x2F;scheduler@0.20.1&#x2F;umd&#x2F;\n6.github版本 18.1.0在往后找最新的版本，发现在18.1.0 (April 26, 2022)，改了一堆react-dom的bug,看上去也没相关的\nFix the false positive warning about react-dom&#x2F;client when using UMD bundle. (@alireza-molaee in #24274)\nFix suppressHydrationWarning to work in production too. (@gaearon in #24271)\nFix componentWillUnmount firing twice inside of Suspense. (@acdlite in #24308)\nFix some transition updates being ignored. (@acdlite in #24353)\nFix useDeferredValue causing an infinite loop when passed an unmemoized value. (@acdlite in #24247)\nFix throttling of revealing Suspense fallbacks. (@sunderls in #24253)\nFix an inconsistency in whether the props object is the same between renders. (@Andarist and @acdlite in #24421)\nFix a missing warning about a setState loop in useEffect. (@gaearon in #24298)\nFix a spurious hydration error. (@gnoff in #24404)\nWarn when calling setState in useInsertionEffect. (@gaearon in #24295)\nEnsure the reason for hydration errors is always displayed. (@gaearon in #24276)\n\n可用版本&quot;react&quot;: &quot;^16.14.0&quot;,\n&quot;react-dom&quot;: &quot;16.14.0&quot;,\n\n\n这个演示代码正常&lt;embed type&#x3D;&quot;text&#x2F;html&quot; src&#x3D;&quot;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;react-ts-m3y5yv?embed&#x3D;1&amp;file&#x3D;App.tsx&amp;view&#x3D;preview&quot; width&#x3D;&quot;100%&quot; height&#x3D;&quot;200&quot;&gt;\n&lt;!--加载太慢，复制地址查看吧--&gt; \n&lt;!--https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;react-ts-m3y5yv?embed&#x3D;1&amp;file&#x3D;App.tsx&amp;view&#x3D;preview--&gt; \n\n懵逼。。。从头开始\n待办事项中的评论功能（组件问题）光标乱跳的问题；\n0. 项目 + wiki-ui 异常\n1. 单运行wiki-ui demo 正常\n2. 运行slate + umijs 正常\n3. 运行wiki-ui  + umijs 异常\n4. slate 与  wiki-ui  不一样在于slate版本\n5. wiki-ui 做了什么事情： 定制化一些节点展示，光标的渲染和wiki-ui无关\n贫僧先去slate官网化缘，回来再战slate-lean\n化缘归来问题怎么解决\n","slug":"2022-04-29slate","date":"2022-04-29T01:21:42.659Z","categories_index":"前端","tags_index":"前端","author_index":"陈海龙"},{"id":"0539c4f1e60b889c5708d72373a67061","title":"企业微信： 图片附件无法预览的问题","content":"\n\n背景：安卓预览正常，部分iOS预览有问题（大部分手机都是正常的）downloadAttachment(downloadUrl).then(res &#x3D;&gt; &#123;\n      if (getWechatUserAgent(navigator.userAgent)) &#123; &#x2F;&#x2F; 判断是企业微信\n        const blob &#x3D; new Blob([res]);\n        wx.previewFile(&#123;\n          url: location.origin + downloadUrl, &#x2F;&#x2F; 需要预览文件的地址(必填，可以使用相对路径)\n          name: attachment.name, &#x2F;&#x2F; 需要预览文件的文件名，必须有带文件格式的后缀，例如.doc(不填的话取url的最后部分，最后部分是个包含格式后缀的文件名)\n          size: blob.size &#x2F;&#x2F; 需要预览文件的字节大小(必填，而且大小必须正确，否则会打开失败)\n        &#125;);\n        Toast.loading(i18n.loading, false)\n        return\n      &#125;\n      var reader &#x3D; new FileReader();\n      reader.readAsDataURL(res);   &#x2F;&#x2F; 转换为base64，可以直接放入a标签href\n      reader.onload &#x3D; function (e) &#123;\n        const anchorEle &#x3D; document.createElement(&#39;a&#39;)\n        document.body.appendChild(anchorEle)\n        anchorEle.href &#x3D; e?.target?.result as any\n        anchorEle.download &#x3D; attachment.name\n        anchorEle.click()\n        document.body.removeChild(anchorEle)\n      &#125;\n      Toast.loading(i18n.loading, false)\n    &#125;).catch(() &#x3D;&gt; &#123;\n      Toast.loading(i18n.loading, false)\n    &#125;)\n自研移动端、web端、企业微信桌面端都没问题，当然喽，每一个端展示效果是不一样的，代码也不一样。排查了耗费一定时间。\n\n\n排查 企业微信版本， 比对后发现，和正常使用的微信版本一致\n排查手机版本不一致，客户iphone12和 系统版本15.1，我们开发人员是14.+，所以我把我的手机升级到最新，我的手机升级后是正常的，那么可能是数据问题，数据\n排查数据，这是老系统的数据，和新系统数据走不同的业务代码，经排查也没问题\n排查size如果不准确也会出现上述问题，由于预发环境获取票据的信息与线上是不一致的，所以无法在预发进行排查，能做的事保证代码执行到 const blob = new Blob([res]);，并且能够获取到正确的size，所以进行了alert调试，这个在手机上比较直观，当然也可以vconsole【暂不考虑,因为之前开发人员没加，部门被砍掉，很多人被裁员了，所有项目都我来维护，没时间，不整了】，调试结果是size: 88214,各个手机都一样，用户手机也是88214，故排除size\n最后可能问题在于，用户手机上版本与手机不匹配，有兼容性bug，尝试升级企业微信，最后解决\n\n\n\n总结：如果考虑直接升级用户app版本，或许在第三步就解决问题了，我的iphoneX也不用升级到15.3了\n","slug":"2022-04-19wework-preview","date":"2022-04-28T10:44:33.245Z","categories_index":"WeWork","tags_index":"WeWork","author_index":"陈海龙"},{"id":"e8e2d8770b4064253c4faecef11f5628","title":"npm 包发布","content":"npm 包发布npm notice &#x3D;&#x3D;&#x3D; Tarball Details &#x3D;&#x3D;&#x3D; \nnpm notice name:          @tutu-fe&#x2F;wiki-ui                        \nnpm notice version:       0.1.1-beta                              \nnpm notice filename:      @tutu-fe&#x2F;wiki-ui-0.1.1-beta.tgz         \nnpm notice package size:  85.7 kB                                 \nnpm notice unpacked size: 449.9 kB                                \nnpm notice shasum:        973f5eb8d74de04c34b8e9c94536f8924b1f9570\nnpm notice integrity:     sha512-Uyo3zS0eaMOYE[...]60Ywmrmb&#x2F;brxQ&#x3D;&#x3D;\nnpm notice total files:   205                                     \nnpm notice \nnpm ERR! code E403\nnpm ERR! 403 403 Forbidden - PUT https:&#x2F;&#x2F;registry- - [maintainers_error] haotian.chen does not in maintainer list\nnpm ERR! 403 In most cases, you or one of your dependencies are requesting\nnpm ERR! 403 a package version that is forbidden by your security policy, or\nnpm ERR! 403 on a server you do not have access to.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     &#x2F;Users&#x2F;haotian&#x2F;.npm&#x2F;_logs&#x2F;2022-04-28T09_58_10_365Z-debug.log\n\n\n配置package.json&quot;maintainers&quot;: [\n  &quot;davishua&quot;,å\n  &quot;haotian.chen&quot;\n],\n\n\n结果\n","slug":"2022-04-28npm","date":"2022-04-28T10:02:44.787Z","categories_index":"Npm","tags_index":"Npm","author_index":"陈海龙"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-04-27T12:59:19.896Z","categories_index":"","tags_index":"","author_index":"陈海龙"},{"id":"ea6c6af45eb8fb66a729fbe0ec8cd8f3","title":"Nestjs 结合 knife4j","content":"nest-knife4jknife4j githubknife4j 文档knife4j可以理解为一套swagger皮肤，不使用knife4j默认是swagger 1版本的样式\n","slug":"2022-02-29node","date":"2022-03-01T11:55:47.000Z","categories_index":"Node","tags_index":"Node","author_index":"陈海龙"},{"id":"0523d16168244c5c50ce4e647b1f2e1c","title":"Nestjs文件上传","content":"文件上传Nestjs 上传文件Nestjs 上传文件\n","slug":"2022-02-28node","date":"2022-02-28T12:55:47.000Z","categories_index":"Node","tags_index":"Node","author_index":"陈海龙"},{"id":"517bb0f5aa3a9a70442efc92a9ecc4e8","title":"React 拖拽兼容","content":"拖拽在web pc 端、iframe、h5移动端存在差异\nweb pc 端支持：onMouseDown、onMouseUp、onMousemove、onDragStart、onDragEnd、nDragOver\niframe web pc 端支持：onMouseDown、onMouseUp、onMousemove\nh5移动端支持：onTouchStart、onTouchEnd、onTouchmove代码\n\nexport default function Draggable(props: Props) &#123;\n  const &#123; children, style, className, onDragFinish, onDraggingStart, onPositionGet, boundary &#x3D; &#123; x: MARGIN_TO_PAGE, y: MARGIN_TO_PAGE &#125; &#125; &#x3D; props\n  const [dragging, setDragging] &#x3D; useState(false)\n  const [attaching, setAttaching] &#x3D; useState(false)\n  const [top, setTop] &#x3D; useState(0)\n  const [left, setLeft] &#x3D; useState(0)\n  const ghostRef: MutableRefObject&lt;HTMLDivElement&gt; &#x3D; useRef()\n  const elRef: MutableRefObject&lt;HTMLDivElement&gt; &#x3D; useRef()\n\n  const onDragStart &#x3D; useCallback((e: DragEvent&lt;HTMLDivElement&gt; | TouchEvent&lt;HTMLDivElement&gt;) &#x3D;&gt; &#123;\n    let x\n    let y\n    if (isDrag(e)) &#123;\n      if (e.target !&#x3D;&#x3D; elRef.current) &#123;\n        return\n      &#125;\n      e.dataTransfer.setDragImage(emptyImg, 0, 0)\n      x &#x3D; e.clientX\n      y &#x3D; e.clientY\n    &#125; else &#123;\n      if (!e.target || !(e.target instanceof HTMLElement)) &#123;\n        return\n      &#125;\n      if (!parentHasClass(e.target, [rootStyles.feedbackRoot])) &#123;\n        return\n      &#125;\n      x &#x3D; e.touches[0].clientX\n      y &#x3D; e.touches[0].clientY\n    &#125;\n    e.stopPropagation()\n\n\n    const rect &#x3D; e.currentTarget.getBoundingClientRect()\n    const offsetX &#x3D; x - rect.x\n    const offsetY &#x3D; y - rect.y\n    setTop(rect.y)\n    setLeft(rect.x)\n    setDragging(true)\n\n    if (isDrag(e)) &#123;\n      dragoverHandle &#x3D; (event: DragEvent) &#x3D;&gt; &#123;\n        if (event.clientX || event.clientY) &#123;\n          setTop(event.clientY - offsetY)\n          setLeft(event.clientX - offsetX)\n        &#125;\n      &#125;\n      &#x2F;&#x2F; firefox 中，ondrag 拿不到鼠标的坐标，所以这里使用 document 的 dragover\n      document.addEventListener(&#39;dragover&#39;, dragoverHandle)\n    &#125; else &#123;\n      dragoverHandle &#x3D; (event: TouchEvent) &#x3D;&gt; &#123;\n        const touch &#x3D; event.touches[0]\n        if (touch.clientX || touch.clientY) &#123;\n          setTop(touch.clientY - offsetY)\n          setLeft(touch.clientX - offsetX)\n        &#125;\n      &#125;\n      document.addEventListener(&#39;touchmove&#39;, dragoverHandle)\n    &#125;\n    onDraggingStart()\n  &#125;, [])\n\n  const onDragEnd &#x3D; useCallback((event) &#x3D;&gt; &#123;\n    if (!ghostRef.current) &#123;\n      setDragging(false)\n      return\n    &#125;\n    const rect &#x3D; ghostRef.current.getBoundingClientRect()\n    const &#123; rel, abs &#125; &#x3D; calcAttachSide(rect, boundary)\n\n    setTop(abs.top)\n    setLeft(abs.left)\n    setAttaching(true)\n\n    if (isDrag(event)) &#123;\n      document.removeEventListener(&#39;dragover&#39;, dragoverHandle)\n    &#125; else &#123;\n      document.removeEventListener(&#39;touchmove&#39;, dragoverHandle)\n    &#125;\n\n    &#x2F;&#x2F; onPosition &amp;&amp; onPosition(rel) &#x2F;&#x2F; 其他业务\n\n\n    dragoverHandle &#x3D; null\n\n    setTimeout(() &#x3D;&gt; &#123;\n      onDragFinish(rel)\n      setAttaching(false)\n      setDragging(false)\n    &#125;, 300)\n  &#125;, [])\n\n  const onMousedown &#x3D; useCallback((e) &#x3D;&gt; &#123;\n    const x &#x3D; e.clientX\n    const y &#x3D; e.clientY\n    const rect &#x3D; e.currentTarget.getBoundingClientRect()\n    const offsetX &#x3D; x - rect.x\n    const offsetY &#x3D; y - rect.y\n    setTop(rect.y)\n    setLeft(rect.x)\n    setDragging(true)\n    if (e.preventDefault) &#123;\n      e.preventDefault()\n    &#125; else &#123;\n      e.returnValue &#x3D; false\n    &#125;\n    document.onmousemove &#x3D; function (ev: any) &#123;\n      const _event &#x3D; ev || window.event\n      const endx &#x3D; _event.clientX - offsetX\n      const endy &#x3D; _event.clientY - offsetY\n      setTop(endy)\n      setLeft(endx)\n    &#125;\n  &#125;, [])\n\n  const onMouseup &#x3D; useCallback((e) &#x3D;&gt; &#123;\n    if (!ghostRef.current) &#123;\n      setDragging(false)\n      return\n    &#125;\n    const rect &#x3D; ghostRef.current.getBoundingClientRect()\n    const &#123; rel, abs &#125; &#x3D; calcAttachSide(rect, boundary)\n\n    setTop(abs.top)\n    setLeft(abs.left)\n    setAttaching(true)\n\n    document.onmousemove &#x3D; null\n    onPositionGet &amp;&amp; onPositionGet(rel)\n    setTimeout(() &#x3D;&gt; &#123;\n      onDragFinish(rel)\n      setAttaching(false)\n      setDragging(false)\n    &#125;, 300)\n  &#125;, [])\n &#x2F;&#x2F; 能力检测\n  if (&#39;dragover&#39; in document.documentElement || &#39;ontouchstart&#39; in document.documentElement) &#123;\n    return (\n      &lt;div\n        style&#x3D;&#123;style&#125;\n        className&#x3D;&#123;className&#125;\n        draggable\n        onTouchStart&#x3D;&#123;onDragStart&#125;\n        onTouchEnd&#x3D;&#123;onDragEnd&#125;\n        onDragStart&#x3D;&#123;onDragStart&#125;\n        onDragEnd&#x3D;&#123;onDragEnd&#125;\n        onDragOver&#x3D;&#123;prevent&#125;\n        ref&#x3D;&#123;elRef&#125;\n      &gt;\n        &lt;div\n          style&#x3D;&#123;dragging ? &#123; top, left &#125; : null&#125;\n          className&#x3D;&#123;cn(&#123;\n            [styles.dragging]: dragging,\n            [styles.attaching]: attaching,\n          &#125;)&#125;\n          ref&#x3D;&#123;ghostRef&#125;\n        &gt;\n          &#123;children&#125;\n        &lt;&#x2F;div&gt;\n      &lt;&#x2F;div&gt;\n    )\n  &#125;\n  return (\n    &lt;div\n      style&#x3D;&#123;style&#125;\n      className&#x3D;&#123;className&#125;\n      draggable\n      onMouseDown&#x3D;&#123;onMousedown&#125;\n      onMouseUp&#x3D;&#123;onMouseup&#125;\n      ref&#x3D;&#123;elRef&#125;\n    &gt;\n      &lt;div\n        style&#x3D;&#123;dragging ? &#123; top, left &#125; : null&#125;\n        className&#x3D;&#123;cn(&#123;\n          [styles.dragging]: dragging,\n          [styles.attaching]: attaching,\n        &#125;)&#125;\n        ref&#x3D;&#123;ghostRef&#125;\n      &gt;\n        &#123;children&#125;\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n  )\n&#125;","slug":"2022-02-27react","date":"2022-02-27T13:30:47.000Z","categories_index":"React","tags_index":"React","author_index":"陈海龙"},{"id":"4bcdaa6034eed07b809bf3bc6eec819f","title":"React DOM","content":"17.0.0 (October 20, 2020)\n\n\n\n\n\n\n\n\nDelegate events to roots instead of document来看下原因\n\n\n\n\n\n\n\n\n\nReact自首次发布以来一直在自动执行事件委派。它直接在文档节点上为每个事件类型附加一个处理程序。\n\n\n\n\n\n\n\n\n\n虽然它提高了应用程序的性能，但由于文档节点上的事件委派，已经报告了许多问题。\n\n\n\n\n\n\n\n\n\n为了演示其中一个问题，让我们以select下拉列表为例。下面示例中的CountryDropDown是用于国家选择的React组件，它将被呈现给id为React root的div。react DOM容器封装在id为main的div中，该div有一个包含stopPropagation（）的更改事件。\n&lt;!--Div&#39;s change event contains stopPropagation()--&gt;\n&lt;div id&#x3D;&quot;main&quot;&gt;\n  &lt;!--Div where react component will be rendered --&gt;\n  &lt;div id&#x3D;&quot;react-root&quot;&gt;&lt;&#x2F;div&gt;\n&lt;&#x2F;div&gt;\n\n\nclass CountryDropDown extends React.Component &#123;\n  state &#x3D; &#123;\n    country: &#39;&#39;,\n  &#125;\n  const handleChange &#x3D; e &#x3D;&gt; &#123;\n    this.setState(&#123; country: e.target.value &#125;);\n  &#125;\n  render() &#123;\n    return (\n      &lt;table class&#x3D;&quot;table table-striped table-condensed&quot;&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;Country&lt;&#x2F;th&gt;\n            &lt;th&gt;Selected country&lt;&#x2F;th&gt;\n          &lt;&#x2F;tr&gt;\n        &lt;&#x2F;thead&gt;\n        &lt;tbody&gt;\n          &lt;tr&gt;\n            &lt;td&gt;\n              &lt;select value&#x3D;&#123;this.state.country&#125;\n                onChange&#x3D;&#123;this.handleChange&#125;\n              &gt;\n                &lt;option value&#x3D;&quot;&quot;&gt;--Select--&lt;&#x2F;option&gt;\n                &lt;option value&#x3D;&quot;India&quot;&gt;India&lt;&#x2F;option&gt;\n                &lt;option value&#x3D;&quot;US&quot;&gt;US&lt;&#x2F;option&gt;\n                &lt;option value&#x3D;&quot;Dubai&quot;&gt;Dubai&lt;&#x2F;option&gt;\n              &lt;&#x2F;select&gt;\n            &lt;&#x2F;td&gt;\n            &lt;td&gt;\n              &#123;this.state.country&#125;\n            &lt;&#x2F;td&gt;\n          &lt;&#x2F;tr&gt;\n        &lt;&#x2F;tbody&gt;\n      &lt;&#x2F;table&gt;\n    );\n  &#125;\n&#125;\nReactDOM.render(&lt;CountryDropDown &#x2F;&gt;, document.getElementById(&#39;react-root&#39;));\n\n\n\n\n\n\n\n\n\n\n将更改事件附加到主div\ndocument.getElementById(&quot;main&quot;).addEventListener(\n  &quot;change&quot;,\n  function (e) &#123;\n    e.stopPropagation();\n  &#125;,\n  false\n);\n\n\n\n\n\n\n\n\n\n当选择一个国家时，我们无法看到所选的国家\n\n\n\n\n\n\n\n\n\n此意外行为的原因是附加到文档节点的onChange dropdown事件。包含e.stopPropagation（）的主div的change事件阻止了下拉菜单的onChange事件。\n\n\n\n\n\n\n\n\n\n为了解决此类问题，React 17不再在文档级别附加事件处理程序。相反，它将它们附加到根DOM容器中，React树将被渲染到该容器中。\n\n\n\n\n\n\n\n\n\n在React 17中进行更改后，事件被附加到根DOM容器，React树被呈现到该容器中。在我们的示例中，onChange事件的下拉列表将附加到id为react root的div。当选择任何国家&#x2F;地区呈现预期行为时，将触发此事件。\n","slug":"2022-05-04react","date":"2022-02-27T13:30:47.000Z","categories_index":"React","tags_index":"React","author_index":"陈海龙"},{"id":"0fe71bf4ca9007e9b607927107758aa8","title":"Sentry错误日志获取","content":"\n先上图\n\n\n\nThis is a quick getting started guide. For in-depth instructions on integrating Sentry with React, view our complete documentation.\nTo instrument your React application with Sentry, first install the @sentry/react and @sentry/tracing packages:\n# Using yarn\nyarn add @sentry&#x2F;react @sentry&#x2F;tracing\n\n# Using npm\nnpm install --save @sentry&#x2F;react @sentry&#x2F;tracing\n\nNext, import and initialize the Sentry module as early as possible, before initializing React:\nimport React from &quot;react&quot;;\nimport ReactDOM from &quot;react-dom&quot;;\nimport * as Sentry from &quot;@sentry&#x2F;react&quot;;\nimport &#123; Integrations &#125; from &quot;@sentry&#x2F;tracing&quot;;\nimport App from &quot;.&#x2F;App&quot;;\n\nSentry.init(&#123;\n  dsn: &quot;https:&#x2F;&#x2F;a5f1c39789b24bb7a434868b677e0c65@&#x2F;1063&quot;,\n  integrations: [new Integrations.BrowserTracing()],\n\n  &#x2F;&#x2F; Set tracesSampleRate to 1.0 to capture 100%\n  &#x2F;&#x2F; of transactions for performance monitoring.\n  &#x2F;&#x2F; We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n&#125;);\n\nReactDOM.render(&lt;App &#x2F;&gt;, document.getElementById(&quot;root&quot;));\n\n&#x2F;&#x2F; Can also use with React Concurrent Mode\n&#x2F;&#x2F; ReactDOM.createRoot(document.getElementById(&#39;root&#39;)).render(&lt;App &#x2F;&gt;);\n\nThe above configuration captures both error and performance data. To reduce the volume of performance data captured, change tracesSampleRate to a value between 0 and 1.\nAfter this step, Sentry will report any uncaught exceptions triggered by your application.\nYou can trigger your first event from your development environment by raising an exception somewhere within your application. An example of this would be rendering a button whose onClick handler attempts to invoke a method that does not exist:\nreturn &lt;button onClick&#x3D;&#123;methodDoesNotExist&#125;&gt;Break the world&lt;&#x2F;button&gt;;\n\nOnce you’ve verified the library is initialized properly and sent a test event, consider visiting our complete React docs. There you’ll find additional instructions for surfacing valuable context from React error boundaries, React Router, Redux, and more.\n","slug":"2021-06-20sentry","date":"2021-06-20T12:12:47.000Z","categories_index":"Web","tags_index":"Web","author_index":"陈海龙"},{"id":"40c248981d4dc9431fe8a0d461ef29a9","title":"CSS 自动生成 .d.ts","content":"CSS Module Typedaddresslink\nInstallInstall deps first:\nrequirenpm install typed-css-modules\nif you need lessnpm install less\nif you need scss&#x2F;sassnpm install sass\nif you need stylusnpm install stylus\n\n\n\n\n\n\n\n\n\nModules can be installed globally. yarn is supported.\n\n\n\n\n\n\n\n\n\nTo switch the package manager (npm or yarn), you need to change the settings npm.packageManager of the built-in module vscode.npm.\nConfiguringBy default, the option to automatically format .d.ts files using eslint is enabled. You can disable this feature through the setting “typed-css-modules.eslint.enable”: false.\nUsageput\n// @type\nor\n/* @type */\nahead of your .css&#x2F;.less&#x2F;.scss&#x2F;.sass&#x2F;.styl file, and save, you will get a d.ts file in same directory.\npreview\ndemo&#x2F;* @type *&#x2F;\n\n.root &#123;\n  padding: 16px;\n  min-height: 100%;\n\n  .empty-wrapper &#123;\n    height: 380px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  &#125;\n\n  &gt; h3 &#123;\n    font-size: inherit;\n    margin-bottom: 4px;\n  &#125;\n\n  .toolbar-wrapper &#123;\n    position: relative;\n\n    .toolbar &#123;\n      position: absolute;\n      margin: 12px 0;\n      z-index: 1;\n\n      &amp;.static &#123;\n        position: static;\n      &#125;\n\n      &gt; *:not(:first-child) &#123;\n        margin-left: 8px;\n      &#125;\n    &#125;\n  &#125;\n  .buttons&#123;\n    button &#123;\n      margin-right: 8px;\n    &#125;\n  &#125;\n&#125;\n.use-select&#123;\n  width: 300px\n&#125;\ndeclare const styles: &#123;\n  readonly &quot;root&quot;: string;\n  readonly &quot;empty-wrapper&quot;: string;\n  readonly &quot;toolbar-wrapper&quot;: string;\n  readonly &quot;toolbar&quot;: string;\n  readonly &quot;static&quot;: string;\n  readonly &quot;buttons&quot;: string;\n  readonly &quot;use-select&quot;: string;\n&#125;;\nexport &#x3D; styles;\n\n\nproblem\n\n\n\n\n\n\n\n\nCreates .d.ts files from css-modules .css&#x2F;.less&#x2F;.scss&#x2F;.sass&#x2F;.styl files.\n\n\n\n\n\n\n\n\n\nError: vscode-typed-css-modules: Cannot find global module ‘typed-css-modules’\nnpm install -g typed-css-modules","slug":"2021-06-10scss2type","date":"2021-06-10T13:30:47.000Z","categories_index":"工具","tags_index":"工具","author_index":"陈海龙"},{"id":"c52c4d2131250825dcd85d4b917f6cb4","title":"vscode GitHub Copilot","content":"Copilot\n\n\n\nYour AI pair programmer\n官网\n支持开发工具\n\n\n\n\n\n\n\n\nsupport Visual Studio Code, Neovim, and IntelliJ-based IDEs like JetBrains IntelliJ IDEA, Android Studio or PyCharm.\n注册\n需要人员审批通过，等[1-2 工作日]\n\n注册&#x2F;结果查看\n\n\n\n\n\n\n\n\n\nJoin the GitHub Copilot waitlistAccess is limited to a small group of testers during the technical preview of GitHub Copilot. Sign up today for your chance to try it out and help us improve.\n\n\n\n\n\n\n\n\n\nYou’re already on the waitlist for GitHub Copilot! We’ll notify you when we’ve enabled it on your account. Make sure your primary email address is up-to-date so we can notify you.\nvscode 安装插件 Copilot\n","slug":"2022-05-08vscode","date":"2020-05-08T03:25:00.000Z","categories_index":"vscode","tags_index":"vscode,AI编程","author_index":"陈海龙"},{"id":"8725438c6f131bdb20c6bd50ebaf7e45","title":"Iterm2美化终端","content":"oh-my-zsh 插件推荐 :autojump、zsh-autosuggestion 以及 zsh-syntax-highlighting推荐博客左岸博客使用效果\n","slug":"2017-07-09item2","date":"2019-10-30T13:30:47.000Z","categories_index":"工具","tags_index":"工具","author_index":"陈海龙"},{"id":"e8f86794a8b73abb4c26e162bb1c7550","title":"Git public key","content":"[root@izbp1hun1qsl59e2nzqyvcz ~]# git config --global user.name &quot;hailong.chen&quot;\n[root@izbp1hun1qsl59e2nzqyvcz ~]# git config --global user.email &quot;841660202@qq.com&quot;\n\n\n\n\n\n\n\n\n\n\nSSHSSH keysSSH key 可以让你在你的电脑和Code服务器之间建立安全的加密连接。 先执行以下语句来判断是否已经存在本地公钥：cat ~/.ssh/id_rsa.pub如果你看到一长串以 ssh-rsa或 ssh-dsa开头的字符串, 你可以跳过 ssh-keygen的步骤。提示: 最好的情况是一个密码对应一个ssh key，但是那不是必须的。你完全可以跳过创建密码这个步骤。请记住设置的密码并不能被修改或获取。你可以按如下命令来生成ssh keyssh-keygen -t rsa -C &quot;841660202@qq.com&quot;这个指令会要求你提供一个位置和文件名去存放键值对和密码，你可以点击Enter键去使用默认值。用以下命令获取你生成的公钥：cat ~/.ssh/id_rsa.pub复制这个公钥放到你的个人设置中的SSH&#x2F;My SSH Keys下，请完整拷贝从ssh-开始直到你的用户名和主机名为止的内容。如果打算拷贝你的公钥到你的粘贴板下，请参考你的操作系统使用以下的命令：Windows:clip &lt; ~/.ssh/id_rsa.pubMac:pbcopy &lt; ~/.ssh/id_rsa.pubGNU&#x2F;Linux (requires xclip):xclip -sel clip &lt; ~/.ssh/id_rsa.pubApplicationsEclipse如何在Eclipse中添加ssh key: https://wiki.eclipse.org/EGit/User_Guide#Eclipse_SSH_ConfigurationTip: Non-default OpenSSH key file names or locations如果，不管你有什么理由，当你决定去用一个非默认的位置或文件名去存放你的ssh key。你必须配置好你的ssh客户端以找到你的ssh私钥去连接Code服务器，对于OpenSSH客户端，这个通常是在~&#x2F;.ssh&#x2F;config类似的位置配置的：Host my-git.company.comRSAAuthentication yesIdentityFile ~&#x2F;my-ssh-key-directory&#x2F;company-com-private-key-filename\nLast login: Sun Apr 17 16:06:15 on console\nN&#x2F;A: version &quot;N&#x2F;A -&gt; N&#x2F;A&quot; is not yet installed.\n\nYou need to run &quot;nvm install N&#x2F;A&quot; to install it before using it.\nN&#x2F;A: version &quot;N&#x2F;A -&gt; N&#x2F;A&quot; is not yet installed.\n\nYou need to run &quot;nvm install N&#x2F;A&quot; to install it before using it.\n\nThe default interactive shell is now zsh.\nTo update your account to use zsh, please run &#96;chsh -s &#x2F;bin&#x2F;zsh&#96;.\nFor more details, please visit https:&#x2F;&#x2F;support.apple.com&#x2F;kb&#x2F;HT208050.\nchenhailong@chenhailongdeMacBook-Pro:~$ &#x2F;Users&#x2F;chenhailong&#x2F;Desktop \n-bash: &#x2F;Users&#x2F;chenhailong&#x2F;Desktop: is a directory\nchenhailong@chenhailongdeMacBook-Pro:~$ cd &#x2F;Users&#x2F;chenhailong&#x2F;Desktop \nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git clone git@github.com:841660202&#x2F;841660202.github.io.git\nCloning into &#39;841660202.github.io&#39;...\nThe authenticity of host &#39;github.com (20.205.243.166)&#39; can&#39;t be established.\nED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF&#x2F;zLDA0zPMSvHdkr4UvCOqU.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? yes\nWarning: Permanently added &#39;github.com&#39; (ED25519) to the list of known hosts.\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git clone git@github.com:841660202&#x2F;841660202.github.io.git\nCloning into &#39;841660202.github.io&#39;...\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ pbcopy &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub\n-bash: &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa.pub: No such file or directory\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ cat ~&#x2F;.ssh&#x2F;id_rsa.pub\ncat: &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa.pub: No such file or directory\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git config --global user.name &quot;hailong.chen&quot;\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ \nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git config --global user.email &quot;841660202@qq.com&quot;\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ cat ~&#x2F;.ssh&#x2F;id_rsa.pub\ncat: &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa.pub: No such file or directory\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ ssh-keygen -t rsa -C &quot;841660202@qq.com&quot;\nGenerating public&#x2F;private rsa key pair.\nEnter file in which to save the key (&#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa): \nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa\nYour public key has been saved in &#x2F;Users&#x2F;chenhailong&#x2F;.ssh&#x2F;id_rsa.pub\nThe key fingerprint is:\nSHA256:bdtIDeRXGKxGTEa&#x2F;Ex3QdPtVoOUiwuiq7YKjKrLakbU 841660202@qq.com\nThe key&#39;s randomart image is:\n+---[RSA 3072]----+\n|         +&#x3D;.o**.o|\n|       o +o.o*.oo|\n|      . o.+.* o..|\n|     .   oo&#x3D; +  o|\n|    . . S.+ +   .|\n|   o o   o + .   |\n| .o E     o .    |\n|&#x3D;..+             |\n|@oooo            |\n+----[SHA256]-----+\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ pbcopy &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ git clone git@github.com:841660202&#x2F;841660202.github.io.git\nCloning into &#39;841660202.github.io&#39;...\nremote: Enumerating objects: 441, done.\nremote: Counting objects: 100% (441&#x2F;441), done.\nremote: Compressing objects: 100% (216&#x2F;216), done.\nremote: Total 441 (delta 208), reused 401 (delta 168), pack-reused 0\nReceiving objects: 100% (441&#x2F;441), 1.34 MiB | 1.05 MiB&#x2F;s, done.\nResolving deltas: 100% (208&#x2F;208), done.\nchenhailong@chenhailongdeMacBook-Pro:~&#x2F;Desktop$ \n\n\n设置github SSH keyshttps://github.com/settings/keys\n","slug":"2016-06-20git","date":"2019-10-30T13:30:47.000Z","categories_index":"git","tags_index":"git","author_index":"陈海龙"},{"id":"8efdd810acba9c22bd1fc9e846bc2c89","title":"批量删除目录","content":"删除某个目录下所有子目录的node_modules# 查找 &#x2F;tmp&#x2F;test&#x2F; 子目录下所有 modu 执行删除\nfind &#x2F;tmp&#x2F;test&#x2F; -type d -name modu |xargs rm -rf\n\n# 查找 &#x2F;tmp&#x2F;test&#x2F; 子目录下所有 node_modules 执行删除\nfind &#x2F;tmp&#x2F;test&#x2F; -type d -name node_modules |xargs rm -rf","slug":"2019-10-30shell","date":"2019-10-30T13:30:47.000Z","categories_index":"Shell","tags_index":"Shell","author_index":"陈海龙"},{"id":"9898e57ef559824ae32861e6fc17d4db","title":"Layoffs","content":"一家上市公司近期「B业」人数变化\n","slug":"2022-03-25Layoffs","date":"2019-10-30T13:30:47.000Z","categories_index":"Layoffs","tags_index":"Layoffs","author_index":"陈海龙"},{"id":"fa6ca4165b8b582ff1a69b1ccf9de547","title":"Nestjs服务端技术栈","content":"NestJS中文文档NestJS中文文档NestJS中文文档github 42.2K\n\n\n\n\n\n\n\n\n\nA progressive Node.js framework for building efficient, scalable, and enterprise-grade server-side applications on top of TypeScript &amp; JavaScript (ES6, ES7, ES8) 🚀\nTypeORMTypeORM中文文档github地址 26.3K\n\n\n\n\n\n\n\n\n\nORM for TypeScript and JavaScript (ES7, ES6, ES5). Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, SAP Hana, WebSQL databases. Works in NodeJS, Browser, Ionic, Cordova and Electron platforms.\n","slug":"2021-06-30node","date":"2015-11-12T02:55:47.000Z","categories_index":"Node","tags_index":"Node","author_index":"陈海龙"},{"id":"6f9f700e5a026be1d86747100cd27059","title":"Web office预览","content":"第一步将文件上传到你的服务器里，并支持url下载这个文件。第二步访问：http://view.officeapps.live.com/op/view.aspx?src=要预览文件的url地址（记得url编码哦）第三步可以使用iframe嵌入你的系统更多详情查看：https://www.microsoft.com/en-us/microsoft-365/blog/2013/04/10/office-web-viewer-view-office-documents-in-a-browser/?eu=true\n","slug":"2021-09-07web","date":"2015-11-12T02:55:47.000Z","categories_index":"Web","tags_index":"Web","author_index":"陈海龙"},{"id":"038636b617c3d3d43c65b95b558e1735","title":"node-dev","content":"在幕后用ts-node调整node-dev\n作用：在幕后用ts-node调整node-dev\n优点：\n任意依赖的文件改变时候，重启node process，但是共享ts编译线程。\n因为不需要每次ts-node编译的实例化，而提升性能\n\n\n配置项：\n注意事项：\n截图：\n\n","slug":"2021-11-02node","date":"2015-11-12T02:55:47.000Z","categories_index":"Node","tags_index":"Node","author_index":"陈海龙"},{"id":"c15b0fd9b66d6749d042b7d88c5bcd12","title":"简书迁移到OSS","content":"命令cat .&#x2F;* |grep uploadimages.jianshu.io &gt; image.txt\nmkdir img3d\ncd img3d\nwget -i ..&#x2F;image.txt\nsed -i&#39;&#39; -e &#39;s&#x2F;!\\[image.png\\](&#x2F;&#x2F;g&#39; image.txt\nsed -i&#39;&#39; -e &#39;s&#x2F;)&#x2F;&#x2F;g&#39; image.txt\n迁移简书图片下载后重命名#! &#x2F;bin&#x2F;sh\n\nfor eachfile in &#96;ls -B&#96;\ndo  \n  # echo $&#123;eachfile%%\\%3F*&#125; # 截掉最后.txt    # $ % https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;b3bdc3b3968e\n  filename&#x3D;$&#123;eachfile%%\\%3F*&#125;\n  filehead&#x3D;&#96;echo $eachfile | awk -F \\%3F &#39;&#123;print $1 &#125;&#39;&#96;\n  filelast&#x3D;&#96;echo $eachfile | awk -F \\%3F &#39;&#123;print $2 &#125;&#39;&#96;\n  # mv $filename.txt $&#123;filelast&#125;_$filehead.txt\n  # https:&#x2F;&#x2F;baijiahao.baidu.com&#x2F;s?id&#x3D;1726788915185806701&amp;wfr&#x3D;spider&amp;for&#x3D;pc\n  echo &#39;--&#39;\n  # echo $filename\n  echo $filehead #分割字符左边部分\n  echo $filelast #分割字符右边部分\n  # 右边文件存在的情况下才处理\n  if [ &quot;$filelast&quot; !&#x3D; &quot;&quot; ]\n  then\n    echo &#39;执行rename &#39;\n    mv $eachfile $filehead\n  fi\n\ndone\n","slug":"2022-04-27mv-blog-jianshu","date":"2015-11-12T02:55:47.000Z","categories_index":"Shell","tags_index":"Shell","author_index":"陈海龙"}]